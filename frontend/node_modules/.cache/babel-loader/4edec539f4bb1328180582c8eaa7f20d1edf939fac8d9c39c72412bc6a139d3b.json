{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shadan Syed Kazmi\\\\Projects\\\\msteams-clone\\\\src\\\\Components\\\\TeamFeed.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { CommentText, CommentMetadata, CommentGroup, CommentContent, CommentAvatar, CommentActions, CommentAuthor, Comment, Form, FormTextArea, Button, Icon } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeamFeed = () => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [replyText, setReplyText] = useState('');\n  const [replyingIndex, setReplyingIndex] = useState(null);\n\n  // Function to handle adding a new comment\n  const handleAddComment = () => {\n    if (newComment.trim() !== '') {\n      const currentDate = new Date().toLocaleString('en-US', {\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: true\n      });\n      const commentData = {\n        author: 'You',\n        // Replace with actual user information if available\n        timestamp: currentDate,\n        text: newComment,\n        replies: []\n      };\n      setComments([...comments, commentData]);\n      setNewComment('');\n    }\n  };\n\n  // Function to handle adding a reply to a comment\n  const handleAddReply = index => {\n    if (replyText.trim() !== '') {\n      const currentDate = new Date().toLocaleString('en-US', {\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: true\n      });\n      const newReply = {\n        author: 'You',\n        // Replace with actual user information if available\n        timestamp: currentDate,\n        text: replyText\n      };\n      const updatedComments = [...comments];\n      updatedComments[index].replies.push(newReply);\n      setComments(updatedComments);\n      setReplyText('');\n      setReplyingIndex(null);\n    }\n  };\n\n  // Function to set the index of the comment being replied to\n  const startReply = index => {\n    setReplyingIndex(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingLeft: '100px',\n      marginTop: '7rem',\n      minHeight: '100vh',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingBottom: '4rem',\n        marginBottom: '4rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(CommentGroup, {\n        threaded: true,\n        size: \"large\",\n        children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(Comment, {\n          children: [/*#__PURE__*/_jsxDEV(CommentAvatar, {\n            as: \"a\",\n            src: \"https://react.semantic-ui.com/images/avatar/small/matt.jpg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CommentContent, {\n            children: [/*#__PURE__*/_jsxDEV(CommentAuthor, {\n              as: \"a\",\n              children: comment.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CommentMetadata, {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: comment.timestamp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CommentText, {\n              children: comment.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CommentActions, {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                onClick: () => startReply(index),\n                children: \"Reply\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this), comment.replies.length > 0 && /*#__PURE__*/_jsxDEV(CommentGroup, {\n              children: comment.replies.map((reply, replyIndex) => /*#__PURE__*/_jsxDEV(Comment, {\n                children: [/*#__PURE__*/_jsxDEV(CommentAvatar, {\n                  as: \"a\",\n                  src: \"https://react.semantic-ui.com/images/avatar/small/jenny.jpg\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(CommentContent, {\n                  children: [/*#__PURE__*/_jsxDEV(CommentAuthor, {\n                    as: \"a\",\n                    children: reply.author\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(CommentMetadata, {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: reply.timestamp\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(CommentText, {\n                    children: reply.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 49\n                }, this)]\n              }, `${index}-${replyIndex}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 37\n            }, this), replyingIndex === index && /*#__PURE__*/_jsxDEV(Form, {\n              reply: true,\n              children: [/*#__PURE__*/_jsxDEV(FormTextArea, {\n                value: replyText,\n                onChange: e => setReplyText(e.target.value),\n                placeholder: \"Write a reply...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                content: \"Add Reply\",\n                labelPosition: \"left\",\n                icon: \"edit\",\n                primary: true,\n                onClick: () => handleAddReply(index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        bottom: '0',\n        width: '100%',\n        background: 'white',\n        padding: '1rem',\n        borderTop: '1px solid #ddd'\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        reply: true,\n        children: [/*#__PURE__*/_jsxDEV(FormTextArea, {\n          value: newComment,\n          onChange: e => setNewComment(e.target.value),\n          placeholder: \"Add a comment...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          content: \"Add Comment\",\n          labelPosition: \"left\",\n          icon: \"edit\",\n          primary: true,\n          onClick: handleAddComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          icon: true,\n          labelPosition: \"left\",\n          primary: true,\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), \"Upload\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(TeamFeed, \"maHJI2U4dS1FBj5Mx1HDebWv0IM=\");\n_c = TeamFeed;\nexport default TeamFeed;\nvar _c;\n$RefreshReg$(_c, \"TeamFeed\");","map":{"version":3,"names":["React","useState","CommentText","CommentMetadata","CommentGroup","CommentContent","CommentAvatar","CommentActions","CommentAuthor","Comment","Form","FormTextArea","Button","Icon","jsxDEV","_jsxDEV","TeamFeed","_s","comments","setComments","newComment","setNewComment","replyText","setReplyText","replyingIndex","setReplyingIndex","handleAddComment","trim","currentDate","Date","toLocaleString","hour","minute","hour12","commentData","author","timestamp","text","replies","handleAddReply","index","newReply","updatedComments","push","startReply","style","paddingLeft","marginTop","minHeight","position","children","paddingBottom","marginBottom","threaded","size","map","comment","as","src","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","reply","replyIndex","value","onChange","e","target","placeholder","content","labelPosition","icon","primary","bottom","width","background","padding","borderTop","name","_c","$RefreshReg$"],"sources":["C:/Users/Shadan Syed Kazmi/Projects/msteams-clone/src/Components/TeamFeed.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    CommentText,\r\n    CommentMetadata,\r\n    CommentGroup,\r\n    CommentContent,\r\n    CommentAvatar,\r\n    CommentActions,\r\n    CommentAuthor,\r\n    Comment,\r\n    Form,\r\n    FormTextArea,\r\n    Button,\r\n    Icon,\r\n} from 'semantic-ui-react';\r\n\r\nconst TeamFeed = () => {\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState('');\r\n    const [replyText, setReplyText] = useState('');\r\n    const [replyingIndex, setReplyingIndex] = useState(null);\r\n\r\n    // Function to handle adding a new comment\r\n    const handleAddComment = () => {\r\n        if (newComment.trim() !== '') {\r\n            const currentDate = new Date().toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });\r\n            const commentData = {\r\n                author: 'You', // Replace with actual user information if available\r\n                timestamp: currentDate,\r\n                text: newComment,\r\n                replies: [],\r\n            };\r\n            setComments([...comments, commentData]);\r\n            setNewComment('');\r\n        }\r\n    };\r\n\r\n    // Function to handle adding a reply to a comment\r\n    const handleAddReply = (index) => {\r\n        if (replyText.trim() !== '') {\r\n            const currentDate = new Date().toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });\r\n            const newReply = {\r\n                author: 'You', // Replace with actual user information if available\r\n                timestamp: currentDate,\r\n                text: replyText,\r\n            };\r\n            const updatedComments = [...comments];\r\n            updatedComments[index].replies.push(newReply);\r\n            setComments(updatedComments);\r\n            setReplyText('');\r\n            setReplyingIndex(null);\r\n        }\r\n    };\r\n\r\n    // Function to set the index of the comment being replied to\r\n    const startReply = (index) => {\r\n        setReplyingIndex(index);\r\n    };\r\n\r\n    return (\r\n        <div style={{ paddingLeft: '100px', marginTop: '7rem', minHeight: '100vh', position: 'relative' }}>\r\n            <div style={{ paddingBottom: '4rem', marginBottom: '4rem' }}>\r\n                <CommentGroup threaded size='large'>\r\n                    {comments.map((comment, index) => (\r\n                        <Comment key={index}>\r\n                            <CommentAvatar as='a' src='https://react.semantic-ui.com/images/avatar/small/matt.jpg' />\r\n                            <CommentContent>\r\n                                <CommentAuthor as='a'>{comment.author}</CommentAuthor>\r\n                                <CommentMetadata>\r\n                                    <span>{comment.timestamp}</span>\r\n                                </CommentMetadata>\r\n                                <CommentText>{comment.text}</CommentText>\r\n                                <CommentActions>\r\n                                    <a onClick={() => startReply(index)}>Reply</a>\r\n                                </CommentActions>\r\n                                {comment.replies.length > 0 && (\r\n                                    <CommentGroup>\r\n                                        {comment.replies.map((reply, replyIndex) => (\r\n                                            <Comment key={`${index}-${replyIndex}`}>\r\n                                                <CommentAvatar as='a' src='https://react.semantic-ui.com/images/avatar/small/jenny.jpg' />\r\n                                                <CommentContent>\r\n                                                    <CommentAuthor as='a'>{reply.author}</CommentAuthor>\r\n                                                    <CommentMetadata>\r\n                                                        <span>{reply.timestamp}</span>\r\n                                                    </CommentMetadata>\r\n                                                    <CommentText>{reply.text}</CommentText>\r\n                                                </CommentContent>\r\n                                            </Comment>\r\n                                        ))}\r\n                                    </CommentGroup>\r\n                                )}\r\n                                {replyingIndex === index && (\r\n                                    <Form reply>\r\n                                        <FormTextArea\r\n                                            value={replyText}\r\n                                            onChange={(e) => setReplyText(e.target.value)}\r\n                                            placeholder='Write a reply...'\r\n                                        />\r\n                                        <Button\r\n                                            content='Add Reply'\r\n                                            labelPosition='left'\r\n                                            icon='edit'\r\n                                            primary\r\n                                            onClick={() => handleAddReply(index)}\r\n                                        />\r\n                                    </Form>\r\n                                )}\r\n                            </CommentContent>\r\n                        </Comment>\r\n                    ))}\r\n                </CommentGroup>\r\n            </div>\r\n            <div style={{ position: 'fixed', bottom: '0', width: '100%', background: 'white', padding: '1rem', borderTop: '1px solid #ddd' }}>\r\n                <Form reply>\r\n                    <FormTextArea\r\n                        value={newComment}\r\n                        onChange={(e) => setNewComment(e.target.value)}\r\n                        placeholder='Add a comment...'\r\n                    />\r\n                    <Button\r\n                        content='Add Comment'\r\n                        labelPosition='left'\r\n                        icon='edit'\r\n                        primary\r\n                        onClick={handleAddComment}\r\n                    />\r\n                    {/* Example upload button */}\r\n                    <Button icon labelPosition='left' primary>\r\n                        <Icon name='upload' />\r\n                        Upload\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TeamFeed;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}