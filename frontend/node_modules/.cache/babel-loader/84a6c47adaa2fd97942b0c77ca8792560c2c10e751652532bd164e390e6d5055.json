{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shadan Syed Kazmi\\\\Projects\\\\msteams-clone\\\\frontend\\\\src\\\\Components\\\\TeamDetails.jsx\",\n  _s = $RefreshSig$();\n// import React, { useContext, useEffect, useState } from 'react';\n// import { Button, Header, Image, List, Accordion, Icon, Menu, Segment, Modal, Form } from 'semantic-ui-react';\n// import { teamContext } from '../api/TeamsContext';\n// import axios from 'axios';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import Cookies from 'js-cookie';\n// import SearchBar from './SearchBar'; // Adjust path as needed\n\n// const TeamDetails = () => {\n//   const { teams, setTeams } = useContext(teamContext);\n//   const [userTeam, setTeam] = useState(null);\n//   const { teamId } = useParams();\n//   const navigate = useNavigate();\n//   const [activeIndex, setActiveIndex] = useState(-1);\n//   const [editModalOpen, setEditModalOpen] = useState(false);\n//   const [newTeamName, setNewTeamName] = useState('');\n//   const [newMembers, setNewMembers] = useState([]);\n//   const [selectedMembers, setSelectedMembers] = useState([]);\n//   const [confirmDeleteOpen, setConfirmDeleteOpen] = useState(false); // State for delete confirmation modal\n\n//   useEffect(() => {\n//     const fetchTeam = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:8000/team/userTeam/${teamId}`);\n//         setTeam(response.data);\n//       } catch (error) {\n//         console.error('Error fetching team:', error);\n//       }\n//     };\n\n//     fetchTeam();\n//   }, [teamId]);\n\n//   const handleClick = (e, titleProps) => {\n//     const { index } = titleProps;\n//     const newIndex = activeIndex === index ? -1 : index;\n//     setActiveIndex(newIndex);\n\n//     // Navigate to team files route when clicking on \"Files\"\n//     if (index === 1 && newIndex === 1) { \n//       navigate(`/teamDetails/${teamId}/files`, { state: { teamId } });\n//     }\n\n//     // Navigate to team tasks route when clicking on \"Tasks\"\n//     if (index === 2 && newIndex === 2) { \n//       navigate(`/teamDetails/${teamId}/tasks`, { state: { teamId } });\n//     }\n//   };\n\n//   const handleUserClick = (user) => {\n//     navigate('/profile', { state: { user } });\n//   };\n\n//   const handleDeleteTeam = async () => {\n//     const userId = Cookies.get('userId');\n//     try {\n//       await axios.delete(`http://localhost:8000/team/${teamId}`, {\n//         data: { userId }\n//       });\n//       navigate('/teams');\n//     } catch (error) {\n//       console.error('Error deleting team:', error);\n//     }\n//   };\n\n//   const handleEditTeam = async () => {\n//     const userId = Cookies.get('userId');\n//     try {\n//       const response = await axios.put(`http://localhost:8000/team/${teamId}`, {\n//         userId,\n//         teamName: newTeamName,\n//         addMembers: selectedMembers.map(member => member._id),\n//         removeMembers: [] // Assuming no removal functionality in edit\n//       });\n//       setTeam(response.data);\n//       setEditModalOpen(false);\n//       window.location.reload(); // Reload the page after editing the team\n//     } catch (error) {\n//       console.error('Error updating team:', error);\n//     }\n//   };\n\n//   const handleRemoveMember = async (memberId) => {\n//     const userId = Cookies.get('userId');\n//     try {\n//       const response = await axios.put(`http://localhost:8000/team/${teamId}`, {\n//         userId,\n//         addMembers: [],\n//         removeMembers: [memberId]\n//       });\n//       setTeam(response.data);\n//       window.location.reload(); // Reload the page after removing a member\n//     } catch (error) {\n//       console.error('Error removing member:', error);\n//     }\n//   };\n\n//   const handleUserSelect = (user) => {\n//     setNewMembers([...newMembers, user]);\n//     setSelectedMembers([...selectedMembers, user]);\n//   };\n\n//   const handleConfirmDelete = () => {\n//     setConfirmDeleteOpen(true);\n//   };\n\n//   const handleCancelDelete = () => {\n//     setConfirmDeleteOpen(false);\n//   };\n\n//   const handleConfirmDeleteTeam = async () => {\n//     setConfirmDeleteOpen(false);\n//     await handleDeleteTeam();\n//   };\n\n//   return (\n//     <div className=\"sticky top-16 bg-white shadow-md z-10\" style={{marginLeft:\"100px\"}}>\n//       <Header as='h1' attached dividing textAlign='center' style={{ backgroundColor: \"lightgrey\" }}>\n//         {userTeam && userTeam.teamName}\n//       </Header>\n//       <Menu vertical fluid>\n//         <Accordion styled fluid>\n//           <Accordion.Title\n//             active={activeIndex === 0}\n//             index={0}\n//             onClick={handleClick}\n//           >\n//             <Icon name='dropdown' />\n//             Team Members\n//           </Accordion.Title>\n//           <Accordion.Content active={activeIndex === 0}>\n//             <List divided verticalAlign='middle'>\n//               {userTeam && userTeam.members && userTeam.members.map(member => (\n//                 <List.Item key={member._id}>\n//                   <List.Content floated='right'>\n//                     <Button onClick={() => handleRemoveMember(member._id)} color='red'>Remove</Button>\n//                   </List.Content>\n//                   <Image avatar src='https://react.semantic-ui.com/images/avatar/small/lena.png' />\n//                   <List.Content as='a' onClick={() => handleUserClick(member)}>\n//                     {member.firstName} {member.lastName}\n//                     {userTeam.admin === member._id && <span style={{ color: 'red', marginLeft: '10px' }}>Admin</span>}\n//                   </List.Content>\n//                 </List.Item>\n//               ))}\n//             </List>\n//           </Accordion.Content>\n\n//           <Accordion.Title\n//             active={activeIndex === 1}\n//             index={1}\n//             onClick={handleClick}\n//           >\n//             <Icon name='dropdown' />\n//             Files\n//           </Accordion.Title>\n\n//           <Accordion.Title\n//             active={activeIndex === 2}\n//             index={2}\n//             onClick={handleClick}\n//           >\n//             <Icon name='dropdown' />\n//             Tasks\n//           </Accordion.Title>\n//         </Accordion>\n//       </Menu>\n\n//       {userTeam && userTeam.admin === Cookies.get('userId') && (\n//         <>\n//           <Button color='red' onClick={handleConfirmDelete}>Delete Team</Button>\n//           <Button color='blue' onClick={() => setEditModalOpen(true)}>Edit Team</Button>\n\n//           <Modal\n//             open={editModalOpen}\n//             onClose={() => setEditModalOpen(false)}\n//           >\n//             <Modal.Header>Edit Team</Modal.Header>\n//             <Modal.Content>\n//               <Form>\n//                 <Form.Input\n//                   label='Team Name'\n//                   placeholder='Enter new team name'\n//                   value={newTeamName}\n//                   onChange={(e) => setNewTeamName(e.target.value)}\n//                 />\n//                 <Form.Field>\n//                   <label>Add Members</label>\n//                   <SearchBar onUserSelect={handleUserSelect} />\n//                 </Form.Field>\n//                 {newMembers.map((member, index) => (\n//                   <Segment key={index}>\n//                     <p>{member.firstName} {member.lastName}</p>\n//                   </Segment>\n//                 ))}\n//               </Form>\n//             </Modal.Content>\n//             <Modal.Actions>\n//               <Button onClick={() => setEditModalOpen(false)}>Cancel</Button>\n//               <Button color='blue' onClick={handleEditTeam}>Save</Button>\n//             </Modal.Actions>\n//           </Modal>\n\n//           <Modal\n//             open={confirmDeleteOpen}\n//             onClose={() => setConfirmDeleteOpen(false)}\n//             size='mini'\n//           >\n//             <Modal.Header>Confirm Deletion</Modal.Header>\n//             <Modal.Content>\n//               <p>Are you sure you want to delete this team?</p>\n//             </Modal.Content>\n//             <Modal.Actions>\n//               <Button negative onClick={handleCancelDelete}>Cancel</Button>\n//               <Button positive onClick={handleConfirmDeleteTeam}>Confirm</Button>\n//             </Modal.Actions>\n//           </Modal>\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default TeamDetails;\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Button, Header, Image, List, Accordion, Icon, Menu, Segment, Modal, Form } from 'semantic-ui-react';\nimport { teamContext } from '../api/TeamsContext';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport SearchBar from './SearchBar'; // Adjust path as needed\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TeamDetails = () => {\n  _s();\n  const {\n    teams,\n    setTeams\n  } = useContext(teamContext);\n  const [userTeam, setTeam] = useState(null);\n  const {\n    teamId\n  } = useParams();\n  const navigate = useNavigate();\n  const [activeIndex, setActiveIndex] = useState(-1);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [newTeamName, setNewTeamName] = useState('');\n  const [newMembers, setNewMembers] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState([]);\n  const [confirmDeleteOpen, setConfirmDeleteOpen] = useState(false); // State for delete confirmation modal\n\n  useEffect(() => {\n    const fetchTeam = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8000/team/userTeam/${teamId}`);\n        setTeam(response.data);\n      } catch (error) {\n        console.error('Error fetching team:', error);\n      }\n    };\n    fetchTeam();\n  }, [teamId]);\n  const handleClick = (e, titleProps) => {\n    const {\n      index\n    } = titleProps;\n    const newIndex = activeIndex === index ? -1 : index;\n    setActiveIndex(newIndex);\n\n    // Navigate to team files route when clicking on \"Files\"\n    if (index === 1 && newIndex === 1) {\n      navigate(`/teamDetails/${teamId}/files`, {\n        state: {\n          teamId\n        }\n      });\n    }\n\n    // Navigate to team tasks route when clicking on \"Tasks\"\n    if (index === 2 && newIndex === 2) {\n      navigate(`/teamDetails/${teamId}/tasks`, {\n        state: {\n          teamId\n        }\n      });\n    }\n  };\n  const handleUserClick = user => {\n    navigate('/profile', {\n      state: {\n        user\n      }\n    });\n  };\n  const handleDeleteTeam = async () => {\n    const userId = Cookies.get('userId');\n    try {\n      await axios.delete(`http://localhost:8000/team/${teamId}`, {\n        data: {\n          userId\n        }\n      });\n      navigate('/teams');\n    } catch (error) {\n      console.error('Error deleting team:', error);\n    }\n  };\n  const handleEditTeam = async () => {\n    const userId = Cookies.get('userId');\n    try {\n      const response = await axios.put(`http://localhost:8000/team/${teamId}`, {\n        userId,\n        teamName: newTeamName,\n        addMembers: selectedMembers.map(member => member._id),\n        removeMembers: [] // Assuming no removal functionality in edit\n      });\n      setTeam(response.data);\n      setEditModalOpen(false);\n      window.location.reload(); // Reload the page after editing the team\n    } catch (error) {\n      console.error('Error updating team:', error);\n    }\n  };\n  const handleRemoveMember = async memberId => {\n    const userId = Cookies.get('userId');\n    try {\n      const response = await axios.put(`http://localhost:8000/team/${teamId}`, {\n        userId,\n        addMembers: [],\n        removeMembers: [memberId]\n      });\n      setTeam(response.data);\n      window.location.reload(); // Reload the page after removing a member\n    } catch (error) {\n      console.error('Error removing member:', error);\n    }\n  };\n  const handleUserSelect = user => {\n    setNewMembers([...newMembers, user]);\n    setSelectedMembers([...selectedMembers, user]);\n  };\n  const handleConfirmDelete = () => {\n    setConfirmDeleteOpen(true);\n  };\n  const handleCancelDelete = () => {\n    setConfirmDeleteOpen(false);\n  };\n  const handleConfirmDeleteTeam = async () => {\n    setConfirmDeleteOpen(false);\n    await handleDeleteTeam();\n  };\n  const isAdmin = userTeam && userTeam.admin === Cookies.get('userId');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sticky top-16 bg-white shadow-md z-10\",\n    style: {\n      marginLeft: \"100px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      as: \"h1\",\n      attached: true,\n      dividing: true,\n      textAlign: \"center\",\n      style: {\n        backgroundColor: \"lightgrey\"\n      },\n      children: userTeam && userTeam.teamName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      vertical: true,\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Accordion, {\n        styled: true,\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Accordion.Title, {\n          active: activeIndex === 0,\n          index: 0,\n          onClick: handleClick,\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"dropdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), \"Team Members\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Content, {\n          active: activeIndex === 0,\n          children: /*#__PURE__*/_jsxDEV(List, {\n            divided: true,\n            verticalAlign: \"middle\",\n            children: userTeam && userTeam.members && userTeam.members.map(member => /*#__PURE__*/_jsxDEV(List.Item, {\n              children: [/*#__PURE__*/_jsxDEV(List.Content, {\n                floated: \"right\",\n                children: isAdmin && /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: () => handleRemoveMember(member._id),\n                  color: \"red\",\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Image, {\n                avatar: true,\n                src: \"https://react.semantic-ui.com/images/avatar/small/lena.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                children: [member.firstName, \" \", member.lastName, userTeam.admin === member._id && /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: 'red',\n                    marginLeft: '10px'\n                  },\n                  children: \"Admin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 55\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 19\n              }, this)]\n            }, member._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Title, {\n          active: activeIndex === 1,\n          index: 1,\n          onClick: handleClick,\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"dropdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this), \"Files\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Title, {\n          active: activeIndex === 2,\n          index: 2,\n          onClick: handleClick,\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"dropdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this), \"Tasks\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this), isAdmin && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"red\",\n        onClick: handleConfirmDelete,\n        children: \"Delete Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"blue\",\n        onClick: () => setEditModalOpen(true),\n        children: \"Edit Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        open: editModalOpen,\n        onClose: () => setEditModalOpen(false),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: \"Edit Team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n              label: \"Team Name\",\n              placeholder: \"Enter new team name\",\n              value: newTeamName,\n              onChange: e => setNewTeamName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Add Members\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n                onUserSelect: handleUserSelect\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 17\n            }, this), newMembers.map((member, index) => /*#__PURE__*/_jsxDEV(Segment, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [member.firstName, \" \", member.lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setEditModalOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"blue\",\n            onClick: handleEditTeam,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        open: confirmDeleteOpen,\n        onClose: () => setConfirmDeleteOpen(false),\n        size: \"mini\",\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: \"Confirm Deletion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Are you sure you want to delete this team?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            negative: true,\n            onClick: handleCancelDelete,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            positive: true,\n            onClick: handleConfirmDeleteTeam,\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 343,\n    columnNumber: 5\n  }, this);\n};\n_s(TeamDetails, \"4nNEr648IvMURhnE08yavz21Ijg=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TeamDetails;\nexport default TeamDetails;\nvar _c;\n$RefreshReg$(_c, \"TeamDetails\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Button","Header","Image","List","Accordion","Icon","Menu","Segment","Modal","Form","teamContext","axios","useParams","useNavigate","Cookies","SearchBar","jsxDEV","_jsxDEV","Fragment","_Fragment","TeamDetails","_s","teams","setTeams","userTeam","setTeam","teamId","navigate","activeIndex","setActiveIndex","editModalOpen","setEditModalOpen","newTeamName","setNewTeamName","newMembers","setNewMembers","selectedMembers","setSelectedMembers","confirmDeleteOpen","setConfirmDeleteOpen","fetchTeam","response","get","data","error","console","handleClick","e","titleProps","index","newIndex","state","handleUserClick","user","handleDeleteTeam","userId","delete","handleEditTeam","put","teamName","addMembers","map","member","_id","removeMembers","window","location","reload","handleRemoveMember","memberId","handleUserSelect","handleConfirmDelete","handleCancelDelete","handleConfirmDeleteTeam","isAdmin","admin","className","style","marginLeft","children","as","attached","dividing","textAlign","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","vertical","fluid","styled","Title","active","onClick","name","Content","divided","verticalAlign","members","Item","floated","color","avatar","src","firstName","lastName","open","onClose","Input","label","placeholder","value","onChange","target","Field","onUserSelect","Actions","size","negative","positive","_c","$RefreshReg$"],"sources":["C:/Users/Shadan Syed Kazmi/Projects/msteams-clone/frontend/src/Components/TeamDetails.jsx"],"sourcesContent":["// import React, { useContext, useEffect, useState } from 'react';\r\n// import { Button, Header, Image, List, Accordion, Icon, Menu, Segment, Modal, Form } from 'semantic-ui-react';\r\n// import { teamContext } from '../api/TeamsContext';\r\n// import axios from 'axios';\r\n// import { useParams, useNavigate } from 'react-router-dom';\r\n// import Cookies from 'js-cookie';\r\n// import SearchBar from './SearchBar'; // Adjust path as needed\r\n\r\n// const TeamDetails = () => {\r\n//   const { teams, setTeams } = useContext(teamContext);\r\n//   const [userTeam, setTeam] = useState(null);\r\n//   const { teamId } = useParams();\r\n//   const navigate = useNavigate();\r\n//   const [activeIndex, setActiveIndex] = useState(-1);\r\n//   const [editModalOpen, setEditModalOpen] = useState(false);\r\n//   const [newTeamName, setNewTeamName] = useState('');\r\n//   const [newMembers, setNewMembers] = useState([]);\r\n//   const [selectedMembers, setSelectedMembers] = useState([]);\r\n//   const [confirmDeleteOpen, setConfirmDeleteOpen] = useState(false); // State for delete confirmation modal\r\n\r\n//   useEffect(() => {\r\n//     const fetchTeam = async () => {\r\n//       try {\r\n//         const response = await axios.get(`http://localhost:8000/team/userTeam/${teamId}`);\r\n//         setTeam(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching team:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchTeam();\r\n//   }, [teamId]);\r\n\r\n//   const handleClick = (e, titleProps) => {\r\n//     const { index } = titleProps;\r\n//     const newIndex = activeIndex === index ? -1 : index;\r\n//     setActiveIndex(newIndex);\r\n\r\n//     // Navigate to team files route when clicking on \"Files\"\r\n//     if (index === 1 && newIndex === 1) { \r\n//       navigate(`/teamDetails/${teamId}/files`, { state: { teamId } });\r\n//     }\r\n\r\n//     // Navigate to team tasks route when clicking on \"Tasks\"\r\n//     if (index === 2 && newIndex === 2) { \r\n//       navigate(`/teamDetails/${teamId}/tasks`, { state: { teamId } });\r\n//     }\r\n//   };\r\n\r\n//   const handleUserClick = (user) => {\r\n//     navigate('/profile', { state: { user } });\r\n//   };\r\n\r\n//   const handleDeleteTeam = async () => {\r\n//     const userId = Cookies.get('userId');\r\n//     try {\r\n//       await axios.delete(`http://localhost:8000/team/${teamId}`, {\r\n//         data: { userId }\r\n//       });\r\n//       navigate('/teams');\r\n//     } catch (error) {\r\n//       console.error('Error deleting team:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleEditTeam = async () => {\r\n//     const userId = Cookies.get('userId');\r\n//     try {\r\n//       const response = await axios.put(`http://localhost:8000/team/${teamId}`, {\r\n//         userId,\r\n//         teamName: newTeamName,\r\n//         addMembers: selectedMembers.map(member => member._id),\r\n//         removeMembers: [] // Assuming no removal functionality in edit\r\n//       });\r\n//       setTeam(response.data);\r\n//       setEditModalOpen(false);\r\n//       window.location.reload(); // Reload the page after editing the team\r\n//     } catch (error) {\r\n//       console.error('Error updating team:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleRemoveMember = async (memberId) => {\r\n//     const userId = Cookies.get('userId');\r\n//     try {\r\n//       const response = await axios.put(`http://localhost:8000/team/${teamId}`, {\r\n//         userId,\r\n//         addMembers: [],\r\n//         removeMembers: [memberId]\r\n//       });\r\n//       setTeam(response.data);\r\n//       window.location.reload(); // Reload the page after removing a member\r\n//     } catch (error) {\r\n//       console.error('Error removing member:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleUserSelect = (user) => {\r\n//     setNewMembers([...newMembers, user]);\r\n//     setSelectedMembers([...selectedMembers, user]);\r\n//   };\r\n\r\n//   const handleConfirmDelete = () => {\r\n//     setConfirmDeleteOpen(true);\r\n//   };\r\n\r\n//   const handleCancelDelete = () => {\r\n//     setConfirmDeleteOpen(false);\r\n//   };\r\n\r\n//   const handleConfirmDeleteTeam = async () => {\r\n//     setConfirmDeleteOpen(false);\r\n//     await handleDeleteTeam();\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"sticky top-16 bg-white shadow-md z-10\" style={{marginLeft:\"100px\"}}>\r\n//       <Header as='h1' attached dividing textAlign='center' style={{ backgroundColor: \"lightgrey\" }}>\r\n//         {userTeam && userTeam.teamName}\r\n//       </Header>\r\n//       <Menu vertical fluid>\r\n//         <Accordion styled fluid>\r\n//           <Accordion.Title\r\n//             active={activeIndex === 0}\r\n//             index={0}\r\n//             onClick={handleClick}\r\n//           >\r\n//             <Icon name='dropdown' />\r\n//             Team Members\r\n//           </Accordion.Title>\r\n//           <Accordion.Content active={activeIndex === 0}>\r\n//             <List divided verticalAlign='middle'>\r\n//               {userTeam && userTeam.members && userTeam.members.map(member => (\r\n//                 <List.Item key={member._id}>\r\n//                   <List.Content floated='right'>\r\n//                     <Button onClick={() => handleRemoveMember(member._id)} color='red'>Remove</Button>\r\n//                   </List.Content>\r\n//                   <Image avatar src='https://react.semantic-ui.com/images/avatar/small/lena.png' />\r\n//                   <List.Content as='a' onClick={() => handleUserClick(member)}>\r\n//                     {member.firstName} {member.lastName}\r\n//                     {userTeam.admin === member._id && <span style={{ color: 'red', marginLeft: '10px' }}>Admin</span>}\r\n//                   </List.Content>\r\n//                 </List.Item>\r\n//               ))}\r\n//             </List>\r\n//           </Accordion.Content>\r\n\r\n//           <Accordion.Title\r\n//             active={activeIndex === 1}\r\n//             index={1}\r\n//             onClick={handleClick}\r\n//           >\r\n//             <Icon name='dropdown' />\r\n//             Files\r\n//           </Accordion.Title>\r\n\r\n//           <Accordion.Title\r\n//             active={activeIndex === 2}\r\n//             index={2}\r\n//             onClick={handleClick}\r\n//           >\r\n//             <Icon name='dropdown' />\r\n//             Tasks\r\n//           </Accordion.Title>\r\n//         </Accordion>\r\n//       </Menu>\r\n\r\n//       {userTeam && userTeam.admin === Cookies.get('userId') && (\r\n//         <>\r\n//           <Button color='red' onClick={handleConfirmDelete}>Delete Team</Button>\r\n//           <Button color='blue' onClick={() => setEditModalOpen(true)}>Edit Team</Button>\r\n\r\n//           <Modal\r\n//             open={editModalOpen}\r\n//             onClose={() => setEditModalOpen(false)}\r\n//           >\r\n//             <Modal.Header>Edit Team</Modal.Header>\r\n//             <Modal.Content>\r\n//               <Form>\r\n//                 <Form.Input\r\n//                   label='Team Name'\r\n//                   placeholder='Enter new team name'\r\n//                   value={newTeamName}\r\n//                   onChange={(e) => setNewTeamName(e.target.value)}\r\n//                 />\r\n//                 <Form.Field>\r\n//                   <label>Add Members</label>\r\n//                   <SearchBar onUserSelect={handleUserSelect} />\r\n//                 </Form.Field>\r\n//                 {newMembers.map((member, index) => (\r\n//                   <Segment key={index}>\r\n//                     <p>{member.firstName} {member.lastName}</p>\r\n//                   </Segment>\r\n//                 ))}\r\n//               </Form>\r\n//             </Modal.Content>\r\n//             <Modal.Actions>\r\n//               <Button onClick={() => setEditModalOpen(false)}>Cancel</Button>\r\n//               <Button color='blue' onClick={handleEditTeam}>Save</Button>\r\n//             </Modal.Actions>\r\n//           </Modal>\r\n\r\n//           <Modal\r\n//             open={confirmDeleteOpen}\r\n//             onClose={() => setConfirmDeleteOpen(false)}\r\n//             size='mini'\r\n//           >\r\n//             <Modal.Header>Confirm Deletion</Modal.Header>\r\n//             <Modal.Content>\r\n//               <p>Are you sure you want to delete this team?</p>\r\n//             </Modal.Content>\r\n//             <Modal.Actions>\r\n//               <Button negative onClick={handleCancelDelete}>Cancel</Button>\r\n//               <Button positive onClick={handleConfirmDeleteTeam}>Confirm</Button>\r\n//             </Modal.Actions>\r\n//           </Modal>\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TeamDetails;\r\n\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Button, Header, Image, List, Accordion, Icon, Menu, Segment, Modal, Form } from 'semantic-ui-react';\r\nimport { teamContext } from '../api/TeamsContext';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport Cookies from 'js-cookie';\r\nimport SearchBar from './SearchBar'; // Adjust path as needed\r\n\r\nconst TeamDetails = () => {\r\n  const { teams, setTeams } = useContext(teamContext);\r\n  const [userTeam, setTeam] = useState(null);\r\n  const { teamId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [activeIndex, setActiveIndex] = useState(-1);\r\n  const [editModalOpen, setEditModalOpen] = useState(false);\r\n  const [newTeamName, setNewTeamName] = useState('');\r\n  const [newMembers, setNewMembers] = useState([]);\r\n  const [selectedMembers, setSelectedMembers] = useState([]);\r\n  const [confirmDeleteOpen, setConfirmDeleteOpen] = useState(false); // State for delete confirmation modal\r\n\r\n  useEffect(() => {\r\n    const fetchTeam = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8000/team/userTeam/${teamId}`);\r\n        setTeam(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching team:', error);\r\n      }\r\n    };\r\n\r\n    fetchTeam();\r\n  }, [teamId]);\r\n\r\n  const handleClick = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n    setActiveIndex(newIndex);\r\n\r\n    // Navigate to team files route when clicking on \"Files\"\r\n    if (index === 1 && newIndex === 1) { \r\n      navigate(`/teamDetails/${teamId}/files`, { state: { teamId } });\r\n    }\r\n\r\n    // Navigate to team tasks route when clicking on \"Tasks\"\r\n    if (index === 2 && newIndex === 2) { \r\n      navigate(`/teamDetails/${teamId}/tasks`, { state: { teamId } });\r\n    }\r\n  };\r\n\r\n  const handleUserClick = (user) => {\r\n    navigate('/profile', { state: { user } });\r\n  };\r\n\r\n  const handleDeleteTeam = async () => {\r\n    const userId = Cookies.get('userId');\r\n    try {\r\n      await axios.delete(`http://localhost:8000/team/${teamId}`, {\r\n        data: { userId }\r\n      });\r\n      navigate('/teams');\r\n    } catch (error) {\r\n      console.error('Error deleting team:', error);\r\n    }\r\n  };\r\n\r\n  const handleEditTeam = async () => {\r\n    const userId = Cookies.get('userId');\r\n    try {\r\n      const response = await axios.put(`http://localhost:8000/team/${teamId}`, {\r\n        userId,\r\n        teamName: newTeamName,\r\n        addMembers: selectedMembers.map(member => member._id),\r\n        removeMembers: [] // Assuming no removal functionality in edit\r\n      });\r\n      setTeam(response.data);\r\n      setEditModalOpen(false);\r\n      window.location.reload(); // Reload the page after editing the team\r\n    } catch (error) {\r\n      console.error('Error updating team:', error);\r\n    }\r\n  };\r\n\r\n  const handleRemoveMember = async (memberId) => {\r\n    const userId = Cookies.get('userId');\r\n    try {\r\n      const response = await axios.put(`http://localhost:8000/team/${teamId}`, {\r\n        userId,\r\n        addMembers: [],\r\n        removeMembers: [memberId]\r\n      });\r\n      setTeam(response.data);\r\n      window.location.reload(); // Reload the page after removing a member\r\n    } catch (error) {\r\n      console.error('Error removing member:', error);\r\n    }\r\n  };\r\n\r\n  const handleUserSelect = (user) => {\r\n    setNewMembers([...newMembers, user]);\r\n    setSelectedMembers([...selectedMembers, user]);\r\n  };\r\n\r\n  const handleConfirmDelete = () => {\r\n    setConfirmDeleteOpen(true);\r\n  };\r\n\r\n  const handleCancelDelete = () => {\r\n    setConfirmDeleteOpen(false);\r\n  };\r\n\r\n  const handleConfirmDeleteTeam = async () => {\r\n    setConfirmDeleteOpen(false);\r\n    await handleDeleteTeam();\r\n  };\r\n\r\n  const isAdmin = userTeam && userTeam.admin === Cookies.get('userId');\r\n\r\n  return (\r\n    <div className=\"sticky top-16 bg-white shadow-md z-10\" style={{marginLeft:\"100px\"}}>\r\n      <Header as='h1' attached dividing textAlign='center' style={{ backgroundColor: \"lightgrey\" }}>\r\n        {userTeam && userTeam.teamName}\r\n      </Header>\r\n      <Menu vertical fluid>\r\n        <Accordion styled fluid>\r\n          <Accordion.Title\r\n            active={activeIndex === 0}\r\n            index={0}\r\n            onClick={handleClick}\r\n          >\r\n            <Icon name='dropdown' />\r\n            Team Members\r\n          </Accordion.Title>\r\n          <Accordion.Content active={activeIndex === 0}>\r\n            <List divided verticalAlign='middle'>\r\n              {userTeam && userTeam.members && userTeam.members.map(member => (\r\n                <List.Item key={member._id}>\r\n                  <List.Content floated='right'>\r\n                    {isAdmin && (\r\n                      <Button onClick={() => handleRemoveMember(member._id)} color='red'>Remove</Button>\r\n                    )}\r\n                  </List.Content>\r\n                  <Image avatar src='https://react.semantic-ui.com/images/avatar/small/lena.png' />\r\n                  <List.Content >\r\n                    {member.firstName} {member.lastName}\r\n                    {userTeam.admin === member._id && <span style={{ color: 'red', marginLeft: '10px' }}>Admin</span>}\r\n                  </List.Content>\r\n                  \r\n                </List.Item>\r\n              ))}\r\n            </List>\r\n          </Accordion.Content>\r\n\r\n          <Accordion.Title\r\n            active={activeIndex === 1}\r\n            index={1}\r\n            onClick={handleClick}\r\n          >\r\n            <Icon name='dropdown' />\r\n            Files\r\n          </Accordion.Title>\r\n\r\n          <Accordion.Title\r\n            active={activeIndex === 2}\r\n            index={2}\r\n            onClick={handleClick}\r\n          >\r\n            <Icon name='dropdown' />\r\n            Tasks\r\n          </Accordion.Title>\r\n        </Accordion>\r\n      </Menu>\r\n\r\n      {isAdmin && (\r\n        <>\r\n          <Button color='red' onClick={handleConfirmDelete}>Delete Team</Button>\r\n          <Button color='blue' onClick={() => setEditModalOpen(true)}>Edit Team</Button>\r\n\r\n          <Modal\r\n            open={editModalOpen}\r\n            onClose={() => setEditModalOpen(false)}\r\n          >\r\n            <Modal.Header>Edit Team</Modal.Header>\r\n            <Modal.Content>\r\n              <Form>\r\n                <Form.Input\r\n                  label='Team Name'\r\n                  placeholder='Enter new team name'\r\n                  value={newTeamName}\r\n                  onChange={(e) => setNewTeamName(e.target.value)}\r\n                />\r\n                <Form.Field>\r\n                  <label>Add Members</label>\r\n                  <SearchBar onUserSelect={handleUserSelect} />\r\n                </Form.Field>\r\n                {newMembers.map((member, index) => (\r\n                  <Segment key={index}>\r\n                    <p>{member.firstName} {member.lastName}</p>\r\n                  </Segment>\r\n                ))}\r\n              </Form>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n              <Button onClick={() => setEditModalOpen(false)}>Cancel</Button>\r\n              <Button color='blue' onClick={handleEditTeam}>Save</Button>\r\n            </Modal.Actions>\r\n          </Modal>\r\n\r\n          <Modal\r\n            open={confirmDeleteOpen}\r\n            onClose={() => setConfirmDeleteOpen(false)}\r\n            size='mini'\r\n          >\r\n            <Modal.Header>Confirm Deletion</Modal.Header>\r\n            <Modal.Content>\r\n              <p>Are you sure you want to delete this team?</p>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n              <Button negative onClick={handleCancelDelete}>Cancel</Button>\r\n              <Button positive onClick={handleConfirmDeleteTeam}>Confirm</Button>\r\n            </Modal.Actions>\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamDetails;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,SAAS,EAAEC,IAAI,EAAEC,IAAI,EAAEC,OAAO,EAAEC,KAAK,EA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}