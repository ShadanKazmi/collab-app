{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shadan Syed Kazmi\\\\Projects\\\\msteams-clone\\\\frontend\\\\src\\\\api\\\\TeamsContext.jsx\",\n  _s = $RefreshSig$();\n// import { createContext, useEffect, useState } from \"react\";\n// import Cookies from 'js-cookie';\n// import axios from \"axios\";\n\n// export const teamContext = createContext(null);\n\n// export const TeamProvider = (props) => {\n//     const [teams, setTeams] = useState([]);\n\n//     useEffect(() => {\n//         const userId = localStorage.getItem('userId'); \n//         const fetchTeams = async () => {\n//             try {\n//                 const response = await axios.get(`https://collab-app-backend.onrender.com/team/userTeams/${userId}`);\n//                 setTeams(response.data);\n//             } catch (error) {\n//                 console.error('Error fetching teams:', error);\n//             }\n//         };\n\n//         fetchTeams();\n//     }, []);\n\n//     return (\n//         <teamContext.Provider value={{teams, setTeams}}>\n//             {props.children}\n//         </teamContext.Provider>\n//     );\n// };\n\nimport { createContext, useEffect, useState } from \"react\";\nimport Cookies from 'js-cookie';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const teamContext = /*#__PURE__*/createContext(null);\nexport const TeamProvider = props => {\n  _s();\n  const [teams, setTeams] = useState([]);\n  useEffect(() => {\n    const userId = Cookies.get('userId'); // Fetch userId from cookie\n\n    const fetchTeams = async () => {\n      try {\n        const response = await axios.get(`https://collab-app-backend.onrender.com/team/userTeams/${userId}`);\n        setTeams(response.data);\n      } catch (error) {\n        console.error('Error fetching teams:', error);\n      }\n    };\n    if (userId) {\n      fetchTeams();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(teamContext.Provider, {\n    value: {\n      teams,\n      setTeams\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(TeamProvider, \"nt+I693XwTdNiKlXHWfWa22BjIk=\");\n_c = TeamProvider;\nvar _c;\n$RefreshReg$(_c, \"TeamProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","Cookies","axios","jsxDEV","_jsxDEV","teamContext","TeamProvider","props","_s","teams","setTeams","userId","get","fetchTeams","response","data","error","console","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Shadan Syed Kazmi/Projects/msteams-clone/frontend/src/api/TeamsContext.jsx"],"sourcesContent":["// import { createContext, useEffect, useState } from \"react\";\r\n// import Cookies from 'js-cookie';\r\n// import axios from \"axios\";\r\n\r\n// export const teamContext = createContext(null);\r\n\r\n// export const TeamProvider = (props) => {\r\n//     const [teams, setTeams] = useState([]);\r\n\r\n//     useEffect(() => {\r\n//         const userId = localStorage.getItem('userId'); \r\n//         const fetchTeams = async () => {\r\n//             try {\r\n//                 const response = await axios.get(`https://collab-app-backend.onrender.com/team/userTeams/${userId}`);\r\n//                 setTeams(response.data);\r\n//             } catch (error) {\r\n//                 console.error('Error fetching teams:', error);\r\n//             }\r\n//         };\r\n\r\n//         fetchTeams();\r\n//     }, []);\r\n\r\n//     return (\r\n//         <teamContext.Provider value={{teams, setTeams}}>\r\n//             {props.children}\r\n//         </teamContext.Provider>\r\n//     );\r\n// };\r\n\r\nimport { createContext, useEffect, useState } from \"react\";\r\nimport Cookies from 'js-cookie';\r\nimport axios from \"axios\";\r\n\r\nexport const teamContext = createContext(null);\r\n\r\nexport const TeamProvider = (props) => {\r\n    const [teams, setTeams] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const userId = Cookies.get('userId'); // Fetch userId from cookie\r\n\r\n        const fetchTeams = async () => {\r\n            try {\r\n                const response = await axios.get(`https://collab-app-backend.onrender.com/team/userTeams/${userId}`);\r\n                setTeams(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching teams:', error);\r\n            }\r\n        };\r\n\r\n        if (userId) {\r\n            fetchTeams();\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <teamContext.Provider value={{teams, setTeams}}>\r\n            {props.children}\r\n        </teamContext.Provider>\r\n    );\r\n};\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,IAAI,CAAC;AAE9C,OAAO,MAAMQ,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ,MAAMY,MAAM,GAAGV,OAAO,CAACW,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;;IAEtC,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACU,GAAG,CAAC,0DAA0DD,MAAM,EAAE,CAAC;QACpGD,QAAQ,CAACI,QAAQ,CAACC,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;IAED,IAAIL,MAAM,EAAE;MACRE,UAAU,CAAC,CAAC;IAChB;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIT,OAAA,CAACC,WAAW,CAACa,QAAQ;IAACC,KAAK,EAAE;MAACV,KAAK;MAAEC;IAAQ,CAAE;IAAAU,QAAA,EAC1Cb,KAAK,CAACa;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAE/B,CAAC;AAAChB,EAAA,CAzBWF,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}