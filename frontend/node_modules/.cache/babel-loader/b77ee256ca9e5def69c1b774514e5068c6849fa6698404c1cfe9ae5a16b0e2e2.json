{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shadan Syed Kazmi\\\\Projects\\\\msteams-clone\\\\frontend\\\\src\\\\Components\\\\TeamDetails.jsx\",\n  _s = $RefreshSig$();\n// import React, { useContext, useEffect, useState } from 'react';\n// import { Button, Divider, Header, Image, List, Accordion, Icon, Menu, Segment } from 'semantic-ui-react';\n// import { teamContext } from '../api/TeamsContext';\n// import axios from 'axios';\n// import { useParams, useNavigate } from 'react-router-dom';\n\n// const TeamDetails = () => {\n//   const { teams, setTeams } = useContext(teamContext);\n//   const [userTeam, setTeam] = useState(teams);\n//   const { teamId } = useParams();\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const fetchTeam = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:8000/team/userTeam/${teamId}`);\n//         setTeam(response.data);\n//       } catch (error) {\n//         console.error('Error fetching team:', error);\n//       }\n//     };\n\n//     fetchTeam();\n//   }, [teamId]);\n\n//   const [activeIndex, setActiveIndex] = useState(-1);\n\n//   const handleClick = (e, titleProps) => {\n//     const { index } = titleProps;\n//     const newIndex = activeIndex === index ? -1 : index;\n//     setActiveIndex(newIndex);\n\n//     // Navigate to team files route when clicking on \"Files\"\n//     if (index === 1 && newIndex === 1) { // Assuming index 1 corresponds to \"Files\"\n//       navigate(`/teamDetails/${teamId}/files`, { state: { teamId } });\n//     }\n\n//     // Navigate to team tasks route when clicking on \"Tasks\"\n//     if (index === 2 && newIndex === 2) { // Assuming index 2 corresponds to \"Tasks\"\n//       navigate(`/teamDetails/${teamId}/tasks`, { state: { teamId } });\n//     }\n//   };\n\n//   const handleUserClick = (user) => {\n//     navigate('/profile', { state: { user } });\n//   };\n\n//   return (\n//     <div className=\"sticky top-16 bg-white shadow-md z-10\" style={{marginLeft:\"100px\"}}>\n//       <Header as='h1' attached dividing textAlign='center' style={{ backgroundColor: \"lightgrey\" }}>\n//         {userTeam.teamName}\n//       </Header>\n//       <Menu vertical fluid>\n//         <Accordion styled fluid>\n//           <Accordion.Title\n//             active={activeIndex === 0}\n//             index={0}\n//             onClick={handleClick}\n//           >\n//             <Icon name='dropdown' />\n//             Team Members\n//           </Accordion.Title>\n//           <Accordion.Content active={activeIndex === 0}>\n//             <List divided verticalAlign='middle'>\n//               {userTeam && userTeam.members && userTeam.members.map(member => (\n//                 <List.Item key={member._id}>\n//                   <List.Content floated='right'>\n//                     <Button>Message</Button>\n//                   </List.Content>\n//                   <Image avatar src='https://react.semantic-ui.com/images/avatar/small/lena.png' />\n//                   <List.Content as='a' onClick={() => handleUserClick(member)}>\n//                     {member.firstName} {member.lastName}\n//                   </List.Content>\n//                 </List.Item>\n//               ))}\n//             </List>\n//           </Accordion.Content>\n\n//           <Accordion.Title\n//             active={activeIndex === 1}\n//             index={1}\n//             onClick={handleClick}\n//           >\n//             <Icon name='dropdown' />\n//             Files\n//           </Accordion.Title>\n\n//           <Accordion.Title\n//             active={activeIndex === 2}\n//             index={2}\n//             onClick={handleClick}\n//           >\n//             <Icon name='dropdown' />\n//             Tasks\n//           </Accordion.Title>\n//         </Accordion>\n//       </Menu>\n//     </div>\n//   );\n// };\n\n// export default TeamDetails;\n\n// import React, { useContext, useEffect, useState } from 'react';\n// import { Button, Header, Image, List, Accordion, Icon, Menu, Segment } from 'semantic-ui-react';\n// import { teamContext } from '../api/TeamsContext';\n// import axios from 'axios';\n// import { useParams, useNavigate } from 'react-router-dom';\n\n// const TeamDetails = () => {\n//   const { teams, setTeams } = useContext(teamContext);\n//   const [userTeam, setTeam] = useState(null);\n//   const { teamId } = useParams();\n//   const navigate = useNavigate();\n//   const [activeIndex, setActiveIndex] = useState(-1);\n\n//   useEffect(() => {\n//     const fetchTeam = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:8000/team/userTeam/${teamId}`);\n//         setTeam(response.data);\n//       } catch (error) {\n//         console.error('Error fetching team:', error);\n//       }\n//     };\n\n//     fetchTeam();\n//   }, [teamId]);\n\n//   const handleClick = (e, titleProps) => {\n//     const { index } = titleProps;\n//     const newIndex = activeIndex === index ? -1 : index;\n//     setActiveIndex(newIndex);\n\n//     // Navigate to team files route when clicking on \"Files\"\n//     if (index === 1 && newIndex === 1) { \n//       navigate(`/teamDetails/${teamId}/files`, { state: { teamId } });\n//     }\n\n//     // Navigate to team tasks route when clicking on \"Tasks\"\n//     if (index === 2 && newIndex === 2) { \n//       navigate(`/teamDetails/${teamId}/tasks`, { state: { teamId } });\n//     }\n//   };\n\n//   const handleUserClick = (user) => {\n//     navigate('/profile', { state: { user } });\n//   };\n\n//   return (\n//     <div className=\"sticky top-16 bg-white shadow-md z-10\" style={{marginLeft:\"100px\"}}>\n//       <Header as='h1' attached dividing textAlign='center' style={{ backgroundColor: \"lightgrey\" }}>\n//         {userTeam && userTeam.teamName}\n//       </Header>\n//       <Menu vertical fluid>\n//         <Accordion styled fluid>\n//           <Accordion.Title\n//             active={activeIndex === 0}\n//             index={0}\n//             onClick={handleClick}\n//           >\n//             <Icon name='dropdown' />\n//             Team Members\n//           </Accordion.Title>\n//           <Accordion.Content active={activeIndex === 0}>\n//             <List divided verticalAlign='middle'>\n//               {userTeam && userTeam.members && userTeam.members.map(member => (\n//                 <List.Item key={member._id}>\n//                   <List.Content floated='right'>\n//                     <Button>Message</Button>\n//                   </List.Content>\n//                   <Image avatar src='https://react.semantic-ui.com/images/avatar/small/lena.png' />\n//                   <List.Content as='a' onClick={() => handleUserClick(member)}>\n//                     {member.firstName} {member.lastName}\n//                     {userTeam.admin === member._id && <span style={{ color: 'red', marginLeft: '10px' }}>Admin</span>}\n//                   </List.Content>\n//                 </List.Item>\n//               ))}\n//             </List>\n//           </Accordion.Content>\n\n//           <Accordion.Title\n//             active={activeIndex === 1}\n//             index={1}\n//             onClick={handleClick}\n//           >\n//             <Icon name='dropdown' />\n//             Files\n//           </Accordion.Title>\n\n//           <Accordion.Title\n//             active={activeIndex === 2}\n//             index={2}\n//             onClick={handleClick}\n//           >\n//             <Icon name='dropdown' />\n//             Tasks\n//           </Accordion.Title>\n//         </Accordion>\n//       </Menu>\n//     </div>\n//   );\n// };\n\n// export default TeamDetails;\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Button, Header, Image, List, Accordion, Icon, Menu, Segment, Modal, Form } from 'semantic-ui-react';\nimport { teamContext } from '../api/TeamsContext';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport SearchBar from './SearchBar'; // Adjust path as needed\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TeamDetails = () => {\n  _s();\n  const {\n    teams,\n    setTeams\n  } = useContext(teamContext);\n  const [userTeam, setTeam] = useState(null);\n  const {\n    teamId\n  } = useParams();\n  const navigate = useNavigate();\n  const [activeIndex, setActiveIndex] = useState(-1);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const [newTeamName, setNewTeamName] = useState('');\n  const [newMembers, setNewMembers] = useState([]);\n  const [selectedMembers, setSelectedMembers] = useState([]);\n  useEffect(() => {\n    const fetchTeam = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8000/team/userTeam/${teamId}`);\n        setTeam(response.data);\n      } catch (error) {\n        console.error('Error fetching team:', error);\n      }\n    };\n    fetchTeam();\n  }, [teamId]);\n  const handleClick = (e, titleProps) => {\n    const {\n      index\n    } = titleProps;\n    const newIndex = activeIndex === index ? -1 : index;\n    setActiveIndex(newIndex);\n\n    // Navigate to team files route when clicking on \"Files\"\n    if (index === 1 && newIndex === 1) {\n      navigate(`/teamDetails/${teamId}/files`, {\n        state: {\n          teamId\n        }\n      });\n    }\n\n    // Navigate to team tasks route when clicking on \"Tasks\"\n    if (index === 2 && newIndex === 2) {\n      navigate(`/teamDetails/${teamId}/tasks`, {\n        state: {\n          teamId\n        }\n      });\n    }\n  };\n  const handleUserClick = user => {\n    navigate('/profile', {\n      state: {\n        user\n      }\n    });\n  };\n  const handleDeleteTeam = async () => {\n    const userId = Cookies.get('userId');\n    try {\n      await axios.delete(`http://localhost:8000/team/${teamId}`, {\n        data: {\n          userId\n        }\n      });\n      navigate('/teams');\n    } catch (error) {\n      console.error('Error deleting team:', error);\n    }\n  };\n  const handleEditTeam = async () => {\n    const userId = Cookies.get('userId');\n    try {\n      const response = await axios.put(`http://localhost:8000/team/${teamId}`, {\n        userId,\n        teamName: newTeamName,\n        addMembers: selectedMembers.map(member => member._id),\n        removeMembers: [] // Assuming no removal functionality in edit\n      });\n      setTeam(response.data);\n      setEditModalOpen(false);\n    } catch (error) {\n      console.error('Error updating team:', error);\n    }\n  };\n  const handleUserSelect = user => {\n    setNewMembers([...newMembers, user]);\n    setSelectedMembers([...selectedMembers, user]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sticky top-16 bg-white shadow-md z-10\",\n    style: {\n      marginLeft: \"100px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      as: \"h1\",\n      attached: true,\n      dividing: true,\n      textAlign: \"center\",\n      style: {\n        backgroundColor: \"lightgrey\"\n      },\n      children: userTeam && userTeam.teamName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      vertical: true,\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Accordion, {\n        styled: true,\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Accordion.Title, {\n          active: activeIndex === 0,\n          index: 0,\n          onClick: handleClick,\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"dropdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), \"Team Members\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Content, {\n          active: activeIndex === 0,\n          children: /*#__PURE__*/_jsxDEV(List, {\n            divided: true,\n            verticalAlign: \"middle\",\n            children: userTeam && userTeam.members && userTeam.members.map(member => /*#__PURE__*/_jsxDEV(List.Item, {\n              children: [/*#__PURE__*/_jsxDEV(List.Content, {\n                floated: \"right\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  children: \"Message\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Image, {\n                avatar: true,\n                src: \"https://react.semantic-ui.com/images/avatar/small/lena.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n                as: \"a\",\n                onClick: () => handleUserClick(member),\n                children: [member.firstName, \" \", member.lastName, userTeam.admin === member._id && /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: 'red',\n                    marginLeft: '10px'\n                  },\n                  children: \"Admin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 55\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 19\n              }, this)]\n            }, member._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Title, {\n          active: activeIndex === 1,\n          index: 1,\n          onClick: handleClick,\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"dropdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), \"Files\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Title, {\n          active: activeIndex === 2,\n          index: 2,\n          onClick: handleClick,\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"dropdown\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), \"Tasks\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this), userTeam && userTeam.admin === Cookies.get('userId') && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"red\",\n        onClick: handleDeleteTeam,\n        children: \"Delete Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"blue\",\n        onClick: () => setEditModalOpen(true),\n        children: \"Edit Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        open: editModalOpen,\n        onClose: () => setEditModalOpen(false),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: \"Edit Team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n              label: \"Team Name\",\n              placeholder: \"Enter new team name\",\n              value: newTeamName,\n              onChange: e => setNewTeamName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Add Members\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n                onUserSelect: handleUserSelect\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this), newMembers.map((member, index) => /*#__PURE__*/_jsxDEV(Segment, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [member.firstName, \" \", member.lastName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setEditModalOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"blue\",\n            onClick: handleEditTeam,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n};\n_s(TeamDetails, \"hnRCSzVuLbmL2ZXT4FJcU0lKb9I=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = TeamDetails;\nexport default TeamDetails;\nvar _c;\n$RefreshReg$(_c, \"TeamDetails\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Button","Header","Image","List","Accordion","Icon","Menu","Segment","Modal","Form","teamContext","axios","useParams","useNavigate","Cookies","SearchBar","jsxDEV","_jsxDEV","Fragment","_Fragment","TeamDetails","_s","teams","setTeams","userTeam","setTeam","teamId","navigate","activeIndex","setActiveIndex","editModalOpen","setEditModalOpen","newTeamName","setNewTeamName","newMembers","setNewMembers","selectedMembers","setSelectedMembers","fetchTeam","response","get","data","error","console","handleClick","e","titleProps","index","newIndex","state","handleUserClick","user","handleDeleteTeam","userId","delete","handleEditTeam","put","teamName","addMembers","map","member","_id","removeMembers","handleUserSelect","className","style","marginLeft","children","as","attached","dividing","textAlign","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","vertical","fluid","styled","Title","active","onClick","name","Content","divided","verticalAlign","members","Item","floated","avatar","src","firstName","lastName","admin","color","open","onClose","Input","label","placeholder","value","onChange","target","Field","onUserSelect","Actions","_c","$RefreshReg$"],"sources":["C:/Users/Shadan Syed Kazmi/Projects/msteams-clone/frontend/src/Components/TeamDetails.jsx"],"sourcesContent":["// import React, { useContext, useEffect, useState } from 'react';\r\n// import { Button, Divider, Header, Image, List, Accordion, Icon, Menu, Segment } from 'semantic-ui-react';\r\n// import { teamContext } from '../api/TeamsContext';\r\n// import axios from 'axios';\r\n// import { useParams, useNavigate } from 'react-router-dom';\r\n\r\n// const TeamDetails = () => {\r\n//   const { teams, setTeams } = useContext(teamContext);\r\n//   const [userTeam, setTeam] = useState(teams);\r\n//   const { teamId } = useParams();\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const fetchTeam = async () => {\r\n//       try {\r\n//         const response = await axios.get(`http://localhost:8000/team/userTeam/${teamId}`);\r\n//         setTeam(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching team:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchTeam();\r\n//   }, [teamId]);\r\n\r\n//   const [activeIndex, setActiveIndex] = useState(-1);\r\n\r\n//   const handleClick = (e, titleProps) => {\r\n//     const { index } = titleProps;\r\n//     const newIndex = activeIndex === index ? -1 : index;\r\n//     setActiveIndex(newIndex);\r\n\r\n//     // Navigate to team files route when clicking on \"Files\"\r\n//     if (index === 1 && newIndex === 1) { // Assuming index 1 corresponds to \"Files\"\r\n//       navigate(`/teamDetails/${teamId}/files`, { state: { teamId } });\r\n//     }\r\n\r\n//     // Navigate to team tasks route when clicking on \"Tasks\"\r\n//     if (index === 2 && newIndex === 2) { // Assuming index 2 corresponds to \"Tasks\"\r\n//       navigate(`/teamDetails/${teamId}/tasks`, { state: { teamId } });\r\n//     }\r\n//   };\r\n\r\n//   const handleUserClick = (user) => {\r\n//     navigate('/profile', { state: { user } });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"sticky top-16 bg-white shadow-md z-10\" style={{marginLeft:\"100px\"}}>\r\n//       <Header as='h1' attached dividing textAlign='center' style={{ backgroundColor: \"lightgrey\" }}>\r\n//         {userTeam.teamName}\r\n//       </Header>\r\n//       <Menu vertical fluid>\r\n//         <Accordion styled fluid>\r\n//           <Accordion.Title\r\n//             active={activeIndex === 0}\r\n//             index={0}\r\n//             onClick={handleClick}\r\n//           >\r\n//             <Icon name='dropdown' />\r\n//             Team Members\r\n//           </Accordion.Title>\r\n//           <Accordion.Content active={activeIndex === 0}>\r\n//             <List divided verticalAlign='middle'>\r\n//               {userTeam && userTeam.members && userTeam.members.map(member => (\r\n//                 <List.Item key={member._id}>\r\n//                   <List.Content floated='right'>\r\n//                     <Button>Message</Button>\r\n//                   </List.Content>\r\n//                   <Image avatar src='https://react.semantic-ui.com/images/avatar/small/lena.png' />\r\n//                   <List.Content as='a' onClick={() => handleUserClick(member)}>\r\n//                     {member.firstName} {member.lastName}\r\n//                   </List.Content>\r\n//                 </List.Item>\r\n//               ))}\r\n//             </List>\r\n//           </Accordion.Content>\r\n\r\n//           <Accordion.Title\r\n//             active={activeIndex === 1}\r\n//             index={1}\r\n//             onClick={handleClick}\r\n//           >\r\n//             <Icon name='dropdown' />\r\n//             Files\r\n//           </Accordion.Title>\r\n\r\n//           <Accordion.Title\r\n//             active={activeIndex === 2}\r\n//             index={2}\r\n//             onClick={handleClick}\r\n//           >\r\n//             <Icon name='dropdown' />\r\n//             Tasks\r\n//           </Accordion.Title>\r\n//         </Accordion>\r\n//       </Menu>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TeamDetails;\r\n\r\n// import React, { useContext, useEffect, useState } from 'react';\r\n// import { Button, Header, Image, List, Accordion, Icon, Menu, Segment } from 'semantic-ui-react';\r\n// import { teamContext } from '../api/TeamsContext';\r\n// import axios from 'axios';\r\n// import { useParams, useNavigate } from 'react-router-dom';\r\n\r\n// const TeamDetails = () => {\r\n//   const { teams, setTeams } = useContext(teamContext);\r\n//   const [userTeam, setTeam] = useState(null);\r\n//   const { teamId } = useParams();\r\n//   const navigate = useNavigate();\r\n//   const [activeIndex, setActiveIndex] = useState(-1);\r\n\r\n//   useEffect(() => {\r\n//     const fetchTeam = async () => {\r\n//       try {\r\n//         const response = await axios.get(`http://localhost:8000/team/userTeam/${teamId}`);\r\n//         setTeam(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching team:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchTeam();\r\n//   }, [teamId]);\r\n\r\n//   const handleClick = (e, titleProps) => {\r\n//     const { index } = titleProps;\r\n//     const newIndex = activeIndex === index ? -1 : index;\r\n//     setActiveIndex(newIndex);\r\n\r\n//     // Navigate to team files route when clicking on \"Files\"\r\n//     if (index === 1 && newIndex === 1) { \r\n//       navigate(`/teamDetails/${teamId}/files`, { state: { teamId } });\r\n//     }\r\n\r\n//     // Navigate to team tasks route when clicking on \"Tasks\"\r\n//     if (index === 2 && newIndex === 2) { \r\n//       navigate(`/teamDetails/${teamId}/tasks`, { state: { teamId } });\r\n//     }\r\n//   };\r\n\r\n//   const handleUserClick = (user) => {\r\n//     navigate('/profile', { state: { user } });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"sticky top-16 bg-white shadow-md z-10\" style={{marginLeft:\"100px\"}}>\r\n//       <Header as='h1' attached dividing textAlign='center' style={{ backgroundColor: \"lightgrey\" }}>\r\n//         {userTeam && userTeam.teamName}\r\n//       </Header>\r\n//       <Menu vertical fluid>\r\n//         <Accordion styled fluid>\r\n//           <Accordion.Title\r\n//             active={activeIndex === 0}\r\n//             index={0}\r\n//             onClick={handleClick}\r\n//           >\r\n//             <Icon name='dropdown' />\r\n//             Team Members\r\n//           </Accordion.Title>\r\n//           <Accordion.Content active={activeIndex === 0}>\r\n//             <List divided verticalAlign='middle'>\r\n//               {userTeam && userTeam.members && userTeam.members.map(member => (\r\n//                 <List.Item key={member._id}>\r\n//                   <List.Content floated='right'>\r\n//                     <Button>Message</Button>\r\n//                   </List.Content>\r\n//                   <Image avatar src='https://react.semantic-ui.com/images/avatar/small/lena.png' />\r\n//                   <List.Content as='a' onClick={() => handleUserClick(member)}>\r\n//                     {member.firstName} {member.lastName}\r\n//                     {userTeam.admin === member._id && <span style={{ color: 'red', marginLeft: '10px' }}>Admin</span>}\r\n//                   </List.Content>\r\n//                 </List.Item>\r\n//               ))}\r\n//             </List>\r\n//           </Accordion.Content>\r\n\r\n//           <Accordion.Title\r\n//             active={activeIndex === 1}\r\n//             index={1}\r\n//             onClick={handleClick}\r\n//           >\r\n//             <Icon name='dropdown' />\r\n//             Files\r\n//           </Accordion.Title>\r\n\r\n//           <Accordion.Title\r\n//             active={activeIndex === 2}\r\n//             index={2}\r\n//             onClick={handleClick}\r\n//           >\r\n//             <Icon name='dropdown' />\r\n//             Tasks\r\n//           </Accordion.Title>\r\n//         </Accordion>\r\n//       </Menu>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TeamDetails;\r\n\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { Button, Header, Image, List, Accordion, Icon, Menu, Segment, Modal, Form } from 'semantic-ui-react';\r\nimport { teamContext } from '../api/TeamsContext';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport Cookies from 'js-cookie';\r\nimport SearchBar from './SearchBar'; // Adjust path as needed\r\n\r\nconst TeamDetails = () => {\r\n  const { teams, setTeams } = useContext(teamContext);\r\n  const [userTeam, setTeam] = useState(null);\r\n  const { teamId } = useParams();\r\n  const navigate = useNavigate();\r\n  const [activeIndex, setActiveIndex] = useState(-1);\r\n  const [editModalOpen, setEditModalOpen] = useState(false);\r\n  const [newTeamName, setNewTeamName] = useState('');\r\n  const [newMembers, setNewMembers] = useState([]);\r\n  const [selectedMembers, setSelectedMembers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchTeam = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8000/team/userTeam/${teamId}`);\r\n        setTeam(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching team:', error);\r\n      }\r\n    };\r\n\r\n    fetchTeam();\r\n  }, [teamId]);\r\n\r\n  const handleClick = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n    setActiveIndex(newIndex);\r\n\r\n    // Navigate to team files route when clicking on \"Files\"\r\n    if (index === 1 && newIndex === 1) { \r\n      navigate(`/teamDetails/${teamId}/files`, { state: { teamId } });\r\n    }\r\n\r\n    // Navigate to team tasks route when clicking on \"Tasks\"\r\n    if (index === 2 && newIndex === 2) { \r\n      navigate(`/teamDetails/${teamId}/tasks`, { state: { teamId } });\r\n    }\r\n  };\r\n\r\n  const handleUserClick = (user) => {\r\n    navigate('/profile', { state: { user } });\r\n  };\r\n\r\n  const handleDeleteTeam = async () => {\r\n    const userId = Cookies.get('userId');\r\n    try {\r\n      await axios.delete(`http://localhost:8000/team/${teamId}`, {\r\n        data: { userId }\r\n      });\r\n      navigate('/teams');\r\n    } catch (error) {\r\n      console.error('Error deleting team:', error);\r\n    }\r\n  };\r\n\r\n  const handleEditTeam = async () => {\r\n    const userId = Cookies.get('userId');\r\n    try {\r\n      const response = await axios.put(`http://localhost:8000/team/${teamId}`, {\r\n        userId,\r\n        teamName: newTeamName,\r\n        addMembers: selectedMembers.map(member => member._id),\r\n        removeMembers: [] // Assuming no removal functionality in edit\r\n      });\r\n      setTeam(response.data);\r\n      setEditModalOpen(false);\r\n    } catch (error) {\r\n      console.error('Error updating team:', error);\r\n    }\r\n  };\r\n\r\n  const handleUserSelect = (user) => {\r\n    setNewMembers([...newMembers, user]);\r\n    setSelectedMembers([...selectedMembers, user]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"sticky top-16 bg-white shadow-md z-10\" style={{marginLeft:\"100px\"}}>\r\n      <Header as='h1' attached dividing textAlign='center' style={{ backgroundColor: \"lightgrey\" }}>\r\n        {userTeam && userTeam.teamName}\r\n      </Header>\r\n      <Menu vertical fluid>\r\n        <Accordion styled fluid>\r\n          <Accordion.Title\r\n            active={activeIndex === 0}\r\n            index={0}\r\n            onClick={handleClick}\r\n          >\r\n            <Icon name='dropdown' />\r\n            Team Members\r\n          </Accordion.Title>\r\n          <Accordion.Content active={activeIndex === 0}>\r\n            <List divided verticalAlign='middle'>\r\n              {userTeam && userTeam.members && userTeam.members.map(member => (\r\n                <List.Item key={member._id}>\r\n                  <List.Content floated='right'>\r\n                    <Button>Message</Button>\r\n                  </List.Content>\r\n                  <Image avatar src='https://react.semantic-ui.com/images/avatar/small/lena.png' />\r\n                  <List.Content as='a' onClick={() => handleUserClick(member)}>\r\n                    {member.firstName} {member.lastName}\r\n                    {userTeam.admin === member._id && <span style={{ color: 'red', marginLeft: '10px' }}>Admin</span>}\r\n                  </List.Content>\r\n                </List.Item>\r\n              ))}\r\n            </List>\r\n          </Accordion.Content>\r\n\r\n          <Accordion.Title\r\n            active={activeIndex === 1}\r\n            index={1}\r\n            onClick={handleClick}\r\n          >\r\n            <Icon name='dropdown' />\r\n            Files\r\n          </Accordion.Title>\r\n\r\n          <Accordion.Title\r\n            active={activeIndex === 2}\r\n            index={2}\r\n            onClick={handleClick}\r\n          >\r\n            <Icon name='dropdown' />\r\n            Tasks\r\n          </Accordion.Title>\r\n        </Accordion>\r\n      </Menu>\r\n\r\n      {userTeam && userTeam.admin === Cookies.get('userId') && (\r\n        <>\r\n          <Button color='red' onClick={handleDeleteTeam}>Delete Team</Button>\r\n          <Button color='blue' onClick={() => setEditModalOpen(true)}>Edit Team</Button>\r\n\r\n          <Modal\r\n            open={editModalOpen}\r\n            onClose={() => setEditModalOpen(false)}\r\n          >\r\n            <Modal.Header>Edit Team</Modal.Header>\r\n            <Modal.Content>\r\n              <Form>\r\n                <Form.Input\r\n                  label='Team Name'\r\n                  placeholder='Enter new team name'\r\n                  value={newTeamName}\r\n                  onChange={(e) => setNewTeamName(e.target.value)}\r\n                />\r\n                <Form.Field>\r\n                  <label>Add Members</label>\r\n                  <SearchBar onUserSelect={handleUserSelect} />\r\n                </Form.Field>\r\n                {newMembers.map((member, index) => (\r\n                  <Segment key={index}>\r\n                    <p>{member.firstName} {member.lastName}</p>\r\n                  </Segment>\r\n                ))}\r\n              </Form>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n              <Button onClick={() => setEditModalOpen(false)}>Cancel</Button>\r\n              <Button color='blue' onClick={handleEditTeam}>Save</Button>\r\n            </Modal.Actions>\r\n          </Modal>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamDetails;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC9D,SAASC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,SAAS,EAAEC,IAAI,EAAEC,IAAI,EAAEC,OAAO,EAAEC,KAAK,EAAEC,IAAI,QAAQ,mBAAmB;AAC5G,SAASC,WAAW,QAAQ,qBAAqB;AACjD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,WA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}