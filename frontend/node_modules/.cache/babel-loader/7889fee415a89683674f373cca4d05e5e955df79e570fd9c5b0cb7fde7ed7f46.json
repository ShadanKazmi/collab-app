{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shadan Syed Kazmi\\\\Projects\\\\msteams-clone\\\\frontend\\\\src\\\\Components\\\\TeamTasks.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { Button, Form, Header, List, Modal, Segment } from 'semantic-ui-react';\n// import axios from 'axios';\n// import { useLocation } from 'react-router-dom';\n// import Cookies from 'js-cookie';\n\n// const TeamTasks = () => {\n//   const location = useLocation();\n//   const teamId = location.state.teamId;\n//   const [taskDetail, setTaskDetail] = useState('');\n//   const [taskTitle, setTaskTitle] = useState('');\n//   const [tasks, setTasks] = useState([]);\n//   const [modalOpen, setModalOpen] = useState(false);\n//   const [file, setFile] = useState(null);\n\n//   useEffect(() => {\n//     fetchTasks();\n//   }, [teamId]);\n\n//   const fetchTasks = async () => {\n//     try {\n//       const response = await axios.get(`http://localhost:8000/files/${teamId}`);\n//       setTasks(response.data.uploadedContents);\n//     } catch (error) {\n//       console.error('Error fetching tasks:', error);\n//     }\n//   };\n\n//   const handleTaskSubmit = async () => {\n//     const userId = Cookies.get('userId');\n//     try {\n//       const formData = new FormData();\n//       formData.append('taskDetail', taskDetail);\n//       formData.append('taskTitle', taskTitle);\n//       formData.append('userId', userId);\n//       if (file) {\n//         formData.append('taskContent', file);\n//       }\n//       const response = await axios.post(`http://localhost:8000/files/${teamId}`, formData, {\n//         headers: {\n//           'Content-Type': 'multipart/form-data',\n//         },\n//       });\n\n//       setTasks([...tasks, response.data]);\n\n//       setTaskDetail('');\n//       setTaskTitle(''); // Clear taskTitle after submit\n//       setFile(null);\n//       setModalOpen(false);\n//     } catch (error) {\n//       console.error('Error creating task:', error);\n//     }\n//   };\n\n//   const handleFileChange = (e) => {\n//     setFile(e.target.files[0]);\n//   };\n\n//   return (\n//     <Segment>\n//       <Header as='h2'>Team Tasks</Header>\n\n//       {tasks.length > 0 ? (\n//         <List divided relaxed>\n//           {tasks.map(task => (\n//             <List.Item key={task._id}>\n//               <List.Icon name='tasks' />\n//               <List.Content>\n//                 <List.Header>{task.taskDetail}</List.Header>\n//                 <List.Description>Created by: {task.createdBy.firstName} {task.createdBy.lastName}</List.Description>\n//                 <List.Description>At: {new Date(task.createdAt).toLocaleString()}</List.Description>\n//               </List.Content>\n//             </List.Item>\n//           ))}\n//         </List>\n//       ) : (\n//         <p>No tasks available.</p>\n//       )}\n\n//       <Modal\n//         onClose={() => setModalOpen(false)}\n//         onOpen={() => setModalOpen(true)}\n//         open={modalOpen}\n//         trigger={<Button primary>Create Task</Button>}\n//       >\n//         <Modal.Header>Create New Task</Modal.Header>\n//         <Modal.Content>\n//           <Form>\n//             <Form.Input\n//               label='Task Title'\n//               placeholder='Enter task title...'\n//               value={taskTitle}\n//               onChange={(e) => setTaskTitle(e.target.value)}\n//             />\n//             <Form.TextArea\n//               label='Task Detail'\n//               placeholder='Enter task details...'\n//               value={taskDetail}\n//               onChange={(e) => setTaskDetail(e.target.value)}\n//             />\n//             <Form.Input\n//               type='file'\n//               label='Task Content (Optional)'\n//               onChange={handleFileChange}\n//             />\n//           </Form>\n//         </Modal.Content>\n//         <Modal.Actions>\n//           <Button onClick={() => setModalOpen(false)}>Cancel</Button>\n//           <Button primary onClick={handleTaskSubmit}>Create Task</Button>\n//         </Modal.Actions>\n//       </Modal>\n//     </Segment>\n//   );\n// };\n\n// export default TeamTasks;\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Form, Header, List, Modal, Segment } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeamTasks = () => {\n  _s();\n  const location = useLocation();\n  const teamId = location.state.teamId;\n  const [taskDetail, setTaskDetail] = useState('');\n  const [taskTitle, setTaskTitle] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [file, setFile] = useState(null);\n  const [selectedTask, setSelectedTask] = useState(null); // State to store selected task\n\n  useEffect(() => {\n    fetchTasks();\n  }, [teamId]);\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8000/files/${teamId}`);\n      setTasks(response.data.uploadedContents);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n  const handleTaskSubmit = async () => {\n    const userId = Cookies.get('userId');\n    try {\n      const formData = new FormData();\n      formData.append('taskDetail', taskDetail);\n      formData.append('taskTitle', taskTitle);\n      formData.append('userId', userId);\n      if (file) {\n        formData.append('taskContent', file);\n      }\n      const response = await axios.post(`http://localhost:8000/files/${teamId}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setTasks([...tasks, response.data]);\n      setTaskDetail('');\n      setTaskTitle(''); // Clear taskTitle after submit\n      setFile(null);\n      setModalOpen(false);\n    } catch (error) {\n      console.error('Error creating task:', error);\n    }\n  };\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleTaskClick = task => {\n    setSelectedTask(task);\n    setModalOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Segment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      as: \"h2\",\n      children: \"Team Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(List, {\n      divided: true,\n      relaxed: true,\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(List.Item, {\n        onClick: () => handleTaskClick(task),\n        children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n          name: \"tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n          children: [/*#__PURE__*/_jsxDEV(List.Header, {\n            children: task.taskTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(List.Description, {\n            children: [\"Created by: \", task.createdBy.firstName, \" \", task.createdBy.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(List.Description, {\n            children: [\"At: \", new Date(task.createdAt).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }, this)]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: () => setModalOpen(false),\n      open: modalOpen,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: selectedTask ? selectedTask.taskTitle : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: selectedTask && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedTask.taskDetail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), selectedTask.taskContent && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: selectedTask.taskContent,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"Download Task Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setModalOpen(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: () => setModalOpen(false),\n      onOpen: () => setModalOpen(true),\n      open: modalOpen,\n      trigger: /*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 18\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Create New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n            label: \"Task Title\",\n            placeholder: \"Enter task title...\",\n            value: taskTitle,\n            onChange: e => setTaskTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.TextArea, {\n            label: \"Task Detail\",\n            placeholder: \"Enter task details...\",\n            value: taskDetail,\n            onChange: e => setTaskDetail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            type: \"file\",\n            label: \"Task Content (Optional)\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setModalOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          primary: true,\n          onClick: handleTaskSubmit,\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s(TeamTasks, \"6sLWPgOPscB1NDNt85CrIoyvp3U=\", false, function () {\n  return [useLocation];\n});\n_c = TeamTasks;\nexport default TeamTasks;\nvar _c;\n$RefreshReg$(_c, \"TeamTasks\");","map":{"version":3,"names":["React","useState","useEffect","Button","Form","Header","List","Modal","Segment","axios","useLocation","Cookies","jsxDEV","_jsxDEV","TeamTasks","_s","location","teamId","state","taskDetail","setTaskDetail","taskTitle","setTaskTitle","tasks","setTasks","modalOpen","setModalOpen","file","setFile","selectedTask","setSelectedTask","fetchTasks","response","get","data","uploadedContents","error","console","handleTaskSubmit","userId","formData","FormData","append","post","headers","handleFileChange","e","target","files","handleTaskClick","task","children","as","fileName","_jsxFileName","lineNumber","columnNumber","length","divided","relaxed","map","Item","onClick","Icon","name","Content","Description","createdBy","firstName","lastName","Date","createdAt","toLocaleString","_id","onClose","open","taskContent","href","rel","Actions","onOpen","trigger","primary","Input","label","placeholder","value","onChange","TextArea","type","_c","$RefreshReg$"],"sources":["C:/Users/Shadan Syed Kazmi/Projects/msteams-clone/frontend/src/Components/TeamTasks.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { Button, Form, Header, List, Modal, Segment } from 'semantic-ui-react';\r\n// import axios from 'axios';\r\n// import { useLocation } from 'react-router-dom';\r\n// import Cookies from 'js-cookie';\r\n\r\n// const TeamTasks = () => {\r\n//   const location = useLocation();\r\n//   const teamId = location.state.teamId;\r\n//   const [taskDetail, setTaskDetail] = useState('');\r\n//   const [taskTitle, setTaskTitle] = useState('');\r\n//   const [tasks, setTasks] = useState([]);\r\n//   const [modalOpen, setModalOpen] = useState(false);\r\n//   const [file, setFile] = useState(null);\r\n  \r\n//   useEffect(() => {\r\n//     fetchTasks();\r\n//   }, [teamId]);\r\n\r\n//   const fetchTasks = async () => {\r\n//     try {\r\n//       const response = await axios.get(`http://localhost:8000/files/${teamId}`);\r\n//       setTasks(response.data.uploadedContents);\r\n//     } catch (error) {\r\n//       console.error('Error fetching tasks:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleTaskSubmit = async () => {\r\n//     const userId = Cookies.get('userId');\r\n//     try {\r\n//       const formData = new FormData();\r\n//       formData.append('taskDetail', taskDetail);\r\n//       formData.append('taskTitle', taskTitle);\r\n//       formData.append('userId', userId);\r\n//       if (file) {\r\n//         formData.append('taskContent', file);\r\n//       }\r\n//       const response = await axios.post(`http://localhost:8000/files/${teamId}`, formData, {\r\n//         headers: {\r\n//           'Content-Type': 'multipart/form-data',\r\n//         },\r\n//       });\r\n\r\n//       setTasks([...tasks, response.data]);\r\n\r\n//       setTaskDetail('');\r\n//       setTaskTitle(''); // Clear taskTitle after submit\r\n//       setFile(null);\r\n//       setModalOpen(false);\r\n//     } catch (error) {\r\n//       console.error('Error creating task:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleFileChange = (e) => {\r\n//     setFile(e.target.files[0]);\r\n//   };\r\n\r\n//   return (\r\n//     <Segment>\r\n//       <Header as='h2'>Team Tasks</Header>\r\n      \r\n//       {tasks.length > 0 ? (\r\n//         <List divided relaxed>\r\n//           {tasks.map(task => (\r\n//             <List.Item key={task._id}>\r\n//               <List.Icon name='tasks' />\r\n//               <List.Content>\r\n//                 <List.Header>{task.taskDetail}</List.Header>\r\n//                 <List.Description>Created by: {task.createdBy.firstName} {task.createdBy.lastName}</List.Description>\r\n//                 <List.Description>At: {new Date(task.createdAt).toLocaleString()}</List.Description>\r\n//               </List.Content>\r\n//             </List.Item>\r\n//           ))}\r\n//         </List>\r\n//       ) : (\r\n//         <p>No tasks available.</p>\r\n//       )}\r\n\r\n//       <Modal\r\n//         onClose={() => setModalOpen(false)}\r\n//         onOpen={() => setModalOpen(true)}\r\n//         open={modalOpen}\r\n//         trigger={<Button primary>Create Task</Button>}\r\n//       >\r\n//         <Modal.Header>Create New Task</Modal.Header>\r\n//         <Modal.Content>\r\n//           <Form>\r\n//             <Form.Input\r\n//               label='Task Title'\r\n//               placeholder='Enter task title...'\r\n//               value={taskTitle}\r\n//               onChange={(e) => setTaskTitle(e.target.value)}\r\n//             />\r\n//             <Form.TextArea\r\n//               label='Task Detail'\r\n//               placeholder='Enter task details...'\r\n//               value={taskDetail}\r\n//               onChange={(e) => setTaskDetail(e.target.value)}\r\n//             />\r\n//             <Form.Input\r\n//               type='file'\r\n//               label='Task Content (Optional)'\r\n//               onChange={handleFileChange}\r\n//             />\r\n//           </Form>\r\n//         </Modal.Content>\r\n//         <Modal.Actions>\r\n//           <Button onClick={() => setModalOpen(false)}>Cancel</Button>\r\n//           <Button primary onClick={handleTaskSubmit}>Create Task</Button>\r\n//         </Modal.Actions>\r\n//       </Modal>\r\n//     </Segment>\r\n//   );\r\n// };\r\n\r\n// export default TeamTasks;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Header, List, Modal, Segment } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst TeamTasks = () => {\r\n  const location = useLocation();\r\n  const teamId = location.state.teamId;\r\n  const [taskDetail, setTaskDetail] = useState('');\r\n  const [taskTitle, setTaskTitle] = useState('');\r\n  const [tasks, setTasks] = useState([]);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [file, setFile] = useState(null);\r\n  const [selectedTask, setSelectedTask] = useState(null); // State to store selected task\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, [teamId]);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8000/files/${teamId}`);\r\n      setTasks(response.data.uploadedContents);\r\n    } catch (error) {\r\n      console.error('Error fetching tasks:', error);\r\n    }\r\n  };\r\n\r\n  const handleTaskSubmit = async () => {\r\n    const userId = Cookies.get('userId');\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('taskDetail', taskDetail);\r\n      formData.append('taskTitle', taskTitle);\r\n      formData.append('userId', userId);\r\n      if (file) {\r\n        formData.append('taskContent', file);\r\n      }\r\n      const response = await axios.post(`http://localhost:8000/files/${teamId}`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      setTasks([...tasks, response.data]);\r\n\r\n      setTaskDetail('');\r\n      setTaskTitle(''); // Clear taskTitle after submit\r\n      setFile(null);\r\n      setModalOpen(false);\r\n    } catch (error) {\r\n      console.error('Error creating task:', error);\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleTaskClick = (task) => {\r\n    setSelectedTask(task);\r\n    setModalOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Segment>\r\n      <Header as='h2'>Team Tasks</Header>\r\n      \r\n      {tasks.length > 0 ? (\r\n        <List divided relaxed>\r\n          {tasks.map(task => (\r\n            <List.Item key={task._id} onClick={() => handleTaskClick(task)}>\r\n              <List.Icon name='tasks' />\r\n              <List.Content>\r\n                <List.Header>{task.taskTitle}</List.Header>\r\n                <List.Description>Created by: {task.createdBy.firstName} {task.createdBy.lastName}</List.Description>\r\n                <List.Description>At: {new Date(task.createdAt).toLocaleString()}</List.Description>\r\n              </List.Content>\r\n            </List.Item>\r\n          ))}\r\n        </List>\r\n      ) : (\r\n        <p>No tasks available.</p>\r\n      )}\r\n\r\n      <Modal\r\n        onClose={() => setModalOpen(false)}\r\n        open={modalOpen}\r\n      >\r\n        <Modal.Header>{selectedTask ? selectedTask.taskTitle : ''}</Modal.Header>\r\n        <Modal.Content>\r\n          {selectedTask && (\r\n            <div>\r\n              <p>{selectedTask.taskDetail}</p>\r\n              {selectedTask.taskContent && (\r\n                <p>\r\n                  <a href={selectedTask.taskContent} target=\"_blank\" rel=\"noopener noreferrer\">Download Task Content</a>\r\n                </p>\r\n              )}\r\n            </div>\r\n          )}\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button onClick={() => setModalOpen(false)}>Close</Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n\r\n      <Modal\r\n        onClose={() => setModalOpen(false)}\r\n        onOpen={() => setModalOpen(true)}\r\n        open={modalOpen}\r\n        trigger={<Button primary>Create Task</Button>}\r\n      >\r\n        <Modal.Header>Create New Task</Modal.Header>\r\n        <Modal.Content>\r\n          <Form>\r\n            <Form.Input\r\n              label='Task Title'\r\n              placeholder='Enter task title...'\r\n              value={taskTitle}\r\n              onChange={(e) => setTaskTitle(e.target.value)}\r\n            />\r\n            <Form.TextArea\r\n              label='Task Detail'\r\n              placeholder='Enter task details...'\r\n              value={taskDetail}\r\n              onChange={(e) => setTaskDetail(e.target.value)}\r\n            />\r\n            <Form.Input\r\n              type='file'\r\n              label='Task Content (Optional)'\r\n              onChange={handleFileChange}\r\n            />\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button onClick={() => setModalOpen(false)}>Cancel</Button>\r\n          <Button primary onClick={handleTaskSubmit}>Create Task</Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default TeamTasks;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}