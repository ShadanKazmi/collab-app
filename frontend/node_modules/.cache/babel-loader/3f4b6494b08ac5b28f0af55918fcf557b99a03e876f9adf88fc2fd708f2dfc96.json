{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shadan Syed Kazmi\\\\Projects\\\\msteams-clone\\\\frontend\\\\src\\\\Pages\\\\AllChats.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { List, Image } from 'semantic-ui-react'; // Assuming you have Semantic UI React installed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllChats = () => {\n  // Example dummy data\n  const chats = [{\n    userId: 'user1',\n    username: 'John Doe',\n    lastMessage: 'Hey there!',\n    avatar: 'https://react.semantic-ui.com/images/avatar/small/jenny.jpg'\n  }, {\n    userId: 'user2',\n    username: 'Jane Smith',\n    lastMessage: 'Sure thing!',\n    avatar: 'https://react.semantic-ui.com/images/avatar/small/lena.png'\n  }, {\n    userId: 'user3',\n    username: 'Alice Johnson',\n    lastMessage: 'See you later.',\n    avatar: 'https://react.semantic-ui.com/images/avatar/small/elliot.jpg'\n  }, {\n    userId: 'user4',\n    username: 'Bob Brown',\n    lastMessage: 'Got it!',\n    avatar: 'https://react.semantic-ui.com/images/avatar/small/matthew.png'\n  }, {\n    userId: 'user5',\n    username: 'Emma Lee',\n    lastMessage: 'Thanks!',\n    avatar: 'https://react.semantic-ui.com/images/avatar/small/matt.jpg'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingLeft: '100px',\n      marginTop: '7rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        marginBottom: '1rem'\n      },\n      children: \"All Chats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      divided: true,\n      relaxed: true,\n      style: {\n        maxWidth: '400px'\n      },\n      children: chats.map((chat, index) => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/chat/${chat.userId}`,\n        children: /*#__PURE__*/_jsxDEV(List.Item, {\n          style: {\n            cursor: 'pointer'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            avatar: true,\n            src: chat.avatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n            children: [/*#__PURE__*/_jsxDEV(List.Header, {\n              children: chat.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(List.Description, {\n              children: chat.lastMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = AllChats;\nexport default AllChats;\nvar _c;\n$RefreshReg$(_c, \"AllChats\");","map":{"version":3,"names":["React","Link","List","Image","jsxDEV","_jsxDEV","AllChats","chats","userId","username","lastMessage","avatar","style","paddingLeft","marginTop","children","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","divided","relaxed","maxWidth","map","chat","index","to","Item","cursor","src","Content","Header","Description","_c","$RefreshReg$"],"sources":["C:/Users/Shadan Syed Kazmi/Projects/msteams-clone/frontend/src/Pages/AllChats.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { List, Image } from 'semantic-ui-react'; // Assuming you have Semantic UI React installed\r\n\r\nconst AllChats = () => {\r\n  // Example dummy data\r\n  const chats = [\r\n    { userId: 'user1', username: 'John Doe', lastMessage: 'Hey there!', avatar: 'https://react.semantic-ui.com/images/avatar/small/jenny.jpg' },\r\n    { userId: 'user2', username: 'Jane Smith', lastMessage: 'Sure thing!', avatar: 'https://react.semantic-ui.com/images/avatar/small/lena.png' },\r\n    { userId: 'user3', username: 'Alice Johnson', lastMessage: 'See you later.', avatar: 'https://react.semantic-ui.com/images/avatar/small/elliot.jpg' },\r\n    { userId: 'user4', username: 'Bob Brown', lastMessage: 'Got it!', avatar: 'https://react.semantic-ui.com/images/avatar/small/matthew.png' },\r\n    { userId: 'user5', username: 'Emma Lee', lastMessage: 'Thanks!', avatar: 'https://react.semantic-ui.com/images/avatar/small/matt.jpg' },\r\n  ];\r\n\r\n  return (\r\n    <div style={{ paddingLeft: '100px', marginTop: '7rem' }}>\r\n      <h1 style={{ marginBottom: '1rem' }}>All Chats</h1>\r\n      <List divided relaxed style={{ maxWidth: '400px' }}>\r\n        {chats.map((chat, index) => (\r\n          <Link to={`/chat/${chat.userId}`} key={index}>\r\n            <List.Item style={{ cursor: 'pointer' }}>\r\n              <Image avatar src={chat.avatar} />\r\n              <List.Content>\r\n                <List.Header>{chat.username}</List.Header>\r\n                <List.Description>{chat.lastMessage}</List.Description>\r\n              </List.Content>\r\n            </List.Item>\r\n          </Link>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllChats;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,IAAI,EAAEC,KAAK,QAAQ,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB;EACA,MAAMC,KAAK,GAAG,CACZ;IAAEC,MAAM,EAAE,OAAO;IAAEC,QAAQ,EAAE,UAAU;IAAEC,WAAW,EAAE,YAAY;IAAEC,MAAM,EAAE;EAA8D,CAAC,EAC3I;IAAEH,MAAM,EAAE,OAAO;IAAEC,QAAQ,EAAE,YAAY;IAAEC,WAAW,EAAE,aAAa;IAAEC,MAAM,EAAE;EAA6D,CAAC,EAC7I;IAAEH,MAAM,EAAE,OAAO;IAAEC,QAAQ,EAAE,eAAe;IAAEC,WAAW,EAAE,gBAAgB;IAAEC,MAAM,EAAE;EAA+D,CAAC,EACrJ;IAAEH,MAAM,EAAE,OAAO;IAAEC,QAAQ,EAAE,WAAW;IAAEC,WAAW,EAAE,SAAS;IAAEC,MAAM,EAAE;EAAgE,CAAC,EAC3I;IAAEH,MAAM,EAAE,OAAO;IAAEC,QAAQ,EAAE,UAAU;IAAEC,WAAW,EAAE,SAAS;IAAEC,MAAM,EAAE;EAA6D,CAAC,CACxI;EAED,oBACEN,OAAA;IAAKO,KAAK,EAAE;MAAEC,WAAW,EAAE,OAAO;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACtDV,OAAA;MAAIO,KAAK,EAAE;QAAEI,YAAY,EAAE;MAAO,CAAE;MAAAD,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnDf,OAAA,CAACH,IAAI;MAACmB,OAAO;MAACC,OAAO;MAACV,KAAK,EAAE;QAAEW,QAAQ,EAAE;MAAQ,CAAE;MAAAR,QAAA,EAChDR,KAAK,CAACiB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBrB,OAAA,CAACJ,IAAI;QAAC0B,EAAE,EAAE,SAASF,IAAI,CAACjB,MAAM,EAAG;QAAAO,QAAA,eAC/BV,OAAA,CAACH,IAAI,CAAC0B,IAAI;UAAChB,KAAK,EAAE;YAAEiB,MAAM,EAAE;UAAU,CAAE;UAAAd,QAAA,gBACtCV,OAAA,CAACF,KAAK;YAACQ,MAAM;YAACmB,GAAG,EAAEL,IAAI,CAACd;UAAO;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClCf,OAAA,CAACH,IAAI,CAAC6B,OAAO;YAAAhB,QAAA,gBACXV,OAAA,CAACH,IAAI,CAAC8B,MAAM;cAAAjB,QAAA,EAAEU,IAAI,CAAChB;YAAQ;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAc,CAAC,eAC1Cf,OAAA,CAACH,IAAI,CAAC+B,WAAW;cAAAlB,QAAA,EAAEU,IAAI,CAACf;YAAW;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAmB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC,GAPyBM,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQtC,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACc,EAAA,GA5BI5B,QAAQ;AA8Bd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}