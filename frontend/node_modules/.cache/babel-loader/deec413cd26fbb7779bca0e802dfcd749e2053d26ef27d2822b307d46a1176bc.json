{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shadan Syed Kazmi\\\\Projects\\\\msteams-clone\\\\frontend\\\\src\\\\Pages\\\\AllChats.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Form, Comment, Icon, Divider } from 'semantic-ui-react';\nimport { redirect } from 'react-router-dom';\nimport SearchBar from '../Components/SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllChats = () => {\n  _s();\n  const [chats, setChats] = useState([]);\n  const [selectedUserId, setSelectedUserId] = useState(null);\n  const handleUserSelect = selectedUser => {\n    if (selectedUser) {\n      const existingChat = chats.find(chat => chat.member._id === selectedUser._id);\n      if (existingChat) {\n        setSelectedUserId(selectedUser._id);\n      } else {\n        // Create new chat box for selected user\n        const newChat = {\n          id: selectedUser._id,\n          member: selectedUser,\n          lastMessage: 'Start chatting...',\n          timestamp: new Date().toLocaleTimeString()\n        };\n        setChats([...chats, newChat]);\n        setSelectedUserId(selectedUser._id);\n      }\n    }\n  };\n  if (selectedUserId) {\n    return redirect(`/chat/${selectedUserId}`);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-100 min-h-screen\",\n    children: /*#__PURE__*/_jsxDEV(SearchBar, {\n      onUserSelect: handleUserSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(AllChats, \"y3YjcA2TRK0TCH5Vbye4KXLX1KE=\");\n_c = AllChats;\nexport default AllChats;\nvar _c;\n$RefreshReg$(_c, \"AllChats\");","map":{"version":3,"names":["React","useState","Button","Form","Comment","Icon","Divider","redirect","SearchBar","jsxDEV","_jsxDEV","AllChats","_s","chats","setChats","selectedUserId","setSelectedUserId","handleUserSelect","selectedUser","existingChat","find","chat","member","_id","newChat","id","lastMessage","timestamp","Date","toLocaleTimeString","className","children","onUserSelect","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Shadan Syed Kazmi/Projects/msteams-clone/frontend/src/Pages/AllChats.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Form, Comment, Icon, Divider } from 'semantic-ui-react';\r\nimport { redirect } from 'react-router-dom';\r\nimport SearchBar from '../Components/SearchBar';\r\n\r\nconst AllChats = () => {\r\n  const [chats, setChats] = useState([]);\r\n  const [selectedUserId, setSelectedUserId] = useState(null);\r\n\r\n  const handleUserSelect = (selectedUser) => {\r\n    if (selectedUser) {\r\n      const existingChat = chats.find(chat => chat.member._id === selectedUser._id);\r\n      if (existingChat) {\r\n        setSelectedUserId(selectedUser._id);\r\n      } else {\r\n        // Create new chat box for selected user\r\n        const newChat = {\r\n          id: selectedUser._id,\r\n          member: selectedUser,\r\n          lastMessage: 'Start chatting...',\r\n          timestamp: new Date().toLocaleTimeString(),\r\n        };\r\n        setChats([...chats, newChat]);\r\n        setSelectedUserId(selectedUser._id);\r\n      }\r\n    }\r\n  };\r\n\r\n  if (selectedUserId) {\r\n    return redirect(`/chat/${selectedUserId}`);\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-gray-100 min-h-screen\">\r\n                  <SearchBar onUserSelect={handleUserSelect} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllChats;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,IAAI,EAAEC,OAAO,EAAEC,IAAI,EAAEC,OAAO,QAAQ,mBAAmB;AACxE,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE1D,MAAMgB,gBAAgB,GAAIC,YAAY,IAAK;IACzC,IAAIA,YAAY,EAAE;MAChB,MAAMC,YAAY,GAAGN,KAAK,CAACO,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,CAACC,GAAG,KAAKL,YAAY,CAACK,GAAG,CAAC;MAC7E,IAAIJ,YAAY,EAAE;QAChBH,iBAAiB,CAACE,YAAY,CAACK,GAAG,CAAC;MACrC,CAAC,MAAM;QACL;QACA,MAAMC,OAAO,GAAG;UACdC,EAAE,EAAEP,YAAY,CAACK,GAAG;UACpBD,MAAM,EAAEJ,YAAY;UACpBQ,WAAW,EAAE,mBAAmB;UAChCC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;QAC3C,CAAC;QACDf,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEW,OAAO,CAAC,CAAC;QAC7BR,iBAAiB,CAACE,YAAY,CAACK,GAAG,CAAC;MACrC;IACF;EACF,CAAC;EAED,IAAIR,cAAc,EAAE;IAClB,OAAOR,QAAQ,CAAC,SAASQ,cAAc,EAAE,CAAC;EAC5C;EAEA,oBACEL,OAAA;IAAKoB,SAAS,EAAC,0BAA0B;IAAAC,QAAA,eAC3BrB,OAAA,CAACF,SAAS;MAACwB,YAAY,EAAEf;IAAiB;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV,CAAC;AAACxB,EAAA,CAhCID,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}