{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shadan Syed Kazmi\\\\Projects\\\\msteams-clone\\\\frontend\\\\src\\\\Components\\\\TeamFiles.jsx\",\n  _s = $RefreshSig$();\n// // components/TeamFiles.js\n// import React, { useState, useEffect } from 'react';\n// import { List, Icon, Segment } from 'semantic-ui-react';\n// import axios from 'axios';\n\n// const TeamFiles = ({ teamId }) => {\n//   const [teamFiles, setTeamFiles] = useState([]);\n\n//   useEffect(() => {\n//     const fetchFiles = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:8000/files/${teamId}`);\n//         setTeamFiles(response.data);\n//       } catch (error) {\n//         console.error('Error fetching team files:', error);\n//       }\n//     };\n\n//     fetchFiles();\n//   }, [teamId]);\n\n//   return (\n//     <Segment>\n//       <Icon name='folder open' />\n//       Files\n//       <List divided relaxed>\n//         {teamFiles.map(file => (\n//           <List.Item key={file._id}>\n//             <List.Icon name='file' />\n//             <List.Content>\n//               <List.Header as='a' href={file.fileUrl} target='_blank'>{file.fileName}</List.Header>\n//               <List.Description>{file.description}</List.Description>\n//             </List.Content>\n//           </List.Item>\n//         ))}\n//       </List>\n//     </Segment>\n//   );\n// };\n\n// export default TeamFiles;\n\nimport React, { useState, useEffect } from 'react';\nimport { List, Icon, Segment } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeamFiles = () => {\n  _s();\n  const [teamFiles, setTeamFiles] = useState([]);\n  const location = useLocation();\n  const teamId = location.state.teamId;\n  console.log(teamId);\n  useEffect(() => {\n    const fetchFiles = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8000/files/${teamId}`);\n        setTeamFiles(response.data);\n      } catch (error) {\n        console.error('Error fetching team files:', error);\n      }\n    };\n    fetchFiles();\n  }, [teamId]);\n  return /*#__PURE__*/_jsxDEV(Segment, {\n    children: [/*#__PURE__*/_jsxDEV(Icon, {\n      name: \"folder open\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), \"Files\", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: teamFiles.uploadedContents._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(TeamFiles, \"9LLwFDAD//JL9rtIGvpUiikJ/cs=\", false, function () {\n  return [useLocation];\n});\n_c = TeamFiles;\nexport default TeamFiles;\nvar _c;\n$RefreshReg$(_c, \"TeamFiles\");","map":{"version":3,"names":["React","useState","useEffect","List","Icon","Segment","axios","useLocation","jsxDEV","_jsxDEV","TeamFiles","_s","teamFiles","setTeamFiles","location","teamId","state","console","log","fetchFiles","response","get","data","error","children","name","fileName","_jsxFileName","lineNumber","columnNumber","uploadedContents","_id","_c","$RefreshReg$"],"sources":["C:/Users/Shadan Syed Kazmi/Projects/msteams-clone/frontend/src/Components/TeamFiles.jsx"],"sourcesContent":["// // components/TeamFiles.js\r\n// import React, { useState, useEffect } from 'react';\r\n// import { List, Icon, Segment } from 'semantic-ui-react';\r\n// import axios from 'axios';\r\n\r\n// const TeamFiles = ({ teamId }) => {\r\n//   const [teamFiles, setTeamFiles] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const fetchFiles = async () => {\r\n//       try {\r\n//         const response = await axios.get(`http://localhost:8000/files/${teamId}`);\r\n//         setTeamFiles(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching team files:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchFiles();\r\n//   }, [teamId]);\r\n\r\n//   return (\r\n//     <Segment>\r\n//       <Icon name='folder open' />\r\n//       Files\r\n//       <List divided relaxed>\r\n//         {teamFiles.map(file => (\r\n//           <List.Item key={file._id}>\r\n//             <List.Icon name='file' />\r\n//             <List.Content>\r\n//               <List.Header as='a' href={file.fileUrl} target='_blank'>{file.fileName}</List.Header>\r\n//               <List.Description>{file.description}</List.Description>\r\n//             </List.Content>\r\n//           </List.Item>\r\n//         ))}\r\n//       </List>\r\n//     </Segment>\r\n//   );\r\n// };\r\n\r\n// export default TeamFiles;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { List, Icon, Segment } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst TeamFiles = () => {\r\n  const [teamFiles, setTeamFiles] = useState([]);\r\n  const location = useLocation();\r\n  const teamId = location.state.teamId;\r\n  console.log(teamId)\r\n\r\n  useEffect(() => {\r\n    const fetchFiles = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8000/files/${teamId}`);\r\n        setTeamFiles(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching team files:', error);\r\n      }\r\n    };\r\n\r\n    fetchFiles();\r\n  }, [teamId]);\r\n\r\n  return (\r\n    <Segment>\r\n      <Icon name='folder open' />\r\n      Files\r\n      <h1>\r\n      {teamFiles.uploadedContents._id}\r\n      </h1>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default TeamFiles;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,IAAI,EAAEC,OAAO,QAAQ,mBAAmB;AACvD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMa,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,MAAM,GAAGD,QAAQ,CAACE,KAAK,CAACD,MAAM;EACpCE,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;EAEnBb,SAAS,CAAC,MAAM;IACd,MAAMiB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,+BAA+BN,MAAM,EAAE,CAAC;QACzEF,YAAY,CAACO,QAAQ,CAACE,IAAI,CAAC;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDJ,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZ,oBACEN,OAAA,CAACJ,OAAO;IAAAmB,QAAA,gBACNf,OAAA,CAACL,IAAI;MAACqB,IAAI,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,SAE3B,eAAApB,OAAA;MAAAe,QAAA,EACCZ,SAAS,CAACkB,gBAAgB,CAACC;IAAG;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEd,CAAC;AAAClB,EAAA,CA5BID,SAAS;EAAA,QAEIH,WAAW;AAAA;AAAAyB,EAAA,GAFxBtB,SAAS;AA8Bf,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}