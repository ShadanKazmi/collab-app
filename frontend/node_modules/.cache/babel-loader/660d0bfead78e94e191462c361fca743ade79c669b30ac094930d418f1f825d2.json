{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shadan Syed Kazmi\\\\Projects\\\\msteams-clone\\\\frontend\\\\src\\\\Pages\\\\AllTasks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { List, Segment, Header } from 'semantic-ui-react';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllTasks = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const userId = Cookies.get('userId');\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get(`https://collab-app-backend.onrender.comfiles/tasks/${userId}`);\n        setTasks(response.data.tasks);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, []);\n  const formatDateTime = dateTimeString => {\n    const dateTime = new Date(dateTimeString);\n    return `${dateTime.toLocaleDateString()} ${dateTime.toLocaleTimeString()}`;\n  };\n  return /*#__PURE__*/_jsxDEV(Segment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      as: \"h2\",\n      children: \"All Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(List, {\n      divided: true,\n      relaxed: true,\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(List.Item, {\n        children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n          name: \"tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n          children: [/*#__PURE__*/_jsxDEV(List.Description, {\n            children: [\"Team: \", task.teamId.teamName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(List.Header, {\n            children: task.taskTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(List.Description, {\n            children: task.taskDetail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(List.Description, {\n            children: [\"Created by: \", task.createdBy.firstName, \" \", task.createdBy.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(List.Description, {\n            children: [\"At: \", formatDateTime(task.createdAt)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), task.taskContent && /*#__PURE__*/_jsxDEV(List.Description, {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: task.taskContent,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"View Attached File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(AllTasks, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = AllTasks;\nexport default AllTasks;\nvar _c;\n$RefreshReg$(_c, \"AllTasks\");","map":{"version":3,"names":["React","useState","useEffect","List","Segment","Header","axios","Cookies","jsxDEV","_jsxDEV","AllTasks","_s","tasks","setTasks","userId","get","fetchTasks","response","data","error","console","formatDateTime","dateTimeString","dateTime","Date","toLocaleDateString","toLocaleTimeString","children","as","fileName","_jsxFileName","lineNumber","columnNumber","length","divided","relaxed","map","task","Item","Icon","name","Content","Description","teamId","teamName","taskTitle","taskDetail","createdBy","firstName","lastName","createdAt","taskContent","href","target","rel","_id","_c","$RefreshReg$"],"sources":["C:/Users/Shadan Syed Kazmi/Projects/msteams-clone/frontend/src/Pages/AllTasks.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { List, Segment, Header } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst AllTasks = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const userId = Cookies.get('userId');\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const response = await axios.get(`https://collab-app-backend.onrender.comfiles/tasks/${userId}`);\r\n        setTasks(response.data.tasks);\r\n      } catch (error) {\r\n        console.error('Error fetching tasks:', error);\r\n      }\r\n    };\r\n\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const formatDateTime = (dateTimeString) => {\r\n    const dateTime = new Date(dateTimeString);\r\n    return `${dateTime.toLocaleDateString()} ${dateTime.toLocaleTimeString()}`;\r\n  };\r\n\r\n  return (\r\n    <Segment>\r\n      <Header as='h2'>All Tasks</Header>\r\n      {tasks.length > 0 ? (\r\n        <List divided relaxed>\r\n          {tasks.map(task => (\r\n            <List.Item key={task._id}>\r\n              <List.Icon name='tasks' />\r\n              <List.Content>\r\n                <List.Description>Team: {task.teamId.teamName}</List.Description>\r\n                <List.Header>{task.taskTitle}</List.Header>\r\n                <List.Description>{task.taskDetail}</List.Description>\r\n                <List.Description>Created by: {task.createdBy.firstName} {task.createdBy.lastName}</List.Description>\r\n                <List.Description>At: {formatDateTime(task.createdAt)}</List.Description>\r\n                {task.taskContent && (\r\n                  <List.Description>\r\n                    <a href={task.taskContent} target=\"_blank\" rel=\"noopener noreferrer\">View Attached File</a>\r\n                  </List.Description>\r\n                )}\r\n              </List.Content>\r\n            </List.Item>\r\n          ))}\r\n        </List>\r\n      ) : (\r\n        <p>No tasks available.</p>\r\n      )}\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default AllTasks;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}