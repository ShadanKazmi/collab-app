{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shadan Syed Kazmi\\\\Projects\\\\msteams-clone\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import { Route, Routes, useLocation } from 'react-router-dom';\n// import './App.css';\n// import Home from './Pages/Home';\n// import NavBar from './Components/NavBar';\n// import TeamPage from './Pages/TeamPage';\n// import AuthPage from './Pages/AuthPage';\n// import UserProfile from './Pages/UserProfile';\n// import UserDetails from './Pages/UserDetails';\n\n// function App() {\n//   const location = useLocation();\n//   const isAuthPage = location.pathname === '/auth';\n//   return (\n//     <div>\n//       {!isAuthPage && <NavBar />}\n//       <div className={`flex-1 p-10 ${!isAuthPage ? 'ml-56' : ''}`}>\n//         <Routes>\n//           <Route path='/' element={<Home/>} />\n//           <Route path='/teamDetails/:teamId' element={<TeamPage />} />\n//           <Route path='/auth' element={<AuthPage />} />\n//           <Route path='/profile' element = {<UserProfile/>}/>\n//           <Route path='/userProfile' element = {<UserDetails/>}/>\n//         </Routes>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport { Route, Routes, useLocation } from 'react-router-dom';\nimport './App.css';\nimport Home from './Pages/Home';\nimport NavBar from './Components/NavBar';\nimport TeamPage from './Pages/TeamPage';\nimport AuthPage from './Pages/AuthPage';\nimport UserProfile from './Pages/UserProfile';\nimport UserDetails from './Pages/UserDetails';\nimport { useContext, useEffect } from 'react';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    userState,\n    login,\n    logout\n  } = useContext(authContext);\n  const location = useLocation();\n\n  // Check if user cookie exists\n  useEffect(() => {\n    const checkUserCookie = async () => {\n      const userId = Cookies.get('userId');\n      if (userId) {\n        // Perform additional checks if necessary (e.g., verify token validity)\n        login(); // Log user in\n      } else {\n        logout(); // Log user out\n      }\n    };\n    checkUserCookie();\n  }, [login, logout]);\n\n  // Determine if NavBar should be rendered based on the current location\n  const shouldRenderNavBar = location.pathname !== '/auth';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [shouldRenderNavBar && /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex-1 p-10 ${shouldRenderNavBar ? 'ml-56' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: userState === 'Logged-In' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 40\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/teamDetails/:teamId\",\n            element: /*#__PURE__*/_jsxDEV(TeamPage, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/profile\",\n            element: /*#__PURE__*/_jsxDEV(UserProfile, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/userProfile\",\n            element: /*#__PURE__*/_jsxDEV(UserDetails, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 51\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/auth\",\n          element: /*#__PURE__*/_jsxDEV(AuthPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iJUGwnjxR8AUu4MTSvW9+IxEJyw=\", false, function () {\n  return [useLocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Route","Routes","useLocation","Home","NavBar","TeamPage","AuthPage","UserProfile","UserDetails","useContext","useEffect","Cookies","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","userState","login","logout","authContext","location","checkUserCookie","userId","get","shouldRenderNavBar","pathname","children","fileName","_jsxFileName","lineNumber","columnNumber","className","path","element","_c","$RefreshReg$"],"sources":["C:/Users/Shadan Syed Kazmi/Projects/msteams-clone/frontend/src/App.js"],"sourcesContent":["// import { Route, Routes, useLocation } from 'react-router-dom';\n// import './App.css';\n// import Home from './Pages/Home';\n// import NavBar from './Components/NavBar';\n// import TeamPage from './Pages/TeamPage';\n// import AuthPage from './Pages/AuthPage';\n// import UserProfile from './Pages/UserProfile';\n// import UserDetails from './Pages/UserDetails';\n\n// function App() {\n//   const location = useLocation();\n//   const isAuthPage = location.pathname === '/auth';\n//   return (\n//     <div>\n//       {!isAuthPage && <NavBar />}\n//       <div className={`flex-1 p-10 ${!isAuthPage ? 'ml-56' : ''}`}>\n//         <Routes>\n//           <Route path='/' element={<Home/>} />\n//           <Route path='/teamDetails/:teamId' element={<TeamPage />} />\n//           <Route path='/auth' element={<AuthPage />} />\n//           <Route path='/profile' element = {<UserProfile/>}/>\n//           <Route path='/userProfile' element = {<UserDetails/>}/>\n//         </Routes>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport { Route, Routes, useLocation } from 'react-router-dom';\nimport './App.css';\nimport Home from './Pages/Home';\nimport NavBar from './Components/NavBar';\nimport TeamPage from './Pages/TeamPage';\nimport AuthPage from './Pages/AuthPage';\nimport UserProfile from './Pages/UserProfile';\nimport UserDetails from './Pages/UserDetails';\nimport { useContext, useEffect } from 'react';\nimport Cookies from 'js-cookie';\n\nfunction App() {\n  const { userState, login, logout } = useContext(authContext);\n  const location = useLocation();\n\n  // Check if user cookie exists\n  useEffect(() => {\n    const checkUserCookie = async () => {\n      const userId = Cookies.get('userId');\n      if (userId) {\n        // Perform additional checks if necessary (e.g., verify token validity)\n        login(); // Log user in\n      } else {\n        logout(); // Log user out\n      }\n    };\n\n    checkUserCookie();\n  }, [login, logout]);\n\n  // Determine if NavBar should be rendered based on the current location\n  const shouldRenderNavBar = location.pathname !== '/auth';\n\n  return (\n    <div>\n      {shouldRenderNavBar && <NavBar />}\n      <div className={`flex-1 p-10 ${shouldRenderNavBar ? 'ml-56' : ''}`}>\n        <Routes>\n          {userState === 'Logged-In' ? (\n            <>\n              <Route path='/' element={<Home />} />\n              <Route path='/teamDetails/:teamId' element={<TeamPage />} />\n              <Route path='/profile' element={<UserProfile />} />\n              <Route path='/userProfile' element={<UserDetails />} />\n            </>\n          ) : (\n            <Route path='/auth' element={<AuthPage />} />\n          )}\n        </Routes>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}