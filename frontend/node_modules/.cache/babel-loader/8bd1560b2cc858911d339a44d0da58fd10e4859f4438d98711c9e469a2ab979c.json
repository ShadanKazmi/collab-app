{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shadan Syed Kazmi\\\\Projects\\\\msteams-clone\\\\frontend\\\\src\\\\Pages\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Form, Comment, Icon, Divider, CommentAvatar } from 'semantic-ui-react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport Cookies from 'js-cookie';\nimport AllChats from './AllChats';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:8000');\nconst Chat = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [newFile, setNewFile] = useState(null);\n  const [filePreview, setFilePreview] = useState(null);\n  useEffect(() => {\n    // Fetch initial chat messages\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8000/chat/${Cookies.get('userId')}/${userId}`);\n        setMessages(response.data);\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      }\n    };\n    fetchMessages();\n    socket.on('newChatMessage', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n    return () => {\n      socket.off('newChatMessage');\n    };\n  }, [userId]);\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    setNewFile(file);\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setFilePreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    } else {\n      setFilePreview(null);\n    }\n  };\n  const handleSendMessage = async () => {\n    const fromUser = Cookies.get('userId');\n    if (!fromUser) {\n      console.error('User not found.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('textContent', newMessage);\n    formData.append('fromUser', fromUser);\n    if (newFile) {\n      formData.append('uploadContent', newFile);\n    }\n    try {\n      const response = await axios.post(`http://localhost:8000/chat/${userId}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      socket.emit('newChatMessage', response.data);\n      setNewMessage('');\n      setNewFile(null);\n      setFilePreview(null);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  const passUserIdToAnotherComponent = () => {\n    // Replace 'AnotherComponent' with the actual function or component where you want to pass userId\n    // For example, if it's a function:\n    // anotherFunction(userId);\n\n    // Or if it's a component:\n    /*#__PURE__*/_jsxDEV(AllChats, {\n      userId: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  };\n  passUserIdToAnotherComponent();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingLeft: '100px',\n      marginTop: '7rem',\n      position: 'relative',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Divider, {\n      horizontal: true,\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingBottom: '4rem',\n        marginBottom: '4rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(Comment.Group, {\n        threaded: true,\n        size: \"large\",\n        children: messages.map(message => /*#__PURE__*/_jsxDEV(Comment, {\n          children: /*#__PURE__*/_jsxDEV(Comment.Content, {\n            children: [/*#__PURE__*/_jsxDEV(CommentAvatar, {\n              src: `http://localhost:8000/chat${message.fromUser.profileImageURL}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Comment.Author, {\n              children: [message.fromUser.firstName, \" \", message.fromUser.lastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Comment.Metadata, {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: new Date(message.createdAt).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Comment.Text, {\n              children: message.textContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), message.uploadContent && /*#__PURE__*/_jsxDEV(Comment.Text, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                icon: true,\n                labelPosition: \"left\",\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"file alternate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 23\n                }, this), message.uploadContent.split('/').pop()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, message._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        bottom: '0',\n        width: '50%',\n        background: 'white',\n        padding: '1rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        reply: true,\n        children: [/*#__PURE__*/_jsxDEV(Form.TextArea, {\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          placeholder: \"Send a message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), filePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: filePreview,\n            alt: \"Preview\",\n            style: {\n              maxHeight: '200px',\n              marginBottom: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          content: \"Send\",\n          labelPosition: \"left\",\n          icon: \"send\",\n          onClick: handleSendMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          as: \"label\",\n          icon: true,\n          labelPosition: \"left\",\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), \"Upload File\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            hidden: true,\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AllChats, {\n      userId: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"qCmsRfBZkyby3nkYGCWfhvbKB6w=\", false, function () {\n  return [useParams];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","Button","Form","Comment","Icon","Divider","CommentAvatar","useParams","axios","io","Cookies","AllChats","jsxDEV","_jsxDEV","socket","Chat","_s","userId","messages","setMessages","newMessage","setNewMessage","newFile","setNewFile","filePreview","setFilePreview","fetchMessages","response","get","data","error","console","on","message","prevMessages","off","handleFileChange","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","handleSendMessage","fromUser","formData","FormData","append","post","headers","emit","passUserIdToAnotherComponent","fileName","_jsxFileName","lineNumber","columnNumber","style","paddingLeft","marginTop","position","overflow","children","horizontal","paddingBottom","marginBottom","Group","threaded","size","map","Content","src","profileImageURL","Author","firstName","lastName","Metadata","Date","createdAt","toLocaleString","Text","textContent","uploadContent","icon","labelPosition","name","split","pop","_id","bottom","width","background","padding","reply","TextArea","value","onChange","placeholder","alt","maxHeight","content","onClick","as","type","hidden","_c","$RefreshReg$"],"sources":["C:/Users/Shadan Syed Kazmi/Projects/msteams-clone/frontend/src/Pages/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Comment, Icon, Divider, CommentAvatar } from 'semantic-ui-react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport io from 'socket.io-client';\r\nimport Cookies from 'js-cookie';\r\nimport AllChats from './AllChats';\r\n\r\nconst socket = io('http://localhost:8000');\r\n\r\nconst Chat = () => {\r\n  const { userId } = useParams();\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [newFile, setNewFile] = useState(null);\r\n  const [filePreview, setFilePreview] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch initial chat messages\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8000/chat/${Cookies.get('userId')}/${userId}`);\r\n        setMessages(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching messages:', error);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n\r\n\r\n    socket.on('newChatMessage', (message) => {\r\n      setMessages((prevMessages) => [...prevMessages, message]);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('newChatMessage');\r\n    };\r\n  }, [userId]);\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    setNewFile(file);\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setFilePreview(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      setFilePreview(null);\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = async () => {\r\n    const fromUser = Cookies.get('userId');\r\n    if (!fromUser) {\r\n      console.error('User not found.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('textContent', newMessage);\r\n    formData.append('fromUser', fromUser);\r\n    if (newFile) {\r\n      formData.append('uploadContent', newFile);\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(`http://localhost:8000/chat/${userId}`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      socket.emit('newChatMessage', response.data);\r\n\r\n      setNewMessage('');\r\n      setNewFile(null);\r\n      setFilePreview(null);\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    }\r\n  };\r\n\r\n  const passUserIdToAnotherComponent = () => {\r\n    // Replace 'AnotherComponent' with the actual function or component where you want to pass userId\r\n    // For example, if it's a function:\r\n    // anotherFunction(userId);\r\n    \r\n    // Or if it's a component:\r\n      <AllChats userId={userId} />\r\n  };\r\n\r\n  passUserIdToAnotherComponent();\r\n\r\n  return (\r\n    <div style={{ paddingLeft: '100px', marginTop: '7rem', position: 'relative', overflow: 'hidden' }}>\r\n      <Divider horizontal>Chat</Divider>\r\n      <div style={{ paddingBottom: '4rem', marginBottom: '4rem' }}>\r\n        <Comment.Group threaded size='large'>\r\n          {messages.map((message) => (\r\n            <Comment key={message._id}>\r\n              <Comment.Content>\r\n                <CommentAvatar\r\n                  src={`http://localhost:8000/chat${message.fromUser.profileImageURL}`}\r\n                />\r\n                <Comment.Author>{message.fromUser.firstName} {message.fromUser.lastName}</Comment.Author>\r\n                <Comment.Metadata>\r\n                  <span>{new Date(message.createdAt).toLocaleString()}</span>\r\n                </Comment.Metadata>\r\n                <Comment.Text>{message.textContent}</Comment.Text>\r\n                {message.uploadContent && (\r\n                  <Comment.Text>\r\n                    <Button icon labelPosition='left'>\r\n                      <Icon name='file alternate' />\r\n                      {message.uploadContent.split('/').pop()}\r\n                    </Button>\r\n                  </Comment.Text>\r\n                )}\r\n              </Comment.Content>\r\n            </Comment>\r\n          ))}\r\n        </Comment.Group>\r\n      </div>\r\n      <div style={{ position: 'relative', bottom: '0', width: '50%', background: 'white', padding: '1rem' }}>\r\n        <Form reply>\r\n          <Form.TextArea\r\n            value={newMessage}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n            placeholder='Send a message'\r\n          />\r\n          {filePreview && (\r\n            <div>\r\n              <img src={filePreview} alt=\"Preview\" style={{ maxHeight: '200px', marginBottom: '10px' }} />\r\n            </div>\r\n          )}\r\n          <Button content='Send' labelPosition='left' icon='send' onClick={handleSendMessage} />\r\n          <Button as=\"label\" icon labelPosition='left'>\r\n            <Icon name='upload' />\r\n            Upload File\r\n            <input type=\"file\" hidden onChange={handleFileChange} />\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n      <AllChats userId={userId} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}