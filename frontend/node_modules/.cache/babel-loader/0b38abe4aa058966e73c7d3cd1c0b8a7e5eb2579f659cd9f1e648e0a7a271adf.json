{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shadan Syed Kazmi\\\\Projects\\\\msteams-clone\\\\frontend\\\\src\\\\Pages\\\\AuthPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { Card, Form, Button, Container, Message } from 'semantic-ui-react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AuthPage = () => {\n  _s();\n  const navigate = useNavigate();\n  //   const isLoggedIn = useContext(isUserLoggedIn);\n\n  const [isSignup, setIsSignup] = useState(true);\n  const [signUpForm, setSignUpForm] = useState({\n    firstName: '',\n    lastName: '',\n    gender: '',\n    email: '',\n    password: ''\n  });\n  const [loginForm, setLoginForm] = useState({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const handleSignUpChange = (e, {\n    name,\n    value\n  }) => {\n    setSignUpForm({\n      ...signUpForm,\n      [name]: value\n    });\n  };\n  const handleLoginChange = (e, {\n    name,\n    value\n  }) => {\n    setLoginForm({\n      ...loginForm,\n      [name]: value\n    });\n  };\n  const handleSignUpSubmit = async () => {\n    try {\n      const response = await axios.post('http://localhost:8000/user/signup', signUpForm);\n      console.log('Sign Up Response:', response.data);\n      //   isLoggedIn.setUserState('Logged-In');\n    } catch (error) {\n      console.error('Error signing up:', error);\n      setError('Error signing up. Please try again.');\n    }\n  };\n  const handleLoginSubmit = async () => {\n    try {\n      const response = await axios.post('http://localhost:8000/user/login', loginForm);\n      const loggedinToken = response.data.token;\n      const userId = response.data.userId;\n      localStorage.setItem('userId', userId);\n      //   isLoggedIn.login(loggedinToken);\n      console.log(\"After calling login\");\n    } catch (error) {\n      console.log('Error logging in:', error);\n      setError('Error logging in. Please check your credentials.');\n    }\n  };\n  const toggleForm = () => {\n    setIsSignup(!isSignup);\n    setSignUpForm({\n      firstName: '',\n      lastName: '',\n      gender: '',\n      email: '',\n      password: ''\n    });\n    setLoginForm({\n      email: '',\n      password: ''\n    });\n    setError('');\n  };\n\n  //   if (isLoggedIn.userState === 'Logged-In') {\n  //     navigate('/');\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    text: true,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      fluid: true,\n      children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n        children: /*#__PURE__*/_jsxDEV(Card.Header, {\n          children: isSignup ? 'Sign Up' : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: isSignup ? handleSignUpSubmit : handleLoginSubmit,\n          children: [isSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n              label: \"First Name\",\n              name: \"firstName\",\n              value: signUpForm.firstName,\n              onChange: handleSignUpChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              label: \"Last Name\",\n              name: \"lastName\",\n              value: signUpForm.lastName,\n              onChange: handleSignUpChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              label: \"Gender\",\n              name: \"gender\",\n              options: [{\n                key: 'm',\n                text: 'Male',\n                value: 'male'\n              }, {\n                key: 'f',\n                text: 'Female',\n                value: 'female'\n              }, {\n                key: 'o',\n                text: 'Other',\n                value: 'other'\n              }],\n              value: signUpForm.gender,\n              onChange: handleSignUpChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Form.Input, {\n            label: \"Email\",\n            type: \"email\",\n            name: \"email\",\n            value: isSignup ? signUpForm.email : loginForm.email,\n            onChange: isSignup ? handleSignUpChange : handleLoginChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            label: \"Password\",\n            type: \"password\",\n            name: \"password\",\n            value: isSignup ? signUpForm.password : loginForm.password,\n            onChange: isSignup ? handleSignUpChange : handleLoginChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n            negative: true,\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            primary: true,\n            type: \"submit\",\n            children: isSignup ? 'Sign Up' : 'Login'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n        extra: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: toggleForm,\n          children: isSignup ? 'Already have an account? Login' : 'Don\\'t have an account? Sign Up'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthPage, \"lHheRzzJIz3xQzn3eTJun3uQdL0=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","useState","useContext","Card","Form","Button","Container","Message","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","AuthPage","_s","navigate","isSignup","setIsSignup","signUpForm","setSignUpForm","firstName","lastName","gender","email","password","loginForm","setLoginForm","error","setError","handleSignUpChange","e","name","value","handleLoginChange","handleSignUpSubmit","response","post","console","log","data","handleLoginSubmit","loggedinToken","token","userId","localStorage","setItem","toggleForm","text","children","fluid","Content","Header","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Input","label","onChange","required","Select","options","key","type","negative","primary","extra","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Shadan Syed Kazmi/Projects/msteams-clone/frontend/src/Pages/AuthPage.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { Card, Form, Button, Container, Message } from 'semantic-ui-react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst AuthPage = () => {\r\n  const navigate = useNavigate();\r\n//   const isLoggedIn = useContext(isUserLoggedIn);\r\n\r\n  const [isSignup, setIsSignup] = useState(true);\r\n  const [signUpForm, setSignUpForm] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    gender: '',\r\n    email: '',\r\n    password: ''\r\n  });\r\n  const [loginForm, setLoginForm] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSignUpChange = (e, { name, value }) => {\r\n    setSignUpForm({ ...signUpForm, [name]: value });\r\n  };\r\n\r\n  const handleLoginChange = (e, { name, value }) => {\r\n    setLoginForm({ ...loginForm, [name]: value });\r\n  };\r\n\r\n  const handleSignUpSubmit = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/user/signup', signUpForm);\r\n      console.log('Sign Up Response:', response.data);\r\n    //   isLoggedIn.setUserState('Logged-In');\r\n    } catch (error) {\r\n      console.error('Error signing up:', error);\r\n      setError('Error signing up. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleLoginSubmit = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:8000/user/login', loginForm);\r\n      const loggedinToken = response.data.token;\r\n      const userId = response.data.userId;\r\n      localStorage.setItem('userId', userId);\r\n    //   isLoggedIn.login(loggedinToken);\r\n      console.log(\"After calling login\");\r\n    } catch (error) {\r\n      console.log('Error logging in:', error);\r\n      setError('Error logging in. Please check your credentials.');\r\n    }\r\n  };\r\n\r\n  const toggleForm = () => {\r\n    setIsSignup(!isSignup);\r\n    setSignUpForm({\r\n      firstName: '',\r\n      lastName: '',\r\n      gender: '',\r\n      email: '',\r\n      password: ''\r\n    });\r\n    setLoginForm({\r\n      email: '',\r\n      password: ''\r\n    });\r\n    setError('');\r\n  };\r\n\r\n//   if (isLoggedIn.userState === 'Logged-In') {\r\n//     navigate('/');\r\n//   }\r\n\r\n  return (\r\n    <Container text>\r\n      <Card fluid>\r\n        <Card.Content>\r\n          <Card.Header>{isSignup ? 'Sign Up' : 'Login'}</Card.Header>\r\n        </Card.Content>\r\n        <Card.Content>\r\n          <Form onSubmit={isSignup ? handleSignUpSubmit : handleLoginSubmit}>\r\n            {isSignup && (\r\n              <>\r\n                <Form.Input\r\n                  label='First Name'\r\n                  name='firstName'\r\n                  value={signUpForm.firstName}\r\n                  onChange={handleSignUpChange}\r\n                  required\r\n                />\r\n                <Form.Input\r\n                  label='Last Name'\r\n                  name='lastName'\r\n                  value={signUpForm.lastName}\r\n                  onChange={handleSignUpChange}\r\n                  required\r\n                />\r\n                <Form.Select\r\n                  label='Gender'\r\n                  name='gender'\r\n                  options={[\r\n                    { key: 'm', text: 'Male', value: 'male' },\r\n                    { key: 'f', text: 'Female', value: 'female' },\r\n                    { key: 'o', text: 'Other', value: 'other' },\r\n                  ]}\r\n                  value={signUpForm.gender}\r\n                  onChange={handleSignUpChange}\r\n                  required\r\n                />\r\n              </>\r\n            )}\r\n            <Form.Input\r\n              label='Email'\r\n              type='email'\r\n              name='email'\r\n              value={isSignup ? signUpForm.email : loginForm.email}\r\n              onChange={isSignup ? handleSignUpChange : handleLoginChange}\r\n              required\r\n            />\r\n            <Form.Input\r\n              label='Password'\r\n              type='password'\r\n              name='password'\r\n              value={isSignup ? signUpForm.password : loginForm.password}\r\n              onChange={isSignup ? handleSignUpChange : handleLoginChange}\r\n              required\r\n            />\r\n            {error && <Message negative>{error}</Message>}\r\n            <Button primary type='submit'>\r\n              {isSignup ? 'Sign Up' : 'Login'}\r\n            </Button>\r\n          </Form>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n          <Button onClick={toggleForm}>\r\n            {isSignup ? 'Already have an account? Login' : 'Don\\'t have an account? Sign Up'}\r\n          </Button>\r\n        </Card.Content>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}