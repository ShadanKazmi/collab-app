{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shadan Syed Kazmi\\\\Projects\\\\msteams-clone\\\\frontend\\\\src\\\\Components\\\\TeamFiles.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { List, Icon, Segment } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeamFiles = ({\n  teamId\n}) => {\n  _s();\n  const [teamFiles, setTeamFiles] = useState([]);\n  useEffect(() => {\n    const fetchFiles = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8000/files/${teamId}`);\n        setTeamFiles(response.data);\n      } catch (error) {\n        console.error('Error fetching team files:', error);\n      }\n    };\n    fetchFiles();\n  }, [teamId]);\n  return /*#__PURE__*/_jsxDEV(Segment, {\n    children: [/*#__PURE__*/_jsxDEV(Icon, {\n      name: \"folder open\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), \"Files\", /*#__PURE__*/_jsxDEV(List, {\n      divided: true,\n      relaxed: true,\n      children: teamFiles.map(file => /*#__PURE__*/_jsxDEV(List.Item, {\n        children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n          name: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n          children: [/*#__PURE__*/_jsxDEV(List.Header, {\n            as: \"a\",\n            href: file.fileUrl,\n            target: \"_blank\",\n            children: file.fileName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(List.Description, {\n            children: file.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, file._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(TeamFiles, \"+0JCij20FBBFCJXsLngCb0SqNxY=\");\n_c = TeamFiles;\nexport default TeamFiles;\nvar _c;\n$RefreshReg$(_c, \"TeamFiles\");","map":{"version":3,"names":["React","useState","useEffect","List","Icon","Segment","axios","jsxDEV","_jsxDEV","TeamFiles","teamId","_s","teamFiles","setTeamFiles","fetchFiles","response","get","data","error","console","children","name","fileName","_jsxFileName","lineNumber","columnNumber","divided","relaxed","map","file","Item","Content","Header","as","href","fileUrl","target","Description","description","_id","_c","$RefreshReg$"],"sources":["C:/Users/Shadan Syed Kazmi/Projects/msteams-clone/frontend/src/Components/TeamFiles.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { List, Icon, Segment } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\n\r\nconst TeamFiles = ({ teamId }) => {\r\n  const [teamFiles, setTeamFiles] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchFiles = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8000/files/${teamId}`);\r\n        setTeamFiles(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching team files:', error);\r\n      }\r\n    };\r\n\r\n    fetchFiles();\r\n  }, [teamId]);\r\n\r\n  return (\r\n    <Segment>\r\n      <Icon name='folder open' />\r\n      Files\r\n      <List divided relaxed>\r\n        {teamFiles.map(file => (\r\n          <List.Item key={file._id}>\r\n            <List.Icon name='file' />\r\n            <List.Content>\r\n              <List.Header as='a' href={file.fileUrl} target='_blank'>{file.fileName}</List.Header>\r\n              <List.Description>{file.description}</List.Description>\r\n            </List.Content>\r\n          </List.Item>\r\n        ))}\r\n      </List>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default TeamFiles;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,IAAI,EAAEC,OAAO,QAAQ,mBAAmB;AACvD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,+BAA+BN,MAAM,EAAE,CAAC;QACzEG,YAAY,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAEDJ,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZ,oBACEF,OAAA,CAACH,OAAO;IAAAe,QAAA,gBACNZ,OAAA,CAACJ,IAAI;MAACiB,IAAI,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,SAE3B,eAAAjB,OAAA,CAACL,IAAI;MAACuB,OAAO;MAACC,OAAO;MAAAP,QAAA,EAClBR,SAAS,CAACgB,GAAG,CAACC,IAAI,iBACjBrB,OAAA,CAACL,IAAI,CAAC2B,IAAI;QAAAV,QAAA,gBACRZ,OAAA,CAACL,IAAI,CAACC,IAAI;UAACiB,IAAI,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzBjB,OAAA,CAACL,IAAI,CAAC4B,OAAO;UAAAX,QAAA,gBACXZ,OAAA,CAACL,IAAI,CAAC6B,MAAM;YAACC,EAAE,EAAC,GAAG;YAACC,IAAI,EAAEL,IAAI,CAACM,OAAQ;YAACC,MAAM,EAAC,QAAQ;YAAAhB,QAAA,EAAES,IAAI,CAACP;UAAQ;YAAAA,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAc,CAAC,eACrFjB,OAAA,CAACL,IAAI,CAACkC,WAAW;YAAAjB,QAAA,EAAES,IAAI,CAACS;UAAW;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAmB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC;MAAA,GALDI,IAAI,CAACU,GAAG;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMb,CACZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACd,EAAA,CAjCIF,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AAmCf,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}