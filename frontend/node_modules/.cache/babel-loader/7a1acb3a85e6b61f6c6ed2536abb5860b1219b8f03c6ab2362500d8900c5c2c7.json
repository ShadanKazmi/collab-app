{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shadan Syed Kazmi\\\\Projects\\\\msteams-clone\\\\frontend\\\\src\\\\Components\\\\TeamTasks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Button, Form, Segment } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeamTasks = ({\n  teamId\n}) => {\n  _s();\n  const [taskContent, setTaskContent] = useState('');\n  const [userId, setUserId] = useState(''); // Assuming you have user ID stored or fetched\n\n  const handleTaskSubmit = async () => {\n    try {\n      const formData = new FormData();\n      formData.append('taskContent', taskContent);\n      formData.append('userId', userId);\n      const response = await axios.post(`http://localhost:8000/files/${teamId}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      // Handle success response as needed\n      console.log('Task created:', response.data);\n\n      // Clear form or perform other actions after successful upload\n      setTaskContent('');\n    } catch (error) {\n      console.error('Error creating task:', error);\n      // Handle error states or feedback to user\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Segment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.TextArea, {\n        label: \"Task Content\",\n        placeholder: \"Enter task details...\",\n        value: taskContent,\n        onChange: e => setTaskContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Button, {\n        primary: true,\n        onClick: handleTaskSubmit,\n        children: \"Submit Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(TeamTasks, \"6HhF3F2FERMbJzlLj7tXU800xGk=\");\n_c = TeamTasks;\nexport default TeamTasks;\nvar _c;\n$RefreshReg$(_c, \"TeamTasks\");","map":{"version":3,"names":["React","useState","Button","Form","Segment","axios","jsxDEV","_jsxDEV","TeamTasks","teamId","_s","taskContent","setTaskContent","userId","setUserId","handleTaskSubmit","formData","FormData","append","response","post","headers","console","log","data","error","children","TextArea","label","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","primary","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Shadan Syed Kazmi/Projects/msteams-clone/frontend/src/Components/TeamTasks.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Form, Segment } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\n\r\nconst TeamTasks = ({ teamId }) => {\r\n  const [taskContent, setTaskContent] = useState('');\r\n  const [userId, setUserId] = useState(''); // Assuming you have user ID stored or fetched\r\n\r\n  const handleTaskSubmit = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('taskContent', taskContent);\r\n      formData.append('userId', userId);\r\n\r\n      const response = await axios.post(`http://localhost:8000/files/${teamId}`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      // Handle success response as needed\r\n      console.log('Task created:', response.data);\r\n\r\n      // Clear form or perform other actions after successful upload\r\n      setTaskContent('');\r\n    } catch (error) {\r\n      console.error('Error creating task:', error);\r\n      // Handle error states or feedback to user\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Segment>\r\n      <Form>\r\n        <Form.TextArea\r\n          label='Task Content'\r\n          placeholder='Enter task details...'\r\n          value={taskContent}\r\n          onChange={(e) => setTaskContent(e.target.value)}\r\n        />\r\n        <Form.Button primary onClick={handleTaskSubmit}>Submit Task</Form.Button>\r\n      </Form>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default TeamTasks;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,IAAI,EAAEC,OAAO,QAAQ,mBAAmB;AACzD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE1C,MAAMc,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEP,WAAW,CAAC;MAC3CK,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEL,MAAM,CAAC;MAEjC,MAAMM,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,+BAA+BX,MAAM,EAAE,EAAEO,QAAQ,EAAE;QACnFK,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;;MAEF;MACAC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,QAAQ,CAACK,IAAI,CAAC;;MAE3C;MACAZ,cAAc,CAAC,EAAE,CAAC;IACpB,CAAC,CAAC,OAAOa,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C;IACF;EACF,CAAC;EAED,oBACElB,OAAA,CAACH,OAAO;IAAAsB,QAAA,eACNnB,OAAA,CAACJ,IAAI;MAAAuB,QAAA,gBACHnB,OAAA,CAACJ,IAAI,CAACwB,QAAQ;QACZC,KAAK,EAAC,cAAc;QACpBC,WAAW,EAAC,uBAAuB;QACnCC,KAAK,EAAEnB,WAAY;QACnBoB,QAAQ,EAAGC,CAAC,IAAKpB,cAAc,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACF9B,OAAA,CAACJ,IAAI,CAACD,MAAM;QAACoC,OAAO;QAACC,OAAO,EAAExB,gBAAiB;QAAAW,QAAA,EAAC;MAAW;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC3B,EAAA,CAxCIF,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AA0Cf,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}