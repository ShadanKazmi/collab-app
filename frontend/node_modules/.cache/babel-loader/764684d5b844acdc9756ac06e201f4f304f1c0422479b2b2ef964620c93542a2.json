{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shadan Syed Kazmi\\\\Projects\\\\msteams-clone\\\\frontend\\\\src\\\\Components\\\\Teams.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useContext } from 'react';\n// import { Grid, Image, Card, CardContent, CardHeader, CardMeta, Segment, Icon, Button, Modal, Form } from 'semantic-ui-react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import SearchBar from './SearchBar'; // Adjust the path as needed\n// import { teamContext } from '../api/TeamsContext';\n// import Cookies from 'js-cookie';\n\n// const Teams = () => {\n//     const { teams, setTeams } = useContext(teamContext);\n//     const [open, setOpen] = useState(false);\n//     const [newTeamName, setNewTeamName] = useState('');\n//     const [members, setMembers] = useState([]);\n//     const navigate = useNavigate();\n\n//     const userId = Cookies.get('userId'); // Get userId from cookie\n\n//     const navigateToTeamDetails = (teamId) => {\n//         navigate(`/teamDetails/${teamId.toString()}`);\n//     };\n\n//     const navigateToCreateTeam = () => {\n//         setOpen(true);\n//     };\n\n//     const handleCloseModal = () => {\n//         setOpen(false);\n//         setNewTeamName('');\n//         setMembers([]);\n//     };\n\n//     const handleCreateTeam = async () => {\n//         try {\n//             const response = await axios.post('http://localhost:8000/team', {\n//                 teamName: newTeamName,\n//                 members: members.map(member => member._id),\n//                 userId: userId // Pass userId from cookie in the request body\n//             });\n//             console.log('Team created:', response.data);\n//         } catch (error) {\n//             console.error('Error creating team:', error);\n//         }\n//         handleCloseModal();\n//     };\n\n//     const handleUserSelect = (user) => {\n//         setMembers([...members, user]);\n//     };\n\n//     return (\n//         <div>\n//             <Segment color='white' textAlign='center' style={{ padding: '1rem', marginBottom: '1rem' }}>\n//                 <h1>Teams</h1>\n//                 <Button primary onClick={navigateToCreateTeam}>Create Team</Button>\n//             </Segment>\n//             <div style={{ paddingLeft: \"5rem\", backgroundColor: \"lightgrey\", minHeight:\"100vh\", overflow:\"hidden\" }}>\n//                 <Grid columns={5} container doubling stackable>\n//                     {teams.map(team => (\n//                         <Grid.Column key={team._id} style={{ marginBottom: '2rem', marginTop: \"2rem\" }}>\n//                             <div className=\"group overflow-hidden rounded-lg shadow-lg transition duration-300 ease-in-out transform hover:-translate-y-5 hover:shadow-xl cursor-pointer\">\n//                                 <Card onClick={() => navigateToTeamDetails(team._id)}>\n//                                     <Image src={team.members[0].avatar || 'https://react.semantic-ui.com/images/avatar/large/ade.jpg'} wrapped ui={false} />\n//                                     <CardContent>\n//                                         <CardHeader>{team.teamName}</CardHeader>\n//                                         <CardMeta>Joined in {new Date(team.createdAt).getFullYear()}</CardMeta>\n//                                     </CardContent>\n//                                     <CardContent extra>\n//                                         <a>\n//                                             <Icon name='users' />\n//                                             {team.memberCount} Members\n//                                         </a>\n//                                     </CardContent>\n//                                 </Card>\n//                             </div>\n//                         </Grid.Column>\n//                     ))}\n//                 </Grid>\n//             </div>\n\n//             <Modal\n//                 onClose={handleCloseModal}\n//                 open={open}\n//             >\n//                 <Modal.Header>Create a New Team</Modal.Header>\n//                 <Modal.Content>\n//                     <Form>\n//                         <Form.Field>\n//                             <label>Team Name</label>\n//                             <input\n//                                 placeholder='Enter team name'\n//                                 value={newTeamName}\n//                                 onChange={(e) => setNewTeamName(e.target.value)}\n//                             />\n//                         </Form.Field>\n//                         <Form.Field>\n//                             <label>Add Members</label>\n//                             <SearchBar onUserSelect={handleUserSelect} />\n//                         </Form.Field>\n//                         {members.map((member, index) => (\n//                             <Segment key={index}>\n//                                 <p>{member.title} - {member.description}</p>\n//                             </Segment>\n//                         ))}\n//                     </Form>\n//                 </Modal.Content>\n//                 <Modal.Actions>\n//                     <Button color='black' onClick={handleCloseModal}>Cancel</Button>\n//                     <Button\n//                         content='Create Team'\n//                         labelPosition='right'\n//                         icon='checkmark'\n//                         onClick={handleCreateTeam}\n//                         positive\n//                     />\n//                 </Modal.Actions>\n//             </Modal>\n//         </div>\n//     );\n// };\n\n// export default Teams;\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Grid, Image, Card, CardContent, CardHeader, CardMeta, Segment, Icon, Button, Modal, Form } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport SearchBar from './SearchBar'; // Adjust the path as needed\nimport { teamContext } from '../api/TeamsContext';\nimport Cookies from 'js-cookie';\nimport { authContext } from '../api/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Teams = () => {\n  _s();\n  const {\n    teams,\n    setTeams\n  } = useContext(teamContext);\n  const {\n    user\n  } = useContext(authContext); // Assuming authContext provides user details\n  const [open, setOpen] = useState(false);\n  const [newTeamName, setNewTeamName] = useState('');\n  const [members, setMembers] = useState(user ? [{\n    _id: user.userId,\n    title: user.firstName,\n    description: user.lastName\n  }] : []);\n  const navigate = useNavigate();\n  const userId = Cookies.get('userId');\n  const navigateToTeamDetails = teamId => {\n    navigate(`/teamDetails/${teamId.toString()}`);\n  };\n  const navigateToCreateTeam = () => {\n    setOpen(true);\n  };\n  const handleCloseModal = () => {\n    setOpen(false);\n    setNewTeamName('');\n    setMembers(user ? [{\n      _id: user.userId,\n      title: user.firstName,\n      description: user.lastName\n    }] : []);\n  };\n  const handleCreateTeam = async () => {\n    try {\n      const response = await axios.post('http://localhost:8000/team', {\n        teamName: newTeamName,\n        members: members.map(member => member._id),\n        userId: userId // Pass userId from cookie in the request body\n      });\n      console.log('Team created:', response.data);\n      // Optionally, update the teams context with the new team\n      setTeams([...teams, response.data]);\n    } catch (error) {\n      console.error('Error creating team:', error);\n    }\n    handleCloseModal();\n  };\n  const handleUserSelect = user => {\n    setMembers([...members, user]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Segment, {\n      color: \"white\",\n      textAlign: \"center\",\n      style: {\n        padding: '1rem',\n        marginBottom: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Teams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        onClick: navigateToCreateTeam,\n        children: \"Create Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingLeft: \"5rem\",\n        backgroundColor: \"lightgrey\",\n        minHeight: \"100vh\",\n        overflow: \"hidden\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        columns: 5,\n        container: true,\n        doubling: true,\n        stackable: true,\n        children: teams.map(team => /*#__PURE__*/_jsxDEV(Grid.Column, {\n          style: {\n            marginBottom: '2rem',\n            marginTop: \"2rem\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group overflow-hidden rounded-lg shadow-lg transition duration-300 ease-in-out transform hover:-translate-y-5 hover:shadow-xl cursor-pointer\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              onClick: () => navigateToTeamDetails(team._id),\n              children: [/*#__PURE__*/_jsxDEV(Image, {\n                src: team.members[0].avatar || 'https://react.semantic-ui.com/images/avatar/large/ade.jpg',\n                wrapped: true,\n                ui: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                  children: team.teamName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(CardMeta, {\n                  children: [\"Joined in \", new Date(team.createdAt).getFullYear()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n                extra: true,\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    name: \"users\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 195,\n                    columnNumber: 45\n                  }, this), team.memberCount, \" Members\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 29\n          }, this)\n        }, team._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: handleCloseModal,\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Create a New Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Team Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"Enter team name\",\n              value: newTeamName,\n              onChange: e => setNewTeamName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Add Members\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n              onUserSelect: handleUserSelect\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 25\n          }, this), members.map((member, index) => /*#__PURE__*/_jsxDEV(Segment, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [member.title, \" - \", member.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 33\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"black\",\n          onClick: handleCloseModal,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          content: \"Create Team\",\n          labelPosition: \"right\",\n          icon: \"checkmark\",\n          onClick: handleCreateTeam,\n          positive: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 9\n  }, this);\n};\n_s(Teams, \"W+GkOv/ocxrbZ0ctqv40f6rUTtQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Teams;\nexport default Teams;\nvar _c;\n$RefreshReg$(_c, \"Teams\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Grid","Image","Card","CardContent","CardHeader","CardMeta","Segment","Icon","Button","Modal","Form","axios","useNavigate","SearchBar","teamContext","Cookies","authContext","jsxDEV","_jsxDEV","Teams","_s","teams","setTeams","user","open","setOpen","newTeamName","setNewTeamName","members","setMembers","_id","userId","title","firstName","description","lastName","navigate","get","navigateToTeamDetails","teamId","toString","navigateToCreateTeam","handleCloseModal","handleCreateTeam","response","post","teamName","map","member","console","log","data","error","handleUserSelect","children","color","textAlign","style","padding","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","primary","onClick","paddingLeft","backgroundColor","minHeight","overflow","columns","container","doubling","stackable","team","Column","marginTop","className","src","avatar","wrapped","ui","Date","createdAt","getFullYear","extra","name","memberCount","onClose","Header","Content","Field","placeholder","value","onChange","e","target","onUserSelect","index","Actions","content","labelPosition","icon","positive","_c","$RefreshReg$"],"sources":["C:/Users/Shadan Syed Kazmi/Projects/msteams-clone/frontend/src/Components/Teams.jsx"],"sourcesContent":["// import React, { useState, useContext } from 'react';\r\n// import { Grid, Image, Card, CardContent, CardHeader, CardMeta, Segment, Icon, Button, Modal, Form } from 'semantic-ui-react';\r\n// import axios from 'axios';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import SearchBar from './SearchBar'; // Adjust the path as needed\r\n// import { teamContext } from '../api/TeamsContext';\r\n// import Cookies from 'js-cookie';\r\n\r\n// const Teams = () => {\r\n//     const { teams, setTeams } = useContext(teamContext);\r\n//     const [open, setOpen] = useState(false);\r\n//     const [newTeamName, setNewTeamName] = useState('');\r\n//     const [members, setMembers] = useState([]);\r\n//     const navigate = useNavigate();\r\n\r\n//     const userId = Cookies.get('userId'); // Get userId from cookie\r\n\r\n//     const navigateToTeamDetails = (teamId) => {\r\n//         navigate(`/teamDetails/${teamId.toString()}`);\r\n//     };\r\n\r\n//     const navigateToCreateTeam = () => {\r\n//         setOpen(true);\r\n//     };\r\n\r\n//     const handleCloseModal = () => {\r\n//         setOpen(false);\r\n//         setNewTeamName('');\r\n//         setMembers([]);\r\n//     };\r\n\r\n//     const handleCreateTeam = async () => {\r\n//         try {\r\n//             const response = await axios.post('http://localhost:8000/team', {\r\n//                 teamName: newTeamName,\r\n//                 members: members.map(member => member._id),\r\n//                 userId: userId // Pass userId from cookie in the request body\r\n//             });\r\n//             console.log('Team created:', response.data);\r\n//         } catch (error) {\r\n//             console.error('Error creating team:', error);\r\n//         }\r\n//         handleCloseModal();\r\n//     };\r\n\r\n//     const handleUserSelect = (user) => {\r\n//         setMembers([...members, user]);\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <Segment color='white' textAlign='center' style={{ padding: '1rem', marginBottom: '1rem' }}>\r\n//                 <h1>Teams</h1>\r\n//                 <Button primary onClick={navigateToCreateTeam}>Create Team</Button>\r\n//             </Segment>\r\n//             <div style={{ paddingLeft: \"5rem\", backgroundColor: \"lightgrey\", minHeight:\"100vh\", overflow:\"hidden\" }}>\r\n//                 <Grid columns={5} container doubling stackable>\r\n//                     {teams.map(team => (\r\n//                         <Grid.Column key={team._id} style={{ marginBottom: '2rem', marginTop: \"2rem\" }}>\r\n//                             <div className=\"group overflow-hidden rounded-lg shadow-lg transition duration-300 ease-in-out transform hover:-translate-y-5 hover:shadow-xl cursor-pointer\">\r\n//                                 <Card onClick={() => navigateToTeamDetails(team._id)}>\r\n//                                     <Image src={team.members[0].avatar || 'https://react.semantic-ui.com/images/avatar/large/ade.jpg'} wrapped ui={false} />\r\n//                                     <CardContent>\r\n//                                         <CardHeader>{team.teamName}</CardHeader>\r\n//                                         <CardMeta>Joined in {new Date(team.createdAt).getFullYear()}</CardMeta>\r\n//                                     </CardContent>\r\n//                                     <CardContent extra>\r\n//                                         <a>\r\n//                                             <Icon name='users' />\r\n//                                             {team.memberCount} Members\r\n//                                         </a>\r\n//                                     </CardContent>\r\n//                                 </Card>\r\n//                             </div>\r\n//                         </Grid.Column>\r\n//                     ))}\r\n//                 </Grid>\r\n//             </div>\r\n\r\n//             <Modal\r\n//                 onClose={handleCloseModal}\r\n//                 open={open}\r\n//             >\r\n//                 <Modal.Header>Create a New Team</Modal.Header>\r\n//                 <Modal.Content>\r\n//                     <Form>\r\n//                         <Form.Field>\r\n//                             <label>Team Name</label>\r\n//                             <input\r\n//                                 placeholder='Enter team name'\r\n//                                 value={newTeamName}\r\n//                                 onChange={(e) => setNewTeamName(e.target.value)}\r\n//                             />\r\n//                         </Form.Field>\r\n//                         <Form.Field>\r\n//                             <label>Add Members</label>\r\n//                             <SearchBar onUserSelect={handleUserSelect} />\r\n//                         </Form.Field>\r\n//                         {members.map((member, index) => (\r\n//                             <Segment key={index}>\r\n//                                 <p>{member.title} - {member.description}</p>\r\n//                             </Segment>\r\n//                         ))}\r\n//                     </Form>\r\n//                 </Modal.Content>\r\n//                 <Modal.Actions>\r\n//                     <Button color='black' onClick={handleCloseModal}>Cancel</Button>\r\n//                     <Button\r\n//                         content='Create Team'\r\n//                         labelPosition='right'\r\n//                         icon='checkmark'\r\n//                         onClick={handleCreateTeam}\r\n//                         positive\r\n//                     />\r\n//                 </Modal.Actions>\r\n//             </Modal>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Teams;\r\n\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport { Grid, Image, Card, CardContent, CardHeader, CardMeta, Segment, Icon, Button, Modal, Form } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport SearchBar from './SearchBar'; // Adjust the path as needed\r\nimport { teamContext } from '../api/TeamsContext';\r\nimport Cookies from 'js-cookie';\r\nimport { authContext } from '../api/AuthContext';\r\n\r\nconst Teams = () => {\r\n    const { teams, setTeams } = useContext(teamContext);\r\n    const { user } = useContext(authContext); // Assuming authContext provides user details\r\n    const [open, setOpen] = useState(false);\r\n    const [newTeamName, setNewTeamName] = useState('');\r\n    const [members, setMembers] = useState(user ? [{ _id: user.userId, title: user.firstName, description: user.lastName }] : []);\r\n    const navigate = useNavigate();\r\n\r\n    const userId = Cookies.get('userId'); \r\n\r\n    const navigateToTeamDetails = (teamId) => {\r\n        navigate(`/teamDetails/${teamId.toString()}`);\r\n    };\r\n\r\n    const navigateToCreateTeam = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        setOpen(false);\r\n        setNewTeamName('');\r\n        setMembers(user ? [{ _id: user.userId, title: user.firstName, description: user.lastName }] : []);\r\n    };\r\n\r\n    const handleCreateTeam = async () => {\r\n        try {\r\n            const response = await axios.post('http://localhost:8000/team', {\r\n                teamName: newTeamName,\r\n                members: members.map(member => member._id),\r\n                userId: userId // Pass userId from cookie in the request body\r\n            });\r\n            console.log('Team created:', response.data);\r\n            // Optionally, update the teams context with the new team\r\n            setTeams([...teams, response.data]);\r\n        } catch (error) {\r\n            console.error('Error creating team:', error);\r\n        }\r\n        handleCloseModal();\r\n    };\r\n\r\n    const handleUserSelect = (user) => {\r\n        setMembers([...members, user]);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Segment color='white' textAlign='center' style={{ padding: '1rem', marginBottom: '1rem' }}>\r\n                <h1>Teams</h1>\r\n                <Button primary onClick={navigateToCreateTeam}>Create Team</Button>\r\n            </Segment>\r\n            <div style={{ paddingLeft: \"5rem\", backgroundColor: \"lightgrey\", minHeight:\"100vh\", overflow:\"hidden\" }}>\r\n                <Grid columns={5} container doubling stackable>\r\n                    {teams.map(team => (\r\n                        <Grid.Column key={team._id} style={{ marginBottom: '2rem', marginTop: \"2rem\" }}>\r\n                            <div className=\"group overflow-hidden rounded-lg shadow-lg transition duration-300 ease-in-out transform hover:-translate-y-5 hover:shadow-xl cursor-pointer\">\r\n                                <Card onClick={() => navigateToTeamDetails(team._id)}>\r\n                                    <Image src={team.members[0].avatar || 'https://react.semantic-ui.com/images/avatar/large/ade.jpg'} wrapped ui={false} />\r\n                                    <CardContent>\r\n                                        <CardHeader>{team.teamName}</CardHeader>\r\n                                        <CardMeta>Joined in {new Date(team.createdAt).getFullYear()}</CardMeta>\r\n                                    </CardContent>\r\n                                    <CardContent extra>\r\n                                        <a>\r\n                                            <Icon name='users' />\r\n                                            {team.memberCount} Members\r\n                                        </a>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </div>\r\n                        </Grid.Column>\r\n                    ))}\r\n                </Grid>\r\n            </div>\r\n\r\n            <Modal\r\n                onClose={handleCloseModal}\r\n                open={open}\r\n            >\r\n                <Modal.Header>Create a New Team</Modal.Header>\r\n                <Modal.Content>\r\n                    <Form>\r\n                        <Form.Field>\r\n                            <label>Team Name</label>\r\n                            <input\r\n                                placeholder='Enter team name'\r\n                                value={newTeamName}\r\n                                onChange={(e) => setNewTeamName(e.target.value)}\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <label>Add Members</label>\r\n                            <SearchBar onUserSelect={handleUserSelect} />\r\n                        </Form.Field>\r\n                        {members.map((member, index) => (\r\n                            <Segment key={index}>\r\n                                <p>{member.title} - {member.description}</p>\r\n                            </Segment>\r\n                        ))}\r\n                    </Form>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button color='black' onClick={handleCloseModal}>Cancel</Button>\r\n                    <Button\r\n                        content='Create Team'\r\n                        labelPosition='right'\r\n                        icon='checkmark'\r\n                        onClick={handleCreateTeam}\r\n                        positive\r\n                    />\r\n                </Modal.Actions>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Teams;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}