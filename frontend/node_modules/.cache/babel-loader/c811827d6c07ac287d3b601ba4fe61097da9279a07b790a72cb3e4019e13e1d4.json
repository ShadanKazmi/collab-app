{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shadan Syed Kazmi\\\\Projects\\\\msteams-clone\\\\frontend\\\\src\\\\api\\\\TeamsContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport Cookies from 'js-cookie';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const teamContext = /*#__PURE__*/createContext(null);\nexport const TeamProvider = props => {\n  _s();\n  const [teams, setTeams] = useState([]);\n  useEffect(() => {\n    const userId = localStorage.getItem('userId');\n    const fetchTeams = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8000/team/userTeams/${userId}`);\n        setTeams(response.data);\n      } catch (error) {\n        console.error('Error fetching teams:', error);\n      }\n    };\n    fetchTeams();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(teamContext.Provider, {\n    value: {\n      teams,\n      setTeams\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(TeamProvider, \"nt+I693XwTdNiKlXHWfWa22BjIk=\");\n_c = TeamProvider;\nvar _c;\n$RefreshReg$(_c, \"TeamProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","Cookies","axios","jsxDEV","_jsxDEV","teamContext","TeamProvider","props","_s","teams","setTeams","userId","localStorage","getItem","fetchTeams","response","get","data","error","console","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Shadan Syed Kazmi/Projects/msteams-clone/frontend/src/api/TeamsContext.jsx"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\nimport Cookies from 'js-cookie';\r\nimport axios from \"axios\";\r\n\r\nexport const teamContext = createContext(null);\r\n\r\nexport const TeamProvider = (props) => {\r\n    const [teams, setTeams] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const userId = localStorage.getItem('userId'); \r\n        const fetchTeams = async () => {\r\n            try {\r\n                const response = await axios.get(`http://localhost:8000/team/userTeams/${userId}`);\r\n                setTeams(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching teams:', error);\r\n            }\r\n        };\r\n\r\n        fetchTeams();\r\n    }, []);\r\n\r\n    return (\r\n        <teamContext.Provider value={{teams, setTeams}}>\r\n            {props.children}\r\n        </teamContext.Provider>\r\n    );\r\n};\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,IAAI,CAAC;AAE9C,OAAO,MAAMQ,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ,MAAMY,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IAC7C,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,wCAAwCL,MAAM,EAAE,CAAC;QAClFD,QAAQ,CAACK,QAAQ,CAACE,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;IAEDJ,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIV,OAAA,CAACC,WAAW,CAACe,QAAQ;IAACC,KAAK,EAAE;MAACZ,KAAK;MAAEC;IAAQ,CAAE;IAAAY,QAAA,EAC1Cf,KAAK,CAACe;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAE/B,CAAC;AAAClB,EAAA,CAtBWF,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}