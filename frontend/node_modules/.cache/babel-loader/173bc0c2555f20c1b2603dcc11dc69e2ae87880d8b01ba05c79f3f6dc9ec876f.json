{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shadan Syed Kazmi\\\\Projects\\\\msteams-clone\\\\frontend\\\\src\\\\Components\\\\TeamFeed.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { CommentText, CommentMetadata, CommentGroup, CommentContent, CommentAvatar, CommentActions, CommentAuthor, Comment, Form, FormTextArea, Button, Icon, Divider } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport useDownloader from 'react-use-downloader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeamFeed = () => {\n  _s();\n  const {\n    teamId\n  } = useParams();\n  const navigate = useNavigate();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [newFile, setNewFile] = useState(null);\n  const [filePreview, setFilePreview] = useState(null);\n  const [replyText, setReplyText] = useState('');\n  const [replyingIndex, setReplyingIndex] = useState(null);\n  const {\n    download\n  } = useDownloader();\n  useEffect(() => {\n    fetchMessages(); // Initial fetch\n\n    const interval = setInterval(() => {\n      fetchMessages(); // Fetch messages every 10 seconds (adjust as needed)\n    }, 10000);\n    return () => {\n      clearInterval(interval); // Clean up interval on component unmount\n    };\n  }, [teamId]);\n  const fetchMessages = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8000/feed/${teamId}`);\n      setComments(response.data);\n    } catch (error) {\n      console.error('Error fetching messages:', error);\n    }\n  };\n  const getCurrentUser = async () => {\n    try {\n      const userId = Cookies.get('userId');\n      if (!userId) {\n        console.error('User ID not found in cookies.');\n        return null;\n      }\n      const response = await axios.get(`http://localhost:8000/userAuth/${userId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching user:', error);\n      return null;\n    }\n  };\n  const handleAddComment = async () => {\n    if (newComment.trim() !== '' || newFile) {\n      // const currentDate = new Date().toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });\n      const userId = Cookies.get('userId');\n      const currentUser = await getCurrentUser();\n      if (!currentUser) {\n        console.error('User not found.');\n        return;\n      }\n      const formData = new FormData();\n      formData.append('textContent', newComment);\n      formData.append('teamId', teamId);\n      formData.append('userId', userId);\n      if (newFile) {\n        formData.append('uploadContent', newFile);\n      }\n      try {\n        const response = await axios.post('http://localhost:8000/feed/', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        const savedMessage = response.data;\n        const commentData = {\n          _id: savedMessage._id,\n          textContent: newComment,\n          uploadContent: savedMessage.uploadContent,\n          createdBy: {\n            _id: userId,\n            firstName: currentUser.firstName,\n            lastName: currentUser.lastName\n          },\n          createdAt: new Date(savedMessage.createdAt).toLocaleString('en-US', {\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true\n          }),\n          replies: []\n        };\n        setComments([...comments, commentData]);\n        setNewComment('');\n        setNewFile(null);\n        setFilePreview(null);\n      } catch (error) {\n        console.error('Error adding message:', error);\n      }\n    }\n  };\n  const handleAddReply = async commentId => {\n    if (replyText.trim() !== '') {\n      const currentDate = new Date().toLocaleString('en-US', {\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: true\n      });\n      const userId = Cookies.get('userId');\n      const currentUser = await getCurrentUser();\n      const replyData = {\n        textContent: replyText,\n        createdBy: {\n          _id: userId,\n          firstName: currentUser.firstName,\n          lastName: currentUser.lastName\n        },\n        createdAt: currentDate\n      };\n      try {\n        const response = await axios.post(`http://localhost:8000/feed/${commentId}/reply`, {\n          textContent: replyText,\n          userId: userId\n        });\n        const updatedComments = comments.map(comment => comment._id === commentId ? {\n          ...comment,\n          replies: [...comment.replies, {\n            ...replyData,\n            _id: response.data._id\n          }]\n        } : comment);\n        setComments(updatedComments);\n        setReplyText('');\n        setReplyingIndex(null);\n      } catch (error) {\n        console.error('Error adding reply:', error);\n      }\n    }\n  };\n  const startReply = index => {\n    setReplyingIndex(index);\n  };\n  const handleUserClick = user => {\n    navigate('/profile', {\n      state: {\n        user\n      }\n    });\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    setNewFile(file);\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setFilePreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    } else {\n      setFilePreview(null);\n    }\n  };\n  const handleFileDownload = fileUrl => {\n    const filename = fileUrl.split('/').pop();\n    download(fileUrl, filename);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingLeft: '100px',\n      marginTop: '7rem',\n      position: 'relative',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Divider, {\n      horizontal: true,\n      children: \"Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingBottom: '4rem',\n        marginBottom: '4rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(CommentGroup, {\n        threaded: true,\n        size: \"large\",\n        children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(Comment, {\n          children: [/*#__PURE__*/_jsxDEV(CommentAvatar, {\n            as: \"a\",\n            src: `http://localhost:8000/feed${comment.profileImageURL}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CommentContent, {\n            children: [/*#__PURE__*/_jsxDEV(CommentAuthor, {\n              as: \"a\",\n              onClick: () => handleUserClick(comment.createdBy),\n              children: [comment.createdBy.firstName, \" \", comment.createdBy.lastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CommentMetadata, {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: comment.createdAt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CommentText, {\n              children: comment.textContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 33\n            }, this), comment.uploadContent && /*#__PURE__*/_jsxDEV(CommentText, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                icon: true,\n                labelPosition: \"left\",\n                onClick: () => handleFileDownload(`http://localhost:8000/feed${comment.uploadContent}`),\n                children: [/*#__PURE__*/_jsxDEV(Icon, {\n                  name: \"file alternate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 45\n                }, this), `http://localhost:8000/feed${comment.uploadContent}`.split('/').pop()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(CommentActions, {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                onClick: () => startReply(index),\n                children: \"Reply\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 33\n            }, this), comment.replies && comment.replies.length > 0 && /*#__PURE__*/_jsxDEV(CommentGroup, {\n              style: {\n                marginTop: '0.1px'\n              },\n              children: comment.replies.map(reply => /*#__PURE__*/_jsxDEV(Comment, {\n                children: [/*#__PURE__*/_jsxDEV(CommentAvatar, {\n                  as: \"a\",\n                  src: 'https://react.semantic-ui.com/images/avatar/small/matt.jpg'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(CommentContent, {\n                  children: [/*#__PURE__*/_jsxDEV(CommentAuthor, {\n                    as: \"a\",\n                    onClick: () => handleUserClick(reply.createdBy),\n                    children: [reply.createdBy.firstName, \" \", reply.createdBy.lastName]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(CommentMetadata, {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: reply.createdAt\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(CommentText, {\n                    children: reply.textContent\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 49\n                }, this)]\n              }, reply._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 37\n            }, this), replyingIndex === index && /*#__PURE__*/_jsxDEV(Form, {\n              reply: true,\n              children: [/*#__PURE__*/_jsxDEV(FormTextArea, {\n                value: replyText,\n                onChange: e => setReplyText(e.target.value),\n                placeholder: \"Write a reply...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                content: \"Add Reply\",\n                labelPosition: \"left\",\n                icon: \"edit\",\n                primary: true,\n                onClick: () => handleAddReply(comment._id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 29\n          }, this)]\n        }, comment._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        bottom: '0',\n        width: '50%',\n        background: 'white',\n        padding: '1rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        reply: true,\n        children: [/*#__PURE__*/_jsxDEV(FormTextArea, {\n          value: newComment,\n          onChange: e => setNewComment(e.target.value),\n          placeholder: \"Send a message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this), filePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: filePreview,\n            alt: \"Preview\",\n            style: {\n              maxHeight: '200px',\n              marginBottom: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          content: \"Send\",\n          labelPosition: \"left\",\n          icon: \"send\",\n          onClick: handleAddComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          as: \"label\",\n          icon: true,\n          labelPosition: \"left\",\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 25\n          }, this), \"Upload File\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            hidden: true,\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 9\n  }, this);\n};\n_s(TeamFeed, \"bxM0FnDfn2OKb0TVpEC1V1PxcMI=\", false, function () {\n  return [useParams, useNavigate, useDownloader];\n});\n_c = TeamFeed;\nexport default TeamFeed;\nvar _c;\n$RefreshReg$(_c, \"TeamFeed\");","map":{"version":3,"names":["React","useState","useEffect","CommentText","CommentMetadata","CommentGroup","CommentContent","CommentAvatar","CommentActions","CommentAuthor","Comment","Form","FormTextArea","Button","Icon","Divider","axios","useParams","useNavigate","Cookies","useDownloader","jsxDEV","_jsxDEV","TeamFeed","_s","teamId","navigate","comments","setComments","newComment","setNewComment","newFile","setNewFile","filePreview","setFilePreview","replyText","setReplyText","replyingIndex","setReplyingIndex","download","fetchMessages","interval","setInterval","clearInterval","response","get","data","error","console","getCurrentUser","userId","handleAddComment","trim","currentUser","formData","FormData","append","post","headers","savedMessage","commentData","_id","textContent","uploadContent","createdBy","firstName","lastName","createdAt","Date","toLocaleString","hour","minute","hour12","replies","handleAddReply","commentId","currentDate","replyData","updatedComments","map","comment","startReply","index","handleUserClick","user","state","handleFileChange","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","handleFileDownload","fileUrl","filename","split","pop","style","paddingLeft","marginTop","position","overflow","children","horizontal","fileName","_jsxFileName","lineNumber","columnNumber","paddingBottom","marginBottom","threaded","size","as","src","profileImageURL","onClick","icon","labelPosition","name","length","reply","value","onChange","placeholder","content","primary","bottom","width","background","padding","alt","maxHeight","type","hidden","_c","$RefreshReg$"],"sources":["C:/Users/Shadan Syed Kazmi/Projects/msteams-clone/frontend/src/Components/TeamFeed.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    CommentText,\r\n    CommentMetadata,\r\n    CommentGroup,\r\n    CommentContent,\r\n    CommentAvatar,\r\n    CommentActions,\r\n    CommentAuthor,\r\n    Comment,\r\n    Form,\r\n    FormTextArea,\r\n    Button,\r\n    Icon,\r\n    Divider,\r\n} from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport Cookies from 'js-cookie';\r\nimport useDownloader from 'react-use-downloader';\r\n\r\nconst TeamFeed = () => {\r\n    const { teamId } = useParams();\r\n    const navigate = useNavigate();\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState('');\r\n    const [newFile, setNewFile] = useState(null);\r\n    const [filePreview, setFilePreview] = useState(null);\r\n    const [replyText, setReplyText] = useState('');\r\n    const [replyingIndex, setReplyingIndex] = useState(null);\r\n    const { download } = useDownloader();\r\n\r\n    useEffect(() => {\r\n        fetchMessages(); // Initial fetch\r\n\r\n        const interval = setInterval(() => {\r\n            fetchMessages(); // Fetch messages every 10 seconds (adjust as needed)\r\n        }, 10000);\r\n\r\n        return () => {\r\n            clearInterval(interval); // Clean up interval on component unmount\r\n        };\r\n    }, [teamId]);\r\n\r\n    const fetchMessages = async () => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:8000/feed/${teamId}`);\r\n            setComments(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching messages:', error);\r\n        }\r\n    };\r\n\r\n    const getCurrentUser = async () => {\r\n        try {\r\n            const userId = Cookies.get('userId');\r\n            if (!userId) {\r\n                console.error('User ID not found in cookies.');\r\n                return null;\r\n            }\r\n            const response = await axios.get(`http://localhost:8000/userAuth/${userId}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching user:', error);\r\n            return null;\r\n        }\r\n    };\r\n\r\n    const handleAddComment = async () => {\r\n        if (newComment.trim() !== '' || newFile) {\r\n            // const currentDate = new Date().toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });\r\n            const userId = Cookies.get('userId');\r\n\r\n            const currentUser = await getCurrentUser();\r\n            if (!currentUser) {\r\n                console.error('User not found.');\r\n                return;\r\n            }\r\n\r\n            const formData = new FormData();\r\n            formData.append('textContent', newComment);\r\n            formData.append('teamId', teamId);\r\n            formData.append('userId', userId);\r\n            if (newFile) {\r\n                formData.append('uploadContent', newFile);\r\n            }\r\n\r\n            try {\r\n                const response = await axios.post('http://localhost:8000/feed/', formData, {\r\n                    headers: {\r\n                        'Content-Type': 'multipart/form-data',\r\n                    },\r\n                });\r\n\r\n                const savedMessage = response.data;\r\n                const commentData = {\r\n                    _id: savedMessage._id,\r\n                    textContent: newComment,\r\n                    uploadContent: savedMessage.uploadContent,\r\n                    createdBy: {\r\n                        _id: userId,\r\n                        firstName: currentUser.firstName,\r\n                        lastName: currentUser.lastName,\r\n                    },\r\n                    createdAt: new Date(savedMessage.createdAt).toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true }),\r\n                    replies: [],\r\n                };\r\n                setComments([...comments, commentData]);\r\n                setNewComment('');\r\n                setNewFile(null);\r\n                setFilePreview(null);\r\n            } catch (error) {\r\n                console.error('Error adding message:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleAddReply = async (commentId) => {\r\n        if (replyText.trim() !== '') {\r\n            const currentDate = new Date().toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });\r\n            const userId = Cookies.get('userId');\r\n            const currentUser = await getCurrentUser();\r\n            const replyData = {\r\n                textContent: replyText,\r\n                createdBy: {\r\n                    _id: userId,\r\n                    firstName: currentUser.firstName,\r\n                    lastName: currentUser.lastName,\r\n                },\r\n                createdAt: currentDate,\r\n            };\r\n\r\n            try {\r\n                const response = await axios.post(`http://localhost:8000/feed/${commentId}/reply`, {\r\n                    textContent: replyText,\r\n                    userId: userId,\r\n                });\r\n\r\n                const updatedComments = comments.map(comment =>\r\n                    comment._id === commentId\r\n                        ? {\r\n                            ...comment,\r\n                            replies: [...comment.replies, { ...replyData, _id: response.data._id }],\r\n                        }\r\n                        : comment\r\n                );\r\n\r\n                setComments(updatedComments);\r\n                setReplyText('');\r\n                setReplyingIndex(null);\r\n            } catch (error) {\r\n                console.error('Error adding reply:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const startReply = (index) => {\r\n        setReplyingIndex(index);\r\n    };\r\n\r\n    const handleUserClick = (user) => {\r\n        navigate('/profile', { state: { user } });\r\n    };\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        setNewFile(file);\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onloadend = () => {\r\n                setFilePreview(reader.result);\r\n            };\r\n            reader.readAsDataURL(file);\r\n        } else {\r\n            setFilePreview(null);\r\n        }\r\n    };\r\n\r\n    const handleFileDownload = (fileUrl) => {\r\n        const filename = fileUrl.split('/').pop();\r\n        download(fileUrl, filename);\r\n    };\r\n\r\n    return (\r\n        <div style={{ paddingLeft: '100px', marginTop: '7rem', position: 'relative', overflow: 'hidden' }}>\r\n            <Divider horizontal >Feed</Divider>\r\n            <div style={{ paddingBottom: '4rem', marginBottom: '4rem' }}>\r\n                <CommentGroup threaded size='large'>\r\n                    {comments.map((comment, index) => (\r\n                        <Comment key={comment._id}>\r\n                            <CommentAvatar as='a' src={`http://localhost:8000/feed${comment.profileImageURL}`} />\r\n                            <CommentContent>\r\n                                <CommentAuthor as='a' onClick={() => handleUserClick(comment.createdBy)}>\r\n                                    {comment.createdBy.firstName} {comment.createdBy.lastName}\r\n                                </CommentAuthor>\r\n                                <CommentMetadata>\r\n                                    <span>{comment.createdAt}</span>\r\n                                </CommentMetadata>\r\n                                <CommentText>{comment.textContent}</CommentText>\r\n                                {comment.uploadContent && (\r\n                                    <CommentText>\r\n                                        <Button\r\n                                            icon\r\n                                            labelPosition='left'\r\n                                            onClick={() =>\r\n                                                handleFileDownload(`http://localhost:8000/feed${comment.uploadContent}`)\r\n                                            }\r\n                                        >\r\n                                            <Icon name='file alternate' />\r\n                                            {`http://localhost:8000/feed${comment.uploadContent}`.split('/').pop()}\r\n                                        </Button>\r\n                                    </CommentText>\r\n                                )}\r\n                                <CommentActions>\r\n                                    <a onClick={() => startReply(index)}>Reply</a>\r\n                                </CommentActions>\r\n                                {comment.replies && comment.replies.length > 0 && (\r\n                                    <CommentGroup style={{ marginTop: '0.1px' }}>\r\n                                        {comment.replies.map((reply) => (\r\n                                            <Comment key={reply._id}>\r\n                                                <CommentAvatar\r\n                                                    as='a'\r\n                                                    src={'https://react.semantic-ui.com/images/avatar/small/matt.jpg'}\r\n                                                />\r\n                                                <CommentContent>\r\n                                                    <CommentAuthor as='a' onClick={() => handleUserClick(reply.createdBy)}>\r\n                                                        {reply.createdBy.firstName} {reply.createdBy.lastName}\r\n                                                    </CommentAuthor>\r\n                                                    <CommentMetadata>\r\n                                                        <span>{reply.createdAt}</span>\r\n                                                    </CommentMetadata>\r\n                                                    <CommentText>{reply.textContent}</CommentText>\r\n                                                </CommentContent>\r\n                                            </Comment>\r\n                                        ))}\r\n                                    </CommentGroup>\r\n                                )}\r\n                                {replyingIndex === index && (\r\n                                    <Form reply>\r\n                                        <FormTextArea\r\n                                            value={replyText}\r\n                                            onChange={(e) => setReplyText(e.target.value)}\r\n                                            placeholder='Write a reply...'\r\n                                        />\r\n                                        <Button\r\n                                            content='Add Reply'\r\n                                            labelPosition='left'\r\n                                            icon='edit'\r\n                                            primary\r\n                                            onClick={() => handleAddReply(comment._id)}\r\n                                        />\r\n                                    </Form>\r\n                                )}\r\n                            </CommentContent>\r\n                        </Comment>\r\n                    ))}\r\n                </CommentGroup>\r\n            </div>\r\n            <div style={{ position: 'relative', bottom: '0', width: '50%', background: 'white', padding: '1rem' }}>\r\n                <Form reply>\r\n                    <FormTextArea\r\n                        value={newComment}\r\n                        onChange={(e) => setNewComment(e.target.value)}\r\n                        placeholder='Send a message'\r\n                    />\r\n                    {filePreview && (\r\n                        <div>\r\n                            <img src={filePreview} alt=\"Preview\" style={{ maxHeight: '200px', marginBottom: '10px' }} />\r\n                        </div>\r\n                    )}\r\n                    <Button content='Send' labelPosition='left' icon='send' onClick={handleAddComment} />\r\n                    <Button as=\"label\" icon labelPosition='left'>\r\n                        <Icon name='upload' />\r\n                        Upload File\r\n                        <input type=\"file\" hidden onChange={handleFileChange} />\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TeamFeed;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}