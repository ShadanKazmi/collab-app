{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shadan Syed Kazmi\\\\Projects\\\\msteams-clone\\\\src\\\\Components\\\\TeamFeed.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { CommentText, CommentMetadata, CommentGroup, CommentContent, CommentAvatar, CommentActions, CommentAuthor, Comment, Form, FormTextArea, Button, Icon } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeamFeed = () => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [replyText, setReplyText] = useState('');\n  const [replyingIndex, setReplyingIndex] = useState(null);\n\n  // Function to handle adding a new comment\n  const handleAddComment = () => {\n    if (newComment.trim() !== '') {\n      const currentDate = new Date().toLocaleString('en-US', {\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: true\n      });\n      const commentData = {\n        author: 'You',\n        // Replace with actual user information if available\n        timestamp: currentDate,\n        text: newComment,\n        replies: []\n      };\n      setComments([...comments, commentData]);\n      setNewComment('');\n    }\n  };\n\n  // Function to handle adding a reply to a comment\n  const handleAddReply = index => {\n    if (replyText.trim() !== '') {\n      const currentDate = new Date().toLocaleString('en-US', {\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: true\n      });\n      const newReply = {\n        author: 'You',\n        // Replace with actual user information if available\n        timestamp: currentDate,\n        text: replyText\n      };\n      const updatedComments = [...comments];\n      updatedComments[index].replies.push(newReply);\n      setComments(updatedComments);\n      setReplyText('');\n      setReplyingIndex(null);\n    }\n  };\n\n  // Function to set the index of the comment being replied to\n  const startReply = index => {\n    setReplyingIndex(index);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddingTop: '7rem',\n      paddingLeft: '100px',\n      minHeight: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(CommentGroup, {\n      threaded: true,\n      size: \"large\",\n      children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(Comment, {\n        children: [/*#__PURE__*/_jsxDEV(CommentAvatar, {\n          as: \"a\",\n          src: \"https://react.semantic-ui.com/images/avatar/small/matt.jpg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CommentContent, {\n          children: [/*#__PURE__*/_jsxDEV(CommentAuthor, {\n            as: \"a\",\n            children: comment.author\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CommentMetadata, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: comment.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CommentText, {\n            children: comment.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(CommentActions, {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              onClick: () => startReply(index),\n              children: \"Reply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), comment.replies.length > 0 && /*#__PURE__*/_jsxDEV(CommentGroup, {\n            children: comment.replies.map((reply, replyIndex) => /*#__PURE__*/_jsxDEV(Comment, {\n              children: [/*#__PURE__*/_jsxDEV(CommentAvatar, {\n                as: \"a\",\n                src: \"https://react.semantic-ui.com/images/avatar/small/jenny.jpg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(CommentContent, {\n                children: [/*#__PURE__*/_jsxDEV(CommentAuthor, {\n                  as: \"a\",\n                  children: reply.author\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(CommentMetadata, {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: reply.timestamp\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(CommentText, {\n                  children: reply.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 45\n              }, this)]\n            }, `${index}-${replyIndex}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this), replyingIndex === index && /*#__PURE__*/_jsxDEV(Form, {\n            reply: true,\n            children: [/*#__PURE__*/_jsxDEV(FormTextArea, {\n              value: replyText,\n              onChange: e => setReplyText(e.target.value),\n              placeholder: \"Write a reply...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              content: \"Add Reply\",\n              labelPosition: \"left\",\n              icon: \"edit\",\n              primary: true,\n              onClick: () => handleAddReply(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        bottom: '0',\n        width: '100%',\n        background: 'white',\n        padding: '1rem',\n        borderTop: '1px solid #ddd'\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        reply: true,\n        children: [/*#__PURE__*/_jsxDEV(FormTextArea, {\n          value: newComment,\n          onChange: e => setNewComment(e.target.value),\n          placeholder: \"Add a comment...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          content: \"Add Comment\",\n          labelPosition: \"left\",\n          icon: \"edit\",\n          primary: true,\n          onClick: handleAddComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          icon: true,\n          labelPosition: \"left\",\n          primary: true,\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            name: \"upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), \"Upload\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(TeamFeed, \"maHJI2U4dS1FBj5Mx1HDebWv0IM=\");\n_c = TeamFeed;\nexport default TeamFeed;\nvar _c;\n$RefreshReg$(_c, \"TeamFeed\");","map":{"version":3,"names":["React","useState","CommentText","CommentMetadata","CommentGroup","CommentContent","CommentAvatar","CommentActions","CommentAuthor","Comment","Form","FormTextArea","Button","Icon","jsxDEV","_jsxDEV","TeamFeed","_s","comments","setComments","newComment","setNewComment","replyText","setReplyText","replyingIndex","setReplyingIndex","handleAddComment","trim","currentDate","Date","toLocaleString","hour","minute","hour12","commentData","author","timestamp","text","replies","handleAddReply","index","newReply","updatedComments","push","startReply","style","paddingTop","paddingLeft","minHeight","children","threaded","size","map","comment","as","src","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","reply","replyIndex","value","onChange","e","target","placeholder","content","labelPosition","icon","primary","position","bottom","width","background","padding","borderTop","name","_c","$RefreshReg$"],"sources":["C:/Users/Shadan Syed Kazmi/Projects/msteams-clone/src/Components/TeamFeed.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n    CommentText,\r\n    CommentMetadata,\r\n    CommentGroup,\r\n    CommentContent,\r\n    CommentAvatar,\r\n    CommentActions,\r\n    CommentAuthor,\r\n    Comment,\r\n    Form,\r\n    FormTextArea,\r\n    Button,\r\n    Icon,\r\n} from 'semantic-ui-react';\r\n\r\nconst TeamFeed = () => {\r\n    const [comments, setComments] = useState([]);\r\n    const [newComment, setNewComment] = useState('');\r\n    const [replyText, setReplyText] = useState('');\r\n    const [replyingIndex, setReplyingIndex] = useState(null);\r\n\r\n    // Function to handle adding a new comment\r\n    const handleAddComment = () => {\r\n        if (newComment.trim() !== '') {\r\n            const currentDate = new Date().toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });\r\n            const commentData = {\r\n                author: 'You', // Replace with actual user information if available\r\n                timestamp: currentDate,\r\n                text: newComment,\r\n                replies: [],\r\n            };\r\n            setComments([...comments, commentData]);\r\n            setNewComment('');\r\n        }\r\n    };\r\n\r\n    // Function to handle adding a reply to a comment\r\n    const handleAddReply = (index) => {\r\n        if (replyText.trim() !== '') {\r\n            const currentDate = new Date().toLocaleString('en-US', { hour: 'numeric', minute: 'numeric', hour12: true });\r\n            const newReply = {\r\n                author: 'You', // Replace with actual user information if available\r\n                timestamp: currentDate,\r\n                text: replyText,\r\n            };\r\n            const updatedComments = [...comments];\r\n            updatedComments[index].replies.push(newReply);\r\n            setComments(updatedComments);\r\n            setReplyText('');\r\n            setReplyingIndex(null);\r\n        }\r\n    };\r\n\r\n    // Function to set the index of the comment being replied to\r\n    const startReply = (index) => {\r\n        setReplyingIndex(index);\r\n    };\r\n\r\n    return (\r\n        <div style={{ paddingTop: '7rem', paddingLeft: '100px', minHeight: '100vh' }}>\r\n            <CommentGroup threaded size='large'>\r\n                {comments.map((comment, index) => (\r\n                    <Comment key={index}>\r\n                        <CommentAvatar as='a' src='https://react.semantic-ui.com/images/avatar/small/matt.jpg' />\r\n                        <CommentContent>\r\n                            <CommentAuthor as='a'>{comment.author}</CommentAuthor>\r\n                            <CommentMetadata>\r\n                                <span>{comment.timestamp}</span>\r\n                            </CommentMetadata>\r\n                            <CommentText>{comment.text}</CommentText>\r\n                            <CommentActions>\r\n                                <a onClick={() => startReply(index)}>Reply</a>\r\n                            </CommentActions>\r\n                            {comment.replies.length > 0 && (\r\n                                <CommentGroup>\r\n                                    {comment.replies.map((reply, replyIndex) => (\r\n                                        <Comment key={`${index}-${replyIndex}`}>\r\n                                            <CommentAvatar as='a' src='https://react.semantic-ui.com/images/avatar/small/jenny.jpg' />\r\n                                            <CommentContent>\r\n                                                <CommentAuthor as='a'>{reply.author}</CommentAuthor>\r\n                                                <CommentMetadata>\r\n                                                    <span>{reply.timestamp}</span>\r\n                                                </CommentMetadata>\r\n                                                <CommentText>{reply.text}</CommentText>\r\n                                            </CommentContent>\r\n                                        </Comment>\r\n                                    ))}\r\n                                </CommentGroup>\r\n                            )}\r\n                            {replyingIndex === index && (\r\n                                <Form reply>\r\n                                    <FormTextArea\r\n                                        value={replyText}\r\n                                        onChange={(e) => setReplyText(e.target.value)}\r\n                                        placeholder='Write a reply...'\r\n                                    />\r\n                                    <Button\r\n                                        content='Add Reply'\r\n                                        labelPosition='left'\r\n                                        icon='edit'\r\n                                        primary\r\n                                        onClick={() => handleAddReply(index)}\r\n                                    />\r\n                                </Form>\r\n                            )}\r\n                        </CommentContent>\r\n                    </Comment>\r\n                ))}\r\n            </CommentGroup>\r\n            <div style={{ position: 'fixed', bottom: '0', width: '100%', background: 'white', padding: '1rem', borderTop: '1px solid #ddd' }}>\r\n                <Form reply>\r\n                    <FormTextArea\r\n                        value={newComment}\r\n                        onChange={(e) => setNewComment(e.target.value)}\r\n                        placeholder='Add a comment...'\r\n                    />\r\n                    <Button\r\n                        content='Add Comment'\r\n                        labelPosition='left'\r\n                        icon='edit'\r\n                        primary\r\n                        onClick={handleAddComment}\r\n                    />\r\n                    {/* Example upload button */}\r\n                    <Button icon labelPosition='left' primary>\r\n                        <Icon name='upload' />\r\n                        Upload\r\n                    </Button>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TeamFeed;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}