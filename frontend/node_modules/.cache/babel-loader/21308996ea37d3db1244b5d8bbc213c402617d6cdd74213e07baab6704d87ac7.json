{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shadan Syed Kazmi\\\\Projects\\\\msteams-clone\\\\frontend\\\\src\\\\Pages\\\\UserDetails.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState, useContext } from 'react';\n// import { Image, Icon, Segment, Header, Divider, Grid, Container, Form, Modal, Button } from 'semantic-ui-react';\n// import axios from 'axios';\n// import { authContext } from '../api/AuthContext';\n// import Cookies from 'js-cookie';\n// import { useNavigate } from 'react-router-dom';\n\n// const UserDetails = () => {\n//   const { user, logout } = useContext(authContext);\n//   const navigate = useNavigate();\n//   const [userDetails, setUserDetails] = useState(null);\n//   const [open, setOpen] = useState(false);\n//   const [formData, setFormData] = useState({\n//       firstName: '',\n//       lastName: '',\n//       email: '',\n//       gender: '',\n//       profileImage: null\n//   });\n\n//   useEffect(() => {\n//       const userId = Cookies.get('userId');\n//       if (userId) {\n//           fetchUserDetails(userId);\n//       }\n//   }, []);\n\n//   const fetchUserDetails = async (userId) => {\n//       try {\n//           const response = await axios.get(`http://localhost:8000/userAuth/${userId}`);\n//           setUserDetails(response.data);\n//           setFormData({\n//               firstName: response.data.firstName,\n//               lastName: response.data.lastName,\n//               email: response.data.email,\n//               gender: response.data.gender,\n//               profileImage: null\n//           });\n//       } catch (error) {\n//           console.error('Error fetching user details:', error);\n//       }\n//   };\n\n//   const handleInputChange = (e) => {\n//       const { name, value } = e.target;\n//       setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleImageChange = (e) => {\n//       setFormData({ ...formData, profileImage: e.target.files[0] });\n//   };\n\n//   const handleSubmit = async () => {\n//       const userId = Cookies.get('userId');\n//       const form = new FormData();\n//       form.append('firstName', formData.firstName);\n//       form.append('lastName', formData.lastName);\n//       form.append('email', formData.email);\n//       form.append('gender', formData.gender);\n//       if (formData.profileImage) {\n//           form.append('profileImage', formData.profileImage);\n//       }\n\n//       try {\n//           const response = await axios.put(`http://localhost:8000/userAuth/update/${userId}`, form, {\n//               headers: { 'Content-Type': 'multipart/form-data' }\n//           });\n//           setUserDetails(response.data);\n//           setOpen(false);\n//       } catch (error) {\n//           console.error('Error updating user details:', error);\n//       }\n//   };\n\n//   const handleDelete = async () => {\n//     const userId = Cookies.get('userId');\n//     try {\n//         await axios.delete(`http://localhost:8000/userAuth/delete/${userId}`);\n//         logout();\n//         navigate('/auth');\n//     } catch (error) {\n//         console.error('Error deleting user:', error);\n//     }\n// };\n\n//   if (!userDetails) {\n//       return <Segment loading style={{ minHeight: '100vh' }} />;\n//   }\n\n//   return (\n//       <Container style={{ marginTop: '2rem', background: '#f7f7f7', padding: '2rem', borderRadius: '10px' }}>\n//           <Grid columns={2} stackable>\n//               <Grid.Row>\n//                   <Grid.Column width={6}>\n//                       <Image\n//                           src={`http://localhost:8000/userAuth${userDetails.profileImageURL}` || 'https://react.semantic-ui.com/images/avatar/large/elliot.jpg'}\n//                           size='medium'\n//                           circular\n//                           centered\n//                       />\n//                   </Grid.Column>\n//                   <Grid.Column width={10}>\n//                       <Header as='h2'>{userDetails.firstName} {userDetails.lastName}</Header>\n//                       <Divider />\n//                       <p><Icon name='mail' /> {userDetails.email}</p>\n//                       <p><Icon name='user' /> Gender: {userDetails.gender}</p>\n//                       <p><Icon name='calendar' /> Joined in {new Date(userDetails.createdAt).getFullYear()}</p>\n//                       <p><Icon name='users' /> {userDetails.friendsCount} Friends</p>\n//                       <Button onClick={() => setOpen(true)}>Edit Profile</Button>\n//                       <Button color='red' onClick={handleDelete}>Delete Account</Button>\n//                   </Grid.Column>\n//               </Grid.Row>\n//           </Grid>\n\n//           <Modal open={open} onClose={() => setOpen(false)}>\n//               <Modal.Header>Edit Profile</Modal.Header>\n//               <Modal.Content>\n//                   <Form>\n//                       <Form.Input\n//                           label='First Name'\n//                           name='firstName'\n//                           value={formData.firstName}\n//                           onChange={handleInputChange}\n//                       />\n//                       <Form.Input\n//                           label='Last Name'\n//                           name='lastName'\n//                           value={formData.lastName}\n//                           onChange={handleInputChange}\n//                       />\n//                       <Form.Input\n//                           label='Email'\n//                           name='email'\n//                           value={formData.email}\n//                           onChange={handleInputChange}\n//                       />\n//                       <Form.Input\n//                           label='Gender'\n//                           name='gender'\n//                           value={formData.gender}\n//                           onChange={handleInputChange}\n//                       />\n//                       <Form.Input\n//                           label='Profile Image'\n//                           type='file'\n//                           name='profileImage'\n//                           accept='image/*'\n//                           onChange={handleImageChange}\n//                       />\n//                   </Form>\n//               </Modal.Content>\n//               <Modal.Actions>\n//                   <Button onClick={() => setOpen(false)}>Cancel</Button>\n//                   <Button positive onClick={handleSubmit}>Save</Button>\n//               </Modal.Actions>\n//           </Modal>\n//       </Container>\n\n//     );\n// };\n\n// export default UserDetails;\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { Image, Icon, Segment, Header, Divider, Grid, Container, Form, Modal, Button, Confirm } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { authContext } from '../api/AuthContext';\nimport Cookies from 'js-cookie';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserDetails = () => {\n  _s();\n  const {\n    user,\n    logout\n  } = useContext(authContext);\n  const navigate = useNavigate();\n  const [userDetails, setUserDetails] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    gender: '',\n    profileImage: null\n  });\n  useEffect(() => {\n    const userId = Cookies.get('userId');\n    if (userId) {\n      fetchUserDetails(userId);\n    }\n  }, []);\n  const fetchUserDetails = async userId => {\n    try {\n      const response = await axios.get(`http://localhost:8000/userAuth/${userId}`);\n      setUserDetails(response.data);\n      setFormData({\n        firstName: response.data.firstName,\n        lastName: response.data.lastName,\n        email: response.data.email,\n        gender: response.data.gender,\n        profileImage: null\n      });\n    } catch (error) {\n      console.error('Error fetching user details:', error);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleImageChange = e => {\n    setFormData({\n      ...formData,\n      profileImage: e.target.files[0]\n    });\n  };\n  const handleSubmit = async () => {\n    const userId = Cookies.get('userId');\n    const form = new FormData();\n    form.append('firstName', formData.firstName);\n    form.append('lastName', formData.lastName);\n    form.append('email', formData.email);\n    form.append('gender', formData.gender);\n    if (formData.profileImage) {\n      form.append('profileImage', formData.profileImage);\n    }\n    try {\n      const response = await axios.put(`http://localhost:8000/userAuth/update/${userId}`, form, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setUserDetails(response.data);\n      setOpen(false);\n    } catch (error) {\n      console.error('Error updating user details:', error);\n    }\n  };\n  const handleDelete = () => {\n    setOpen(true);\n  };\n  const handleConfirmDelete = async () => {\n    const userId = Cookies.get('userId');\n    try {\n      await axios.delete(`http://localhost:8000/userAuth/delete/${userId}`);\n      logout();\n      navigate('/auth');\n    } catch (error) {\n      console.error('Error deleting user:', error);\n    }\n  };\n  if (!userDetails) {\n    return /*#__PURE__*/_jsxDEV(Segment, {\n      loading: true,\n      style: {\n        minHeight: '100vh'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      marginTop: '2rem',\n      background: '#f7f7f7',\n      padding: '2rem',\n      borderRadius: '10px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      columns: 2,\n      stackable: true,\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 6,\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            src: `http://localhost:8000/userAuth${userDetails.profileImageURL}` || 'https://react.semantic-ui.com/images/avatar/large/elliot.jpg',\n            size: \"medium\",\n            circular: true,\n            centered: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 10,\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            as: \"h2\",\n            children: [userDetails.firstName, \" \", userDetails.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              name: \"mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 28\n            }, this), \" \", userDetails.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              name: \"user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 28\n            }, this), \" Gender: \", userDetails.gender]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              name: \"calendar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 28\n            }, this), \" Joined in \", new Date(userDetails.createdAt).getFullYear()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              name: \"users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 28\n            }, this), \" \", userDetails.friendsCount, \" Friends\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setOpen(true),\n            children: \"Edit Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"red\",\n            onClick: handleDelete,\n            children: \"Delete Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: () => setOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Confirm Delete Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Are you sure you want to delete your account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          negative: true,\n          onClick: handleConfirmDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 9\n  }, this);\n};\n_s(UserDetails, \"7CX1vI2cHkdK3+wjSdr+p3DijUE=\", false, function () {\n  return [useNavigate];\n});\n_c = UserDetails;\nexport default UserDetails;\nvar _c;\n$RefreshReg$(_c, \"UserDetails\");","map":{"version":3,"names":["React","useEffect","useState","useContext","Image","Icon","Segment","Header","Divider","Grid","Container","Form","Modal","Button","Confirm","axios","authContext","Cookies","useNavigate","jsxDEV","_jsxDEV","UserDetails","_s","user","logout","navigate","userDetails","setUserDetails","open","setOpen","formData","setFormData","firstName","lastName","email","gender","profileImage","userId","get","fetchUserDetails","response","data","error","console","handleInputChange","e","name","value","target","handleImageChange","files","handleSubmit","form","FormData","append","put","headers","handleDelete","handleConfirmDelete","delete","loading","style","minHeight","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","background","padding","borderRadius","children","columns","stackable","Row","Column","width","src","profileImageURL","size","circular","centered","as","Date","createdAt","getFullYear","friendsCount","onClick","color","onClose","Content","Actions","negative","_c","$RefreshReg$"],"sources":["C:/Users/Shadan Syed Kazmi/Projects/msteams-clone/frontend/src/Pages/UserDetails.jsx"],"sourcesContent":["// import React, { useEffect, useState, useContext } from 'react';\r\n// import { Image, Icon, Segment, Header, Divider, Grid, Container, Form, Modal, Button } from 'semantic-ui-react';\r\n// import axios from 'axios';\r\n// import { authContext } from '../api/AuthContext';\r\n// import Cookies from 'js-cookie';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const UserDetails = () => {\r\n//   const { user, logout } = useContext(authContext);\r\n//   const navigate = useNavigate();\r\n//   const [userDetails, setUserDetails] = useState(null);\r\n//   const [open, setOpen] = useState(false);\r\n//   const [formData, setFormData] = useState({\r\n//       firstName: '',\r\n//       lastName: '',\r\n//       email: '',\r\n//       gender: '',\r\n//       profileImage: null\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//       const userId = Cookies.get('userId');\r\n//       if (userId) {\r\n//           fetchUserDetails(userId);\r\n//       }\r\n//   }, []);\r\n\r\n//   const fetchUserDetails = async (userId) => {\r\n//       try {\r\n//           const response = await axios.get(`http://localhost:8000/userAuth/${userId}`);\r\n//           setUserDetails(response.data);\r\n//           setFormData({\r\n//               firstName: response.data.firstName,\r\n//               lastName: response.data.lastName,\r\n//               email: response.data.email,\r\n//               gender: response.data.gender,\r\n//               profileImage: null\r\n//           });\r\n//       } catch (error) {\r\n//           console.error('Error fetching user details:', error);\r\n//       }\r\n//   };\r\n\r\n//   const handleInputChange = (e) => {\r\n//       const { name, value } = e.target;\r\n//       setFormData({ ...formData, [name]: value });\r\n//   };\r\n\r\n//   const handleImageChange = (e) => {\r\n//       setFormData({ ...formData, profileImage: e.target.files[0] });\r\n//   };\r\n\r\n//   const handleSubmit = async () => {\r\n//       const userId = Cookies.get('userId');\r\n//       const form = new FormData();\r\n//       form.append('firstName', formData.firstName);\r\n//       form.append('lastName', formData.lastName);\r\n//       form.append('email', formData.email);\r\n//       form.append('gender', formData.gender);\r\n//       if (formData.profileImage) {\r\n//           form.append('profileImage', formData.profileImage);\r\n//       }\r\n\r\n//       try {\r\n//           const response = await axios.put(`http://localhost:8000/userAuth/update/${userId}`, form, {\r\n//               headers: { 'Content-Type': 'multipart/form-data' }\r\n//           });\r\n//           setUserDetails(response.data);\r\n//           setOpen(false);\r\n//       } catch (error) {\r\n//           console.error('Error updating user details:', error);\r\n//       }\r\n//   };\r\n\r\n//   const handleDelete = async () => {\r\n//     const userId = Cookies.get('userId');\r\n//     try {\r\n//         await axios.delete(`http://localhost:8000/userAuth/delete/${userId}`);\r\n//         logout();\r\n//         navigate('/auth');\r\n//     } catch (error) {\r\n//         console.error('Error deleting user:', error);\r\n//     }\r\n// };\r\n\r\n\r\n//   if (!userDetails) {\r\n//       return <Segment loading style={{ minHeight: '100vh' }} />;\r\n//   }\r\n\r\n//   return (\r\n//       <Container style={{ marginTop: '2rem', background: '#f7f7f7', padding: '2rem', borderRadius: '10px' }}>\r\n//           <Grid columns={2} stackable>\r\n//               <Grid.Row>\r\n//                   <Grid.Column width={6}>\r\n//                       <Image\r\n//                           src={`http://localhost:8000/userAuth${userDetails.profileImageURL}` || 'https://react.semantic-ui.com/images/avatar/large/elliot.jpg'}\r\n//                           size='medium'\r\n//                           circular\r\n//                           centered\r\n//                       />\r\n//                   </Grid.Column>\r\n//                   <Grid.Column width={10}>\r\n//                       <Header as='h2'>{userDetails.firstName} {userDetails.lastName}</Header>\r\n//                       <Divider />\r\n//                       <p><Icon name='mail' /> {userDetails.email}</p>\r\n//                       <p><Icon name='user' /> Gender: {userDetails.gender}</p>\r\n//                       <p><Icon name='calendar' /> Joined in {new Date(userDetails.createdAt).getFullYear()}</p>\r\n//                       <p><Icon name='users' /> {userDetails.friendsCount} Friends</p>\r\n//                       <Button onClick={() => setOpen(true)}>Edit Profile</Button>\r\n//                       <Button color='red' onClick={handleDelete}>Delete Account</Button>\r\n//                   </Grid.Column>\r\n//               </Grid.Row>\r\n//           </Grid>\r\n\r\n//           <Modal open={open} onClose={() => setOpen(false)}>\r\n//               <Modal.Header>Edit Profile</Modal.Header>\r\n//               <Modal.Content>\r\n//                   <Form>\r\n//                       <Form.Input\r\n//                           label='First Name'\r\n//                           name='firstName'\r\n//                           value={formData.firstName}\r\n//                           onChange={handleInputChange}\r\n//                       />\r\n//                       <Form.Input\r\n//                           label='Last Name'\r\n//                           name='lastName'\r\n//                           value={formData.lastName}\r\n//                           onChange={handleInputChange}\r\n//                       />\r\n//                       <Form.Input\r\n//                           label='Email'\r\n//                           name='email'\r\n//                           value={formData.email}\r\n//                           onChange={handleInputChange}\r\n//                       />\r\n//                       <Form.Input\r\n//                           label='Gender'\r\n//                           name='gender'\r\n//                           value={formData.gender}\r\n//                           onChange={handleInputChange}\r\n//                       />\r\n//                       <Form.Input\r\n//                           label='Profile Image'\r\n//                           type='file'\r\n//                           name='profileImage'\r\n//                           accept='image/*'\r\n//                           onChange={handleImageChange}\r\n//                       />\r\n//                   </Form>\r\n//               </Modal.Content>\r\n//               <Modal.Actions>\r\n//                   <Button onClick={() => setOpen(false)}>Cancel</Button>\r\n//                   <Button positive onClick={handleSubmit}>Save</Button>\r\n//               </Modal.Actions>\r\n//           </Modal>\r\n//       </Container>\r\n  \r\n//     );\r\n// };\r\n\r\n// export default UserDetails;\r\n\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport { Image, Icon, Segment, Header, Divider, Grid, Container, Form, Modal, Button, Confirm } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport { authContext } from '../api/AuthContext';\r\nimport Cookies from 'js-cookie';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst UserDetails = () => {\r\n    const { user, logout } = useContext(authContext);\r\n    const navigate = useNavigate();\r\n    const [userDetails, setUserDetails] = useState(null);\r\n    const [open, setOpen] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        gender: '',\r\n        profileImage: null\r\n    });\r\n\r\n    useEffect(() => {\r\n        const userId = Cookies.get('userId');\r\n        if (userId) {\r\n            fetchUserDetails(userId);\r\n        }\r\n    }, []);\r\n\r\n    const fetchUserDetails = async (userId) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:8000/userAuth/${userId}`);\r\n            setUserDetails(response.data);\r\n            setFormData({\r\n                firstName: response.data.firstName,\r\n                lastName: response.data.lastName,\r\n                email: response.data.email,\r\n                gender: response.data.gender,\r\n                profileImage: null\r\n            });\r\n        } catch (error) {\r\n            console.error('Error fetching user details:', error);\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    };\r\n\r\n    const handleImageChange = (e) => {\r\n        setFormData({ ...formData, profileImage: e.target.files[0] });\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        const userId = Cookies.get('userId');\r\n        const form = new FormData();\r\n        form.append('firstName', formData.firstName);\r\n        form.append('lastName', formData.lastName);\r\n        form.append('email', formData.email);\r\n        form.append('gender', formData.gender);\r\n        if (formData.profileImage) {\r\n            form.append('profileImage', formData.profileImage);\r\n        }\r\n\r\n        try {\r\n            const response = await axios.put(`http://localhost:8000/userAuth/update/${userId}`, form, {\r\n                headers: { 'Content-Type': 'multipart/form-data' }\r\n            });\r\n            setUserDetails(response.data);\r\n            setOpen(false);\r\n        } catch (error) {\r\n            console.error('Error updating user details:', error);\r\n        }\r\n    };\r\n\r\n    const handleDelete = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleConfirmDelete = async () => {\r\n        const userId = Cookies.get('userId');\r\n        try {\r\n            await axios.delete(`http://localhost:8000/userAuth/delete/${userId}`);\r\n            logout();\r\n            navigate('/auth');\r\n        } catch (error) {\r\n            console.error('Error deleting user:', error);\r\n        }\r\n    };\r\n\r\n    if (!userDetails) {\r\n        return <Segment loading style={{ minHeight: '100vh' }} />;\r\n    }\r\n\r\n    return (\r\n        <Container style={{ marginTop: '2rem', background: '#f7f7f7', padding: '2rem', borderRadius: '10px' }}>\r\n            <Grid columns={2} stackable>\r\n                <Grid.Row>\r\n                    <Grid.Column width={6}>\r\n                        <Image\r\n                            src={`http://localhost:8000/userAuth${userDetails.profileImageURL}` || 'https://react.semantic-ui.com/images/avatar/large/elliot.jpg'}\r\n                            size='medium'\r\n                            circular\r\n                            centered\r\n                        />\r\n                    </Grid.Column>\r\n                    <Grid.Column width={10}>\r\n                        <Header as='h2'>{userDetails.firstName} {userDetails.lastName}</Header>\r\n                        <Divider />\r\n                        <p><Icon name='mail' /> {userDetails.email}</p>\r\n                        <p><Icon name='user' /> Gender: {userDetails.gender}</p>\r\n                        <p><Icon name='calendar' /> Joined in {new Date(userDetails.createdAt).getFullYear()}</p>\r\n                        <p><Icon name='users' /> {userDetails.friendsCount} Friends</p>\r\n                        <Button onClick={() => setOpen(true)}>Edit Profile</Button>\r\n                        <Button color='red' onClick={handleDelete}>Delete Account</Button>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n\r\n            <Modal open={open} onClose={() => setOpen(false)}>\r\n                <Modal.Header>Confirm Delete Account</Modal.Header>\r\n                <Modal.Content>\r\n                    <p>Are you sure you want to delete your account?</p>\r\n                </Modal.Content>\r\n                <Modal.Actions>\r\n                    <Button onClick={() => setOpen(false)}>Cancel</Button>\r\n                    <Button negative onClick={handleConfirmDelete}>Delete</Button>\r\n                </Modal.Actions>\r\n            </Modal>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default UserDetails;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,KAAK,EAAEC,IAAI,EAAEC,OAAO,EAAEC,MAAM,EAAEC,OAAO,EAAEC,IAAI,EAAEC,SAAS,EAAEC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,OAAO,QAAQ,mBAAmB;AACxH,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,oBAAoB;AAChD,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAGrB,UAAU,CAACa,WA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}