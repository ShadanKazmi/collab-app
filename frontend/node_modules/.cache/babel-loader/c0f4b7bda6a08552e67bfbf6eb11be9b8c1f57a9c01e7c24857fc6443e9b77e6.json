{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shadan Syed Kazmi\\\\Projects\\\\msteams-clone\\\\frontend\\\\src\\\\Components\\\\TeamTasks.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Form, Header, List, Modal, Segment } from 'semantic-ui-react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeamTasks = () => {\n  _s();\n  const location = useLocation();\n  const teamId = location.state.teamId;\n  const [taskDetail, setTaskDetail] = useState('');\n  const [taskTitle, setTaskTitle] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [file, setFile] = useState(null);\n  useEffect(() => {\n    fetchTasks();\n  }, [teamId]);\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get(`http://localhost:8000/files/${teamId}`);\n      setTasks(response.data.uploadedContents);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n  const handleTaskSubmit = async () => {\n    const userId = Cookies.get('userId');\n    try {\n      const formData = new FormData();\n      formData.append('taskDetail', taskDetail);\n      formData.append('taskTitle', taskTitle);\n      formData.append('userId', userId);\n      if (file) {\n        formData.append('taskContent', file);\n      }\n      const response = await axios.post(`http://localhost:8000/files/${teamId}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setTasks([...tasks, response.data]);\n      setTaskDetail('');\n      setTaskTitle(''); // Clear taskTitle after submit\n      setFile(null);\n      setModalOpen(false);\n    } catch (error) {\n      console.error('Error creating task:', error);\n    }\n  };\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  return /*#__PURE__*/_jsxDEV(Segment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      as: \"h2\",\n      children: \"Team Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(List, {\n      divided: true,\n      relaxed: true,\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(List.Item, {\n        children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n          name: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n          children: [/*#__PURE__*/_jsxDEV(List.Header, {\n            children: task.taskDetail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(List.Description, {\n            children: [\"Created by: \", task.createdBy.firstName, \" \", task.createdBy.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(List.Description, {\n            children: [\"At: \", new Date(task.createdAt).toLocaleString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: () => setModalOpen(false),\n      onOpen: () => setModalOpen(true),\n      open: modalOpen,\n      trigger: /*#__PURE__*/_jsxDEV(Button, {\n        primary: true,\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 18\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: \"Create New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n            label: \"Task Title\",\n            placeholder: \"Enter task title...\",\n            value: taskTitle,\n            onChange: e => setTaskTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.TextArea, {\n            label: \"Task Detail\",\n            placeholder: \"Enter task details...\",\n            value: taskDetail,\n            onChange: e => setTaskDetail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n            type: \"file\",\n            label: \"Task Content (Optional)\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setModalOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          primary: true,\n          onClick: handleTaskSubmit,\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(TeamTasks, \"nKxF1zcIlhWwb/eI1Db/tx+XwUc=\", false, function () {\n  return [useLocation];\n});\n_c = TeamTasks;\nexport default TeamTasks;\nvar _c;\n$RefreshReg$(_c, \"TeamTasks\");","map":{"version":3,"names":["React","useState","useEffect","Button","Form","Header","List","Modal","Segment","axios","useLocation","Cookies","jsxDEV","_jsxDEV","TeamTasks","_s","location","teamId","state","taskDetail","setTaskDetail","taskTitle","setTaskTitle","tasks","setTasks","modalOpen","setModalOpen","file","setFile","fetchTasks","response","get","data","uploadedContents","error","console","handleTaskSubmit","userId","formData","FormData","append","post","headers","handleFileChange","e","target","files","children","as","fileName","_jsxFileName","lineNumber","columnNumber","length","divided","relaxed","map","task","Item","Icon","name","Content","Description","createdBy","firstName","lastName","Date","createdAt","toLocaleString","_id","onClose","onOpen","open","trigger","primary","Input","label","placeholder","value","onChange","TextArea","type","Actions","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Shadan Syed Kazmi/Projects/msteams-clone/frontend/src/Components/TeamTasks.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, Form, Header, List, Modal, Segment } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Cookies from 'js-cookie';\r\n\r\nconst TeamTasks = () => {\r\n  const location = useLocation();\r\n  const teamId = location.state.teamId;\r\n  const [taskDetail, setTaskDetail] = useState('');\r\n  const [taskTitle, setTaskTitle] = useState('');\r\n  const [tasks, setTasks] = useState([]);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [file, setFile] = useState(null);\r\n  \r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, [teamId]);\r\n\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:8000/files/${teamId}`);\r\n      setTasks(response.data.uploadedContents);\r\n    } catch (error) {\r\n      console.error('Error fetching tasks:', error);\r\n    }\r\n  };\r\n\r\n  const handleTaskSubmit = async () => {\r\n    const userId = Cookies.get('userId');\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('taskDetail', taskDetail);\r\n      formData.append('taskTitle', taskTitle);\r\n      formData.append('userId', userId);\r\n      if (file) {\r\n        formData.append('taskContent', file);\r\n      }\r\n      const response = await axios.post(`http://localhost:8000/files/${teamId}`, formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      setTasks([...tasks, response.data]);\r\n\r\n      setTaskDetail('');\r\n      setTaskTitle(''); // Clear taskTitle after submit\r\n      setFile(null);\r\n      setModalOpen(false);\r\n    } catch (error) {\r\n      console.error('Error creating task:', error);\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  return (\r\n    <Segment>\r\n      <Header as='h2'>Team Tasks</Header>\r\n      \r\n      {tasks.length > 0 ? (\r\n        <List divided relaxed>\r\n          {tasks.map(task => (\r\n            <List.Item key={task._id}>\r\n              <List.Icon name='file' />\r\n              <List.Content>\r\n                <List.Header>{task.taskDetail}</List.Header>\r\n                <List.Description>Created by: {task.createdBy.firstName} {task.createdBy.lastName}</List.Description>\r\n                <List.Description>At: {new Date(task.createdAt).toLocaleString()}</List.Description>\r\n              </List.Content>\r\n            </List.Item>\r\n          ))}\r\n        </List>\r\n      ) : (\r\n        <p>No tasks available.</p>\r\n      )}\r\n\r\n      <Modal\r\n        onClose={() => setModalOpen(false)}\r\n        onOpen={() => setModalOpen(true)}\r\n        open={modalOpen}\r\n        trigger={<Button primary>Create Task</Button>}\r\n      >\r\n        <Modal.Header>Create New Task</Modal.Header>\r\n        <Modal.Content>\r\n          <Form>\r\n            <Form.Input\r\n              label='Task Title'\r\n              placeholder='Enter task title...'\r\n              value={taskTitle}\r\n              onChange={(e) => setTaskTitle(e.target.value)}\r\n            />\r\n            <Form.TextArea\r\n              label='Task Detail'\r\n              placeholder='Enter task details...'\r\n              value={taskDetail}\r\n              onChange={(e) => setTaskDetail(e.target.value)}\r\n            />\r\n            <Form.Input\r\n              type='file'\r\n              label='Task Content (Optional)'\r\n              onChange={handleFileChange}\r\n            />\r\n          </Form>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button onClick={() => setModalOpen(false)}>Cancel</Button>\r\n          <Button primary onClick={handleTaskSubmit}>Create Task</Button>\r\n        </Modal.Actions>\r\n      </Modal>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default TeamTasks;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}